/* Generated by re2c 0.9.10.dev on Fri Aug 26 11:59:20 2005 */
#line 1 "OW_XMLUnescape.re"
/*******************************************************************************
* Copyright (C) 2001-2004 Vintela, Inc. All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  - Redistributions of source code must retain the above copyright notice,
*    this list of conditions and the following disclaimer.
*
*  - Redistributions in binary form must reproduce the above copyright notice,
*    this list of conditions and the following disclaimer in the documentation
*    and/or other materials provided with the distribution.
*
*  - Neither the name of Vintela, Inc. nor the names of its
*    contributors may be used to endorse or promote products derived from this
*    software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL Vintela, Inc. OR THE CONTRIBUTORS
* BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*******************************************************************************/

/**
 * @author Dan Nuffer
 */

/* a simple lexical scanner to escape xml */
#include "OW_config.h"
#include "OW_XMLUnescape.hpp"
#include "OW_StringBuffer.hpp"
#include "OW_XMLParseException.hpp"
#include "OW_Format.hpp"
#include <limits.h> // for CHAR_MAX
#include <stdlib.h> // for strtol

namespace OW_NAMESPACE
{

String XMLUnescape(const char* escapedText, unsigned len)
{
	StringBuffer rval(len);
	const char* begin = escapedText;
	const char* q;
	const char* thisTokStart = escapedText;
	#define YYCTYPE char
	#define YYCURSOR        begin
	#define YYLIMIT         begin
	#define YYMARKER        q
	#define YYFILL(n)
start:
	
#line 63 "OW_XMLUnescape.cpp"
{
	YYCTYPE yych;
	unsigned int yyaccept;
	goto yy0;
	++YYCURSOR;
yy0:
	if((YYLIMIT - YYCURSOR) < 6) YYFILL(6);
	yych = *YYCURSOR;
	if(yych <= 0x00)	goto yy5;
	if(yych != '&')	goto yy4;
	goto yy2;
yy2:	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	if(yych <= 'f'){
		if(yych <= '#'){
			if(yych >= '#')	goto yy7;
			goto yy3;
		} else {
			if(yych == 'a')	goto yy9;
			goto yy3;
		}
	} else {
		if(yych <= 'l'){
			if(yych <= 'g')	goto yy12;
			if(yych >= 'l')	goto yy11;
			goto yy3;
		} else {
			if(yych == 'q')	goto yy10;
			goto yy3;
		}
	}
yy3:
#line 92 "OW_XMLUnescape.re"
{ rval += *(YYCURSOR-1); thisTokStart = YYCURSOR; goto start; }
#line 98 "OW_XMLUnescape.cpp"
yy4:	yych = *++YYCURSOR;
	goto yy3;
yy5:	++YYCURSOR;
	goto yy6;
yy6:
#line 93 "OW_XMLUnescape.re"
{ return rval.releaseString(); }
#line 106 "OW_XMLUnescape.cpp"
yy7:	yych = *++YYCURSOR;
	if(yych <= '/')	goto yy8;
	if(yych <= '9')	goto yy34;
	if(yych == 'x')	goto yy33;
	goto yy8;
yy8:	YYCURSOR = YYMARKER;
	switch(yyaccept){
	case 0:	goto yy3;
	}
yy9:	yych = *++YYCURSOR;
	if(yych == 'm')	goto yy24;
	if(yych == 'p')	goto yy25;
	goto yy8;
yy10:	yych = *++YYCURSOR;
	if(yych == 'u')	goto yy19;
	goto yy8;
yy11:	yych = *++YYCURSOR;
	if(yych == 't')	goto yy16;
	goto yy8;
yy12:	yych = *++YYCURSOR;
	if(yych != 't')	goto yy8;
	goto yy13;
yy13:	yych = *++YYCURSOR;
	if(yych != ';')	goto yy8;
	goto yy14;
yy14:	++YYCURSOR;
	goto yy15;
yy15:
#line 65 "OW_XMLUnescape.re"
{ rval += '>'; thisTokStart = YYCURSOR; goto start; }
#line 137 "OW_XMLUnescape.cpp"
yy16:	yych = *++YYCURSOR;
	if(yych != ';')	goto yy8;
	goto yy17;
yy17:	++YYCURSOR;
	goto yy18;
yy18:
#line 66 "OW_XMLUnescape.re"
{ rval += '<'; thisTokStart = YYCURSOR; goto start; }
#line 146 "OW_XMLUnescape.cpp"
yy19:	yych = *++YYCURSOR;
	if(yych != 'o')	goto yy8;
	goto yy20;
yy20:	yych = *++YYCURSOR;
	if(yych != 't')	goto yy8;
	goto yy21;
yy21:	yych = *++YYCURSOR;
	if(yych != ';')	goto yy8;
	goto yy22;
yy22:	++YYCURSOR;
	goto yy23;
yy23:
#line 68 "OW_XMLUnescape.re"
{ rval += '\"'; thisTokStart = YYCURSOR; goto start; }
#line 161 "OW_XMLUnescape.cpp"
yy24:	yych = *++YYCURSOR;
	if(yych == 'p')	goto yy30;
	goto yy8;
yy25:	yych = *++YYCURSOR;
	if(yych != 'o')	goto yy8;
	goto yy26;
yy26:	yych = *++YYCURSOR;
	if(yych != 's')	goto yy8;
	goto yy27;
yy27:	yych = *++YYCURSOR;
	if(yych != ';')	goto yy8;
	goto yy28;
yy28:	++YYCURSOR;
	goto yy29;
yy29:
#line 69 "OW_XMLUnescape.re"
{ rval += '\''; thisTokStart = YYCURSOR; goto start; }
#line 179 "OW_XMLUnescape.cpp"
yy30:	yych = *++YYCURSOR;
	if(yych != ';')	goto yy8;
	goto yy31;
yy31:	++YYCURSOR;
	goto yy32;
yy32:
#line 67 "OW_XMLUnescape.re"
{ rval += '&'; thisTokStart = YYCURSOR; goto start; }
#line 188 "OW_XMLUnescape.cpp"
yy33:	yych = *++YYCURSOR;
	if(yych == ';')	goto yy8;
	goto yy39;
yy34:	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy35;
yy35:	if(yych <= '/')	goto yy8;
	if(yych <= '9')	goto yy34;
	if(yych != ';')	goto yy8;
	goto yy36;
yy36:	++YYCURSOR;
	goto yy37;
yy37:
#line 82 "OW_XMLUnescape.re"
{
		unsigned long lval = strtoul( thisTokStart + 2, NULL, 10 );
		if (lval > CHAR_MAX)
		{
			OW_THROWXML(XMLParseException::MALFORMED_REFERENCE, Format("XML escape code in unsupported range: %1", YYCURSOR - 1).c_str());
		}
		char val = lval;
		rval += val;
		thisTokStart = YYCURSOR; goto start;
	}
#line 214 "OW_XMLUnescape.cpp"
yy38:	++YYCURSOR;
	if(YYLIMIT == YYCURSOR) YYFILL(1);
	yych = *YYCURSOR;
	goto yy39;
yy39:	if(yych <= ';'){
		if(yych <= '/')	goto yy8;
		if(yych <= '9')	goto yy38;
		if(yych <= ':')	goto yy8;
		goto yy40;
	} else {
		if(yych <= 'F'){
			if(yych <= '@')	goto yy8;
			goto yy38;
		} else {
			if(yych <= '`')	goto yy8;
			if(yych <= 'f')	goto yy38;
			goto yy8;
		}
	}
yy40:	++YYCURSOR;
	goto yy41;
yy41:
#line 71 "OW_XMLUnescape.re"
{
		unsigned long lval = strtoul( thisTokStart + 3, NULL, 16 );
		if (lval > CHAR_MAX)
		{
			OW_THROWXML(XMLParseException::MALFORMED_REFERENCE, Format("XML escape code in unsupported range: %1", YYCURSOR - 1).c_str());
		}
		char val = lval;
		rval += val;
		thisTokStart = YYCURSOR; goto start;
	}
#line 248 "OW_XMLUnescape.cpp"
}
#line 94 "OW_XMLUnescape.re"


	return rval.releaseString();
}

} // end namespace OpenWBEM
