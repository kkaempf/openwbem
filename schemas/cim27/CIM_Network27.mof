// ===================================================================
// Title:       Network MOF Specification 2.7
// Filename:    CIM_Network27.mof
// Version:     2.7.0
// Status:      Preliminary
// Date:        06/13/2002
// ===================================================================
// Copyright 1998-2002 Distributed Management Task Force, Inc. (DMTF).
// All rights reserved.  
// DMTF is a not-for-profit association of industry members dedicated 
// to promoting enterprise and systems management and interoperability. 
// DMTF specifications and documents may be reproduced for uses
// consistent with this purpose by members and non-members, 
// provided that correct attribution is given. 
// As DMTF specifications may be revised from time to time, 
// the particular version and release date should always be noted.
//
// Implementation of certain elements of this standard or proposed 
// standard may be subject to third party patent rights, including 
// provisional patent rights (herein "patent rights"). DMTF makes 
// no representations to users of the standard as to the existence 
// of such rights, and is not responsible to recognize, disclose, or
// identify any or all such third party patent right, owners or 
// claimants, nor for any incomplete or inaccurate identification or 
// disclosure of such rights, owners or claimants. DMTF shall have no 
// liability to any party, in any manner or circumstance, under any 
// legal theory whatsoever, for failure to recognize, disclose, or 
// identify any such third party patent rights, or for such party’s
// reliance on the standard or incorporation thereof in its product, 
// protocols or testing procedures. DMTF shall have no liability to 
// any party implementing such standard, whether such implementation 
// is foreseeable or not, nor to any patent owner or claimant, and shall 
// have no liability or responsibility for costs or losses incurred if 
// a standard is withdrawn or modified after publication, and shall be
// indemnified and held harmless by any party implementing the 
// standard from any and all claims of infringement by a patent owner 
// for such implementations.
//
// For information about patents held by third-parties which have 
// notified the DMTF that, in their opinion, such patent may relate to 
// or impact implementations of DMTF standards, visit 
// http://www.dmtf.org/about/policies/disclosures.php.
// ===================================================================
// Description: These object classes defined the DMTF Network Model
//              and include classes to represent protocol interfaces 
//              and network/protocol services (such as VLANs, BGP,  
//          bridging and quality of service). 
//
//              The object classes below are listed in an order that
//          avoids forward references. Required objects, defined 
//          by other working groups, are omitted.
// ===================================================================
// References:  The information model represented here is based on
//              the following RFCs: BGP: 1657, 1700, 1771, 1965, 1966,
//              and 1997; Bridge: 1493 and 1525; VLAN includes
//              compliance with the 802.1q specification. Also, MAC
//              address formats are required to be in canonical form,
//              as stated in RFC 2469.
//
//              The QoS model is based on the IETF DiffServ RFCs
//              (2474, 2475, 2597, and 2598), as well as other
//              related drafts (the conceptual model, the MIB,
//              and to a small extent, the PIB).
// ===================================================================
// Date:  04/21/1999 - Initial release of the model, consolidating 
//                      each of the sub-models into a single spec
//                      for CIM V2.2
//        05/06/1999 - Incorporated CR324, deleted references to the 
//                      User Model (this functionality will be added 
//                      back into CIM in V2.3)
//        05/16/1999 - Fixed typos; Incorporated Novell
//                      member review comments
//        06/10/1999 - Added CRs 308a, 324a, 356a, 390a, 391b, 
//                      404a, and 413
//        07/03/1999 - Miscellaneous changes according to CR cisco022
//        02/26/2000 - Incorporated the following CRs: 448b (this added
//                      ManagedElement to the Core model); CIMCR 454 
//                      and 455 (misc changes to the Network model)
//        02/27/2000 - Incorporated CR464, which promotes the
//                      CIM_ServiceComponent and the
//                      CIM_AdapterActiveConnection classes to Core
//        06/18/2000 - Integrated the QoS model into the Network model
//                      (CR499)
// (ERRATA)            (CR500) - Corrected keys of BGPPathAttributes
// (ERRATA)            (CR501) - Correced cardinality of Forwarded
//                      Routes (Antecedent must be Min (1), Max (1))
// (ERRATA)            (CR506) - Corrected subclassing of Network
//                      ServicesInAdminDomain
// (ERRATA)            (CR508) - Corrected 3 BGP-specific 
//                      associations - EGPRouteCalcDependency, 
//                      BGPAttributesForRoute and BGPPeerUsesRouteMap
// (ERRATA)            (CR510) - Removed subclassing from CIM_
//                      Dependency to not force reference name changes
//                      (LogicalNetworkService and NetworksInAdminDomain)
// (ERRATA)            (CR512) - SwitchPortXXXStatistics should 
//                      subclass from SAPStatisticalInformation (not
//                      SAPStatistics) and TransparentBridgingStatic
//                      Forwarding was incorrectly named SwitchService
//                      StaticForwarding (cut and paste error)
//                     Added MOF for the following CRs:
//                      CR483 updated the enum for ForwardingService.
//                        ProtocolType
//                      CR484 added "IB" and "FC" to various enums
//                      CR485 created PortImplementsEndpoint 
//                      CR489 added "Policy Repository" to AdminDomain's
//                        NameFormat enumeration
//                      CR490a added missing associations, FilterListIn
//                        System and FilterEntryInSystem
//                      CR492a added FilterEntryBase, subclasses Filter
//                        Entry from it and updates EntriesInFilterList
//                      CR496 corrected use of SQL reserved words
//                      CR498 added to the existing enums, and defined
//                        two new properties of FilterEntry
//                      CR502 added IsNegated boolean to FilterEntryBase
//                      CR503 - Member comments on QoS 
//                      CR507a removed Min (1) or Max (1) from some
//                       association references, to generalize them
//                      CR509 added Override qualifier which was 
//                       missing on three associations 
//                      CR521, 522 and 523 - Miscellaneous QoS Device
//                       changes to generalize, simplify and better
//                       correspond to the IETF DiffServ MIB and Model
//        01/20/2001 - CR552 (Add ProtocolType enum to ProtocolEndpoint)
//                     CR553 (Add NextHopRouting, subclass IPRoute from
//                            it and update)
//                     CR554 (Misc changes in descriptions for FilterEntry
//                            and AdministrativeDistance)
//                     CR556 (Update Descriptions for
//                            TransparentBridgingService,
//                            SpanningTreeService and SoureRouteService)
//                     CR559a (Errata-Use of SQL reserved word in 
//                             CIM_RouteCalculationService (Type) )
//                     CR561 (Need to add Override qualifiers to the 
//                            CollectedBufferPool association)
//                     CR564 (Move AdminDomain to the Core Model, change
//                            to concrete, and update description)
//                     CR565 (Update description for BridgeAddress property
//                            of SwitchService to be more generic)
//                     CR566 (ERRATA - Align with IETF DiffServ Mode)
//                     CR567 (Update FilterList.Direction)
//        10/11/2001 - CR589 (Correct propagated keys of AdminDistance)
//                     CR592a (Correct propagated keys of IPRoute and
//                             LogicalNetwork)
//                     CR615b (Add IPHeadersFilters)
//        12/02/2001 - CR656 (Replace MOF lost after V2.4 and compile
//                       errors) 
//                     CR659 (Correct subclassing of PrecedenceService)
//        03/10/2002 - CR736 (Provide for address ranges in IPHeaders
//                       Filter, update several descriptions and define
//                       HdrDSCPs as an array)
//                     CR745 (Style and minor inconsistencies corrected
//                       in moving to V2.6 Final; Version qualifier 
//                       added to all classes)
//        06/04/2002 - Company review comments for Final V2.6 release
// (ERRATA)            (CR802) - Datatype for LogicalNetwork.NetworkType
//                      should be uint16, not string 
// (ERRATA)            (CR843) - Datatype for ProtocolEndpoint.
//                      ProtocolType should be uint16, not string / 
//                      Add to the enum to address all DMTF subclasses
//        06/11/2002 - 2.7 Preliminary
//                     CR662 - Deprecate NetworkService.
//                     - Deprecate NetworkServicesInAdminDomain
//                     - Modify Descriptions of all subclasses of 
//                       NetworkService to clarify current status.  
//                     - These are RouteCalculationService, Forwarding
//                       Service, and QoSService.
//                     - Deprecate LogicalNetworkService
//                     - Promote ProvidersEndpoint.Antecedent from 
//                       NetworkService and Service.
//                     - Deprecate HostingRoutingServices, Hosted
//                       ForwardingService. 
//                     - Update description for SourceRoutingService.
//                     CR696 - Add M.3100 concepts of Network and Pipe.
//                     - Add HostedPipe, EndpointOfPipe, and 
//                       PipeComposition
//                     CR751 - Move ActiveConnection to CORE
//                     CR788 - Add classes to support OSPF
//                     CR789 - Add TCP and UDP Endpoints
//                     CR790 - Add classes to support MPLS
//                     CR791 - Add classes to support SNMP services
//                     CR792 - Add the Composition qualifer to 
//                       BGPClustersInAS, RoutersInAS, ASBGPEndpoints,
//                       and Confederation
//                     CR793 - Add the Abstract qualifier to 
//                         FilterEntryBase and update the description.
//                    	 - Update the description for EntriesInFilterList.
//                         EntrySequence
//                       - Deprecate FilterEntriesInSystem and 
//                         FilterListInSystem
//                       - Add HostedFilterEntryBase and HostedFilterList
//                       - Add 8021Filter and PreambleFilter
//                       - FilterEntry.TrafficType needs an Other value 
//                         in its enumerated list.  Also an 
//                         OtherTrafficType property should be added.  
//                     CR794 - Updates to PacketSchedulingService:
//                           - Update description.
//			     - Change subclassing from ForwardingService 
//                             to ConditioningService
//	    (ERRATA)  	     - Change the enumeration for SchedulerType
//                       - Update description for OtherSchedulerType
//                       - Add NextScheduler Association
//                       - Add NonWorkConservingSchedulingService
//                         and FailNextScheduler  
//          (ERRATA)     - Remove PrioritySchedulingService, 
//                         PriorityBandwidthSchedulingService, 
//                         BandwidthSchedulingService, 
//                         RoundRobinPacketSchedulingService and 
//                         WeightedRoundRobinPacketSchedulingService
//                       - Deprecate SchedulerUsed
//		       CR795 - Updates to DropperService:
//                           - Update description.
//          (ERRATA)         - Change the enumeration for DropperType.
//                           - Deprecate AlwaysDrop property.
//                           - Add DropFrom property.
//                       - Updates to REDDropperService:
//                           - Update description.
//                           - Update description of MinQueueThreshold 
//                             and MaxQueueThreshold properties.
//                           - Add ThresholdUnits property
//          (ERRATA)         - Change the type of the StartProbability
//                             and StopProbability properties.
//                       - Add HeadTrailDropper
//                       - Deprecate WeightedREDDropperService
//                       - Updates to QueuingService:     
//                           - Update description 
//          (ERRATA)         - Remove the SmoothingWeight, TimeInterval, 
//                             and GiveExcessCapacity properties.
//                           - Add CurrentQueueDepth and DepthUnits 
//                             properties.
//                       - Add DropThresholdCalculationService     
//                       - Add QueueAllocation.AllocationPercentage     
//                       - Deprecate QueueHierarchy     
//                       - Add CalculationServiceForDropper
//                       - Add CalculationBasedOnQueue
//                       - Add HeadTailDropQueueBinding     
//                     CR796 - Updates to MarkerService:
//                           - Update description
//                           - Remove the CanRemark, RemarkType, 
//                             OtherRemarkType, and RemarkValue properties.
//       		 - Add PreambleMarkerService
//                       - Add ToSMarkerService
//                       - Add DSCPMarkerService
//                       - Add 8021QMarkerService
//                     CR797 - Update description for MeterService and
//                             expand the abbreviations for the MeterType 
//                             property.
//                       - Update description for AverageRateMeterService
//          (ERRATA)     - Change the data type for AverageRateMeterService.
//                             AverageRate from real32 to uint32 and
//                             change the units for AverageRateMeterService.
//                             DeltaInterval from Nanosecords to MicroSeconds
//                       - Update the description for EWMAMeterService
//          (ERRATA)     - Change the data type for EWMAMeterService 
//                             .AverageRate and.Gain from real32 to uint32.
//          (ERRATA)     - Change EWMAMeterService.DeltaIntervals from
//                             nanoseconds to microseconds.
//                       - Update the description for TokenBucketMeterService
//                       - Change the data type for TokenBucketMeterService
//                             .AverageRate, .PeakRate, .BurstSize, and
//                             .ExcessBurstSize from real32 to uint32.
//          (ERRATA)     - Fix subclassing of NextServiceAfterMeter, fix
//                             misspelled property name, and update 
//                             the enumeration values for MeterResult.
//                     CR798 - Updates to ClassifierService:
//                           - Update description
//                           - Remove ClassifierType, OtherClassifierType,
//                             and HaveClassifiedPacket properties
//                       - Add ClassifierElement
//                       - Add ClassifierElementInClassifierService
//                       - Add ClassifierElementUsesFilterList
//                       - Add NextServiceAfterClassifierElement
//                       - Deprecate ClassifierFilterSet       
//                     CR799 - Updates to QoSService:       
//                           - Update the description
//          (ERRATA)         - Change the subclassing 
//                       - Add Composition qualifier to QoSSubService     
//                       - Update description for QoSConditioningSubService
//                             and remove the Max (1) from the "Group"
//                             reference.     
//                       - Update the description for DiffServService
//                       - Deprecate DiffServService.DSCP
//                       - Add DiffServService.PHBID  
//                       - Update the description for AFService and
//                         its ClassNumber and DropperNumber properties.
//                       - Add FlowService     
//                       - Deprecate PrecedenceService     
//                       - Deprecate 8021PService    
//                       - Deprecate EFService    
//                     CR800 - Updates to ConditioningService:
//                           - Update the class description
//                           - Deprecate the Enabled property
//          (ERRATA)         - Change the subclassing
//                       - Deprecate ConditioningServiceOnEndpoint
//                       - Add IngressConditioningServiceOnEndpoint        
//                       - Add EgressConditioningServiceOnEndpoint        
//                       - Updates for NextService:
//                           - Update the class description
//          (ERRATA)         - Remove the TrafficClass property
//                           - Fix spelling of reference (Preceeding
//                             should be Preceding)
//                       - Remove ModelCorrespondence for TrafficClass
//                             from FilterEntry.TrafficClass.
//                     CR803 - Deprecate IPAddressRange       
//                       - Add RangeOfIPAddresses     
//                     CR804 - Updates to LANEndpoint:
//                           - Update description for .LANID
//                           - Deprecate .LANType and .OtherLANType
//                       - Updates to IPProtocolEndpoint:
//                           - Deprecate .Address
//                           - Add .IPv4Address, .IPv6Address, and
//                             .PrefixLength.       
//                           - Update several property descriptions 
//                       - Update description for IBSubnet.SubnetMask
//                             and add .PrefixLength     
//                     CR805 - Deprecate NextHopRouting, IPRoute,
//                             CalculatedRoutes, RouteFowardedByService,
//                             and ForwardedRoutes.
//                             Add NextHopRoute, HostedRoute, 
//                             NextHopIPRoute, MPLSSpecifiedRoute,
//                             RouteUsesEndpoint, AssociatedNextHop,
//                             MPLSSpecifiedNextHop, MPSLComputerNextHop,
//                             RouteSpecifiedForLSP       
//     		       CR806 - Update the OSPF model to take into
//                             account the RangeOfIPAddresses vs.
//                             IPAddressRange.
//                            
// ===================================================================
// Generic Pragmas
// ===================================================================
#pragma Locale ("en_US")


// ==================================================================
//     NetworkService
// ==================================================================
    [Abstract, Version ("2.7.0"), 
     Deprecated {"CIM_Service"}, Description (
      "This is an abstract base class, derived from the Service "
      "class. It is deprecated in Version 2.7 with the "
      "recommendation that the Service class be subclassed "
      "instead. Distinguishing between services that modify "
      "traffic versus supporting basic communication has not "
      "proved useful.") ]
class CIM_NetworkService : CIM_Service {

        [Deprecated {"No value"}, Description (
         "This is a free-form array of strings that provide "
         "descriptive words and phrases that can be used in queries. "
         "To-date, this property has not been implemented, since it "
         "is not standardized. Also, if this was a necessary query "
         "construct, then it would be required higher in the "
         "inheritance hierarchy.  The latter has not proven "
         "necessary.  Therefore, the property is deprecated.") ] 
    string Keywords [ ];

        [Deprecated {"CIM_ServiceAccessPoint"}, Description (
         "This is a URL that provides the protocol, network "
         "location, and other service-specific information required "
         "in order to access the service. It is deprecated with the "
         "recommendation that ServiceAccessPoint be subclassed and "
         "instantiated instead.") ]
    string ServiceURL;

        [Deprecated {"No value"}, Description (
         "This is a free-form array of strings that specify any "
         "specific pre-conditions that must be met in order for this "
         "service to start correctly. It was expected that subclasses "
         "would refine the inherited StartService() method "
         "to suit their specific needs. To-date, this refinement "
         "has not been necessary. Also, the property is not very "
         "useful, since it is not standardized.  If this was a "
         "necessary construct, then it would be required higher in the "
         "inheritance hierarchy (on Service). The latter has not "
         "proven true. Therefore, the property is deprecated.") ] 
    string StartupConditions [ ];

        [Deprecated {"No value"}, Description (
         "This is a free-form array of strings that specify any "
         "specific parameters that must be supplied to the "
         "StartService() method in order for this service to start "
         "correctly. It was expected that subclasses would refine the "
         "inherited StartService() methods to suit their specific "
         "needs. To-date, this refinement has not been necessary. "
         "If indeed the method were refined, then its parameters "
         "would more formally convey this information. Therefore, "
         "the property is deprecated.") ] 
    string StartupParameters [ ];
};

// ==================================================================
//     NetworkServicesInAdminDomain
// ==================================================================
        [Association, Version ("2.7.0"), 
         Deprecated {"CIM_Dependency"}, Description (
         "This association establishes the Dependency relationships "
         "that exist between an administrative domain and the Network"
         "Services that it hosts. It is deprecated since "
         "AdminDomains can contain any ManagedSystemElements. There "
         "is no special relationship needed for NetworkServices. In "
         "addition, the Min (1) cardinality on AdminDomain is "
         "not valid – since it may not be possible to define every "
         "NetworkService in the context of one or more Domains.") ]
class CIM_NetworkServicesInAdminDomain : CIM_Dependency {
        
        [Override ("Antecedent"), Min (1), 
         Deprecated {"CIM_Dependency.Antecedent"}, Description (
         "The AdminDomain that hosts and administers the various "
         "network services.") ]
    CIM_AdminDomain REF Antecedent;
        [Override ("Dependent"), 
         Deprecated {"CIM_Dependency.Dependent"}, Description (
         "The network service that is hosted in the administrative "
         "domain.") ] 
    CIM_NetworkService REF Dependent;
};

// ==================================================================
//    ForwardingService
// ==================================================================
        [Version ("2.7.0"), Description (
         "This class represents the functions used in forwarding "
         "network traffic. Its instances act on packets received"
         "from one or more ProtocolEndpoints or Services, and "
         "drop (discard), or send those packets to one or more "
         "other ProtocolEndpoints or Services. The explicit "
         "Endpoints being forwarded between, are described using the "
         "ForwardsAmong association (or one of its subclasses). "
         "\n\n"
         "ForwardingService is different than RouteCalculation"
         "Service in that it represents a way to forward "
         "traffic independent of calculating routing information "
         "(e.g., using static routing). Generally, the Endpoints "
         "among which a ForwardingService routes data are at the "
         "same protocol layer and are usually of similar types, "
         "or of the same type. This kind of service is used in the  "
         "implementation of routers, switches and other network "
         "devices. "
         "\n\n"
         "Examining the ForwardingService class definition, "
         "note that its superclass NetworkService is deprecated. "
         "Therefore, NetworkService’s properties need not be "
         "implemented in an instance of ForwardingService. "
         "Unfortunately, NetworkService cannot be removed from "
         "the object hierarchy without a major Schema release. "
         "When/if this occurs, the NetworkService superclass will "
         "be removed, and ForwardingService will subclass "
         "from CIM_Service directly. Also note that there are "
         "a large number of additional protocols "
         "that are not currently modeled.  These will be added "
         "over time.") ]
class CIM_ForwardingService : CIM_NetworkService {
        [Description (
         "This defines the type of protocol that is being "
         "forwarded."),
         ValueMap {"0", "1", "2", "3", "4", "5", "6", "7", "8",
          "9", "10", "11", "12", "13", "14", "15", "16",
          "17", "18", "19"},
         Values {"Unknown", "Other", "IPv4", "IPv6", "IPv4/IPv6",
          "IPX", "AppleTalk", "DECnet", "SNA", "CONP",
          "CLNP", "VINES", "XNS", "ATM", "Frame Relay", 
          "Ethernet", "TokenRing", "FDDI", "Infiniband", 
          "Fibre Channel"} ]
    uint16 ProtocolType;
        [MaxLen(32), Description (
         "This defines the type of protocol that is being forwarded "
         "when the value of the ProtocolType attribute is 1 (i.e., "
         "\"Other\"). This provides for future extensibility."),
         ModelCorrespondence {"CIM_ForwardingService.ProtocolType"} ]
    string OtherProtocolType;
};

// ==================================================================
//     AutonomousSystem
// ==================================================================
          [Version ("2.6.0"), Description (
         "An Autonomous System (AS) is a fundamental concept in "
         "networking. An AS provides a structured view of routing by "
         "segregating the system that is using routing (e.g., the "
         "Internet, or an extranet) into a set of separately "
         "administered domains that each have their own independent "
         "routing policies. These domains are called  autonomous "
         "systems."
         "\n\n"
         "The classic definition of an AS, from RFC1771, is '...a set "
         "of  routers under a single technical administration, using "
         "an interior gateway protocol and common metrics to route "
         "packets within the AS, and using an exterior gateway "
         "protocol to route packets to other ASs'. The RFC continues: "
         "'Since this classic definition was developed, it has become "
         "common for a single AS to use several interior gateway "
         "protocols and sometimes several sets of metrics "
         "within an AS.  The use of the term Autonomous System here "
         "stresses the fact that, even when multiple IGPs and metrics "
         "are used, the administration of an AS appears to other ASs "
         "to have a single coherent interior routing plan and "
         "presents a consistent picture of what destinations are "
         "reachable through it.'") ]
class CIM_AutonomousSystem : CIM_AdminDomain {
        [Description (
           "An ASNumber is an integer between 1 and 65535, with the "
         "range 64512 through 65535 reserved for private use. Every "
         "AS has a unique AS number, which is assigned to it by an "
         "Internet Registry or a provider. IANA assigns and "
         "administers AS numbers.") ]
    uint16 ASNumber;
        [Description (
         "IsSingleHomed is a boolean that, when its value is TRUE, "
         "indicates that this AS reaches networks outside of its "
         "domain through a single exit point. Whether a given AS is "
         "single-homed or not has important ramifications for BGP "
         "configuration.") ]
    boolean IsSingleHomed;
        [Description (
         "IsTransit is a boolean that, when its value is TRUE, "
         "indicates that this AS will advertise routes that it "
         "learns from other ASs. A non-transit AS will only "
         "advertise its own routes.") ]
    boolean IsTransit;
        [Description (
         "RequireIGPSync is a boolean that, when its value is TRUE, "
         "indicates that this AS must obey the following BGP rule: a "
         "BGP router should not advertise destinations learned from "
         "internal BGP neighbors to external BGP destinations unless "
         "those destinations are also known via some internal gateway "
         "protocol. Otherwise, a BGP router may receive traffic that "
         "cannot yet be routed. However, since this is a costly "
         "choice, it is common practice to allow this rule to be "
         "broken under certain carefully controlled circumstances.") ]
    boolean RequireIGPSync;
        [Description (
         "RoutingUpdateSource defines how routing information is to "
         "be injected into BGP. Statically injected routes are "
         "maintained by the routing table and are independent of the "
         "status of the networks that they refer to. This is done by "
         "defining static routes in the BGP routing table. "
         "Dynamically injected routes are of two types. "
         "Dynamic routes refer to distributing all of the IGP routes "
         "into BGP. Semi-dynamic routes define a set of specific IGP "
         "routes that will be injected into BGP."),
         ValueMap {"0", "1", "2", "3"},
         Values {"Unknown", "Static", "Dynamic", "Semi-Dynamic"} ]
    uint16 RoutingUpdateSource; 
        [Description (
         "Route aggregation refers to summarizing ranges of routes "
         "into one or more aggregate routes. This is done to minimize "
         "the number of routes in the global routing table. A "
         "potential drawback is that specific path information (e.g., "
         "AS_Path attribute value) is lost, which may lead to "
         "potential routing loops. There are a variety of ways to "
         "ensure that this does not happen. Note, however, that BGP4 "
         "is required to do this. "
         "\n\n"
         "There are many ways to form aggregate routes. The following "
         "are the most popular: 'Aggregate only', where only the "
         "aggregate is advertised, and all of its more specific "
         "routes are suppressed; 'Aggregate Plus Specific Routes', "
         "where both the aggregate as well as its more specific "
         "routes are advertised (e.g., send the aggregate to the NAP, "
         "but send the more specific routes to providers); "
         "'Aggregate Based on a Subset of Specific Routes', where the "
         "aggregate route is formed by looking at certain more "
         "specific routes and forming an aggregate on them, "
         "suppressing all others."),
         ValueMap {"0", "1", "2", "3", "4"},
         Values {"Unknown", "None", "Aggregate Only ",
          "Aggregate And All Specific Routes ",
          "Aggregate Based on Subset of Specific Routes"} ]
    uint16 AggregationType;
};

// ==================================================================
//     LogicalNetwork
// ==================================================================
        [Version ("2.6.0"), Description (
         "A LogicalNetwork groups together a set of "
         "ProtocolEndpoints of a given type which are able to "
         "communicate with each other directly. It is used for "
         "describing the characteristics of the grouping "
         "and/or its associated medium. A LogicalNetwork "
         "represents the ability to send and/or receive data "
         "over a network.") ]
class CIM_LogicalNetwork : CIM_CollectionOfMSEs {
        [Propagated ("CIM_AdminDomain.CreationClassName"), Key, 
           MaxLen (256), Description (
         "The scoping AdminDomain's CreationClassName.") ] 
    string SystemCreationClassName;
        [Propagated ("CIM_AdminDomain.Name"), Key, MaxLen (256),
           Description ("The scoping AdminDomain's Name.") ] 
    string SystemName;
        [Key, MaxLen (256), Description (
         "CreationClassName indicates the name of the class or the "
         "subclass used in the creation of an instance. When used "
         "with the other key properties of this class, this property "
         "allows all instances of this class and its subclasses to "
         "be uniquely identified.") ]
    string CreationClassName;
        [Key, MaxLen (256), Description (
         "The Name property defines the label by which the object is "
           "known.") ] 
    string Name;
        [Description (
         "Type is an enumeration that provides additional "
         "information that can be used to help categorize and "
         "classify different instances of this class. "
         "\n\n"
         "Subclasses should ensure that they are of the "
         "appropriate type defined in the Type enumeration. "
         "That is, the IPSubnet subclass should define its "
         "property as either IPv4 or IPv6, as opposed to, "
         "for example, ATM."),
         ValueMap {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
          "10", "11", "12", "13", "14", "15", "16", "17", "18"},
         Values {"Unknown", "Other", "IPv4", "IPv6",
          "IPX", "AppleTalk", "DECnet", "SNA", "CONP",
          "CLNP", "VINES", "XNS", "ATM", "Frame Relay",
          "Ethernet", "TokenRing", "FDDI", "Infiniband", 
          "Fibre Channel"},
         ModelCorrespondence {
          "CIM_LogicalNetwork.OtherTypeDescription"} ]
   uint16 NetworkType;
        [MaxLen(64), Description (
         "A string describing the type of protocol that is "
         "being run by this LogicalNetwork, when the value of "
         "the Type property (or any of its subclasses) "
         "is set to 1 (i.e., \"Other\"). This property "
         "should be set to NULL when the Type property is "
         "any value other than 1."),
           ModelCorrespondence {"CIM_LogicalNetwork.NetworkType"} ]
   string OtherTypeDescription;
};

// ==================================================================
//     LogicalNetworkService
// ==================================================================
        [Association, Version ("2.7.0"), 
         Deprecated {"No value"}, Description (
         "A LogicalNetworkService represents network services that "
         "either originate and/or terminate in a LogicalNetwork. This "
         "association is deprecated since LogicalNetworks aggregate "
         "ProtocolEndpoints, not their backing Services. ") ]
class CIM_LogicalNetworkService { 

        [Key, Deprecated {"No value"}, Description (
         "The LogicalNetwork that contains the network service.") ]
    CIM_LogicalNetwork REF Network;

        [Key, Deprecated {"No value"}, Description (
         "The NetworkService that is running in the LogicalNetwork. ") ] 
    CIM_NetworkService REF NetworkService;

        [Deprecated {"No value"}, Description (
         "An enumeration that explicitly defines this network service "
         "as originating, terminating, or residing in this "
         "LogicalNetwork. "),
        ValueMap {"0", "1", "2", "3"},
        Values {"Unknown", "Originates In", "Terminates In",
         "Resides In"} ]
    uint16 ContainmentType;
};

// ==================================================================
//     IPSubnet
// ==================================================================
        [Version ("2.7.0"), Description (
         "An IPSubnet represents a group of related "
         "IPProtocolEndpoints that can communicate with each other "
         "directly using IP. It is used for describing the "
         "characteristics of the grouping.") ]
class CIM_IPSubnet : CIM_LogicalNetwork {
        [Description (
         "The IP address of the entire subnet, formatted according "
         "to the appropriate convention as defined in the AddressType "
         "property of this class.") ]
    string SubnetNumber;
        [Description (
         "The mask for the starting IPv4 address of the IPSubnet, "
         "if needed (i.e., if the AddressType property is 1, \"IPv4\").") ] 
    string SubnetMask;
        [Experimental, Description (
         "The prefix length for IPv6 addresses in the IPSubnet, "
         "if needed (i.e., if the AddressType property is 2, \"IPv6\".") ]
    uint8 PrefixLength;
        [Description (
         "An enumeration that describes the format of the address "
         "properties in IPSubnet."),  
         ValueMap {"0", "1", "2"},
         Values {"Unknown", "IPv4", "IPv6"} ]
    uint16 AddressType;
};

// ==================================================================
//     ProtocolEndpoint
// ==================================================================
        [Version ("2.6.0"), Description (
         "A communication point from which data may be sent or "
         "received. ProtocolEndpoints link router interfaces and "
         "switch ports to LogicalNetworks.") ]
class CIM_ProtocolEndpoint : CIM_ServiceAccessPoint {
        [Override ("Name"), MaxLen(256), Description (
         "A string which identifies this ProtocolEndpoint with either "
         "a port or an interface on a device. To ensure uniqueness, "
         "the Name property should be prepended or appended with "
         "information from the Type or OtherTypeDescription "
         "properties. The method chosen is described in the "
         "NameFormat property of this class.") ]
    string Name;
        [MaxLen (256), Description (
         "NameFormat contains the naming heuristic that is chosen to "
         "ensure that the value of the Name property is unique. For "
         "example, one might choose to prepend the name of the port "
         "or interface with the Type of ProtocolEndpoint that this "
         "instance is (e.g., IPv4) followed by an underscore.") ]
    string NameFormat;
        [Description (
         "ProtocolType is an enumeration providing information to "
         "categorize and classify different instances of this class. "
         "For most instances, information in this enumeration and the "
         "subclass' definition overlap. However, there are several cases "
         "where a specific subclass of ProtocolEndpoint is not required "
         "(for example, there is no Fibre Channel Endpoint). Hence, this "
         "property is needed to define the type of Endpoint. Note that "
         "in a future major release of the CIM Schema, it is likely "
         "that ProtocolEndpoint will be ABSTRACT, forcing "
         "subclassing and removing the need for this property."), 
         ValueMap {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27"},
         Values {"Unknown", "Other", "IPv4", "IPv6", "IPX", 
          "AppleTalk", "DECnet", "SNA", "CONP", "CLNP",
          "VINES", "XNS", "ATM", "Frame Relay",
          "Ethernet", "TokenRing", "FDDI", "Infiniband", 
          "Fibre Channel", "ISDN BRI Endpoint", 
          "ISDN B Channel Endpoint", "ISDN D Channel Endpoint", 
          // 22
          "IPv4/v6", "BGP", "OSPF", "MPLS", "UDP", "TCP"},
         ModelCorrespondence {
          "CIM_ProtocolEndpoint.OtherTypeDescription"} ] 
    uint16 ProtocolType;
        [MaxLen(64), Description (
         "A string describing the type of ProtocolEndpoint when "
         "the Type property of this class (or any of its "
         "subclasses) is set to 1 (i.e., \"Other\"). This "
         "property should be set to NULL when the Type property "
         "is any value other than 1."),
           ModelCorrespondence {"CIM_ProtocolEndpoint.ProtocolType"} ]
   string OtherTypeDescription;
};

// ==================================================================
//    ForwardsAmong
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association represents the dependency that exists "
         "between the ProtocolEndpoints that are used to forward data "
         "and the ForwardingService that is performing the forwarding "
         "of data.") ]
class CIM_ForwardsAmong : CIM_ServiceSAPDependency {
        [Override ("Antecedent"), Description(
         "The ProtocolEndpoints that are used to forward the data") ] 
    CIM_ProtocolEndpoint REF Antecedent;
        [Override ("Dependent"), Description(
         "The service that is forwarding the data") ]
    CIM_ForwardingService REF Dependent;
};

// =================================================================== 
//    PortImplementsEndpoint 
// =================================================================== 
        [Association, Version ("2.6.0"), Description ( 
         "PortImplementsEndpoint associates a LogicalPort with one or " 
         "more ProtocolEndpoints that are implemented on it. This "
         "class specializes the DeviceSAPImplementation association. "
         "It indicates that the referenced Endpoint is dependent on the "
         "operations of the Port Device. (In the cases where Ports are "
         "not currently defined for a protocol, for example for "
         "Ethernet, an Endpoint could be associated directly with an "
         "EthernetAdapter via the DeviceSAPImplementation "
         "relationship.)") ] 
class CIM_PortImplementsEndpoint : CIM_DeviceSAPImplementation { 
      [Override ("Antecedent"), 
       Description (
        "The LogicalPort that represents the Device behind " 
        "the ProtocolEndpoint.") ] 
   CIM_LogicalPort REF Antecedent; 
      [Override ("Dependent"), 
       Description (
        "The ProtocolEndpoint implemented on the LogicalPort.") ] 
   CIM_ProtocolEndpoint REF Dependent; 
}; 

// ==================================================================
//     LANEndpoint
// ==================================================================
        [Version ("2.7.0"), Description (
         "A communication endpoint which, when its associated "
         "interface device is connected to a LAN, may send and "
         "receive data frames. LANEndpoints link switch ports and "
         "host interfaces to LANs.") ]
class CIM_LANEndpoint : CIM_ProtocolEndpoint {
        [Description (
         "A label or identifier for the LAN Segment to which the "
         "Endpoint is connected. If the Endpoint is not currently "
         "active/connected or this information is not known, then "
         "LANID is NULL."),
	   ModelCorrespondence {"CIM_LANSegment.LANID"} ]
    string LANID;
        [Deprecated {"CIM_ProtocolEndpoint.ProtocolType"},
         Description (
         "An indication of the kind of technology used on the LAN. This "
         "property is deprecated in lieu of ProtocolType, which is an "
         "enumeration inherited from ProtocolEndpoint and which includes "
         "the Values specified here."), 
         ValueMap {"0", "1", "2", "3", "4"},
         Values {"Unknown", "Other", "Ethernet", "TokenRing", "FDDI"},
         ModelCorrespondence {"CIM_LANSegment.LANType"} ]
    uint16 LANType;
        [Deprecated {"CIM_ProtocolEndpoint.OtherTypeDescription"},
         Description (
         "A free-form string that describes the type of technology "
         "used on the LAN when the value of the LANType property "
         "is equal to 1 (i.e., \"Other\"). This property is deprecated "
         "since its purpose overlaps with OtherTypeDescription, which "
         "which is inherited from ProtocolEndpoint."),
         ModelCorrespondence {"CIM_LANEndpoint.LANType"} ]
    string OtherLANType;
        [MaxLen(12), Description (
         "The principal unicast address used in communication "
         "with the LANEndpoint. The MAC address is formatted as "
         "twelve hexadecimal digits (e.g., \"010203040506\"), "
         "with each pair representing one of the six octets "
         "of the MAC address in \"canonical\" bit order "
         "according to RFC 2469.") ]
    string MACAddress;
        [Description (
         "Other unicast addresses that may be used to communicate "
         "with the LANEndpoint.") ]
    string AliasAddresses[];
        [Description (
         "Multicast addresses to which the LANEndpoint listens.") ]
    string GroupAddresses[];
        [Description (
         "The largest information field that may be sent or received "
         "by the LANEndpoint."), Units ("Bits") ]
    uint32 MaxDataSize;
};

// ==================================================================
//     LANSegment
// ==================================================================
        [Version ("2.6.0"), Description (
         "A collection of LAN Endpoints of a particular type "
         "that are able to intercommunicate directly without "
         "the assistance of bridging or routing services.") ]
class CIM_LANSegment : CIM_LogicalNetwork {
        [MaxLen(64), Description (
         "A label or identifier for the LAN Segment."),
           ModelCorrespondence {"CIM_LANEndpoint.LANID"} ]
    string LANID;
        [Description (
         "An indication of the kind of technology used on the LAN."), 
         ValueMap {"0", "1", "2", "3", "4"},
         Values {"Unknown", "Other", "Ethernet", "TokenRing", "FDDI"},
         ModelCorrespondence {"CIM_LANEndpoint.LANType"} ]
    uint16 LANType;
        [MaxLen(64), Description (
         "A string describing the type of technology used on the LAN "
         "when the value of the LANType property of this class (or "
         "any of its subclasses) is set to 1 (i.e., \"Other\"). The "
         "format of the string inserted in this property should be "
         "similar in format to the values defined for the LANType "
         "property. This property should be set to NULL when the "
         "LANType property is any value other than 1."),
           ModelCorrespondence {"CIM_LANSegment.LANType"} ]
   string OtherLANType;
};

// ==================================================================
//    InLogicalNetwork
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "This association defines a ProtocolEndpoint as a member of "
         "a specific LogicalNetwork.") ]
class CIM_InLogicalNetwork : CIM_CollectedMSEs {
        [Override ("Collection"), Aggregate, Max (1),  
         Description (
         "The LogicalNetwork that groups the ProtocolEndpoint "
         "instances.") ]
    CIM_LogicalNetwork REF Collection;
        [Override ("Member"), Description (
         "The child ProtocolEndpoints that are components of the "
         "LogicalNetwork.") ]
    CIM_ProtocolEndpoint REF Member;
};

// ==================================================================
//    InSegment
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "Defines a LANEndpoint as a member of a specific "
         "LANSegment.") ]
class CIM_InSegment : CIM_InLogicalNetwork {
        [Override ("Collection"), Aggregate, Max (1), Description (
         "The LANSegment that groups the LANEndpoint instances.") ]
    CIM_LANSegment REF Collection;
        [Override ("Member"), Description (
         "A child LANEndpoint that is a component of the "
         "LANSegment.") ]
    CIM_LANEndpoint REF Member;
};

// ==================================================================
//     IPAddressRange
// ==================================================================
        [Abstract, Version ("2.7.0"), 
         Deprecated {"CIM_RangeOfIPAddresses"}, 
         Description (
         "This represents a grouping of specific addresses, and "
         "provides additional semantics for this group if "
         "appropriate. The class is deprecated in lieu of the "
         "concrete class RangeOfIPAddresses since there is "
         "sufficient information for the class to be instantiated. "
         "In addition, an address range should be defined in the "
         "context of a System (for example, a network element or an "
         "admin domain). These semantics are incorporated in the "
         "RangeOfIPAddresses class.") ]
class CIM_IPAddressRange : CIM_CollectionOfMSEs {
        [Deprecated {"CIM_RangeOfIPAddresses.StartAddress"}, 
         Description (
         "The starting IP address of the AddressRange, formatted "
         "according to the appropriate convention as defined in the "
         "AddressType property of this class (e.g., 171.79.6.40).") ] 
    string StartAddress;
        [Deprecated {"CIM_RangeOfIPAddresses.EndAddress"}, 
         Description (
         "The ending IP address of the AddressRange, formatted "
         "according to the appropriate convention as defined in the "
         "AddressType property of this class (e.g., 171.79.6.40).") ] 
    string EndAddress;
        [Deprecated {"CIM_RangeOfIPAddresses.AddressType"}, 
         Description (
         "An enumeration that defines how to format the address and "
         "mask of the address range that defines this IPSubnet)." 
         "\n\n"
         "Whenever possible, IPv4-compatible addresses should "
         "be used instead of IPv6 addresses (see RFC 2373, "
         "section 2.5.4). In order to have a consistent format "
         "for IPv4 addresses in a mixed IPv4/v6 environment, all "
         "IPv4 addresses and both IPv4-compatible IPv6 addresses "
         "and IPv4-mapped IPv6 addresses, per RFC 2373, section "
         "2.5.4, should be formatted in standard IPv4 format. "
         "However, this (the 2.2) version of the Network Common "
         "Model will not explicitly support mixed IPv4/IPv6 "
         "environments. This will be added in a future release."),
         ValueMap {"0", "1", "2"},
         Values {"Unknown", "IPv4", "IPv6"} ]
    uint16 TypeOfAddress;
        [Deprecated {"No value"}, Description (
         "This attribute defines the region that addresses can be "
         "allocated to."),
         ValueMap {"0", "1", "2", "3", "4", "5", "6", "7", "8"},
         Values {"Unknown",
          "Multiregional: 192.0.0.0 to 193.255.255.255",
          "Europe: 194.0.0.0 to 195.255.255.255",
          "Others: 196.0.0.0 to 197.255.255.255",
          "North America: 198.0.0.0 to 199.255.255.255",
          "Central & South America: 200.0.0.0 to 201.255.255.255",
          "Pacific Rim: 202.0.0.0 to 203.255.255.255",
          "Others: 204.0.0.0 to 205.255.255.255",
          "Others: 206.0.0.0 to 207.255.255.255"} ]
    uint16 AllocationRegion;
};

// ==================================================================
// RangeOfIPAddresses
// ==================================================================
   [Experimental, Version ("2.7.0"), Description (
     "The class RangeOfIPAddresses represents an implicit grouping "
     "(or 'pool') of IP addresses specified by the properties, "
     "Start and EndAddress. It is defined as scoped/contained by "
     "a system such as an individual network element or an "
     "admin domain.") ]
class CIM_RangeOfIPAddresses : CIM_SystemSpecificCollection {
      [Description (
        "The starting IP address of the AddressRange, formatted "
        "according to the appropriate convention as defined in the "
        "AddressType property of this class (e.g., 171.79.6.40)."),
       ModelCorrespondence {"CIM_RangeOfIPAddresses.AddressType"} ]
    string StartAddress;
      [Description (
        "The ending IP address of the AddressRange, formatted "
        "according to the appropriate convention as defined in the "
        "AddressType property of this class (e.g., 171.79.6.40)."),
       ModelCorrespondence {"CIM_RangeOfIPAddresses.AddressType"} ]
    string EndAddress;
      [Description (
        "An enumeration that defines how the address and mask "
        "properties are formatted."),
       ValueMap {"0", "1", "2"}, 
       Values {"Unknown", "IPv4", "IPv6"} ]
    uint16 AddressType;
};

// ==================================================================
//     IPProtocolEndpoint
// ==================================================================
        [Version ("2.7.0"), Description (
         "A ProtocolEndpoint that is dedicated to running IP.") ]
class CIM_IPProtocolEndpoint : CIM_ProtocolEndpoint {
        [Experimental, Description (
         "The IPv4 address that this ProtocolEndpoint represents.") ]
    string IPv4Address;
	[Experimental, Description (
         "The IPv6 address that this ProtocolEndpoint represents.") ]
    string IPv6Address;
        [Deprecated {"CIM_IPProtocolEndpoint.IPv4Address", 
          "CIM_IPProtocolEndpoint.IPv6Address"},
         Description (
         "The IP address that this ProtocolEndpoint represents, "
         "formatted according to the appropriate convention as "
         "defined in the AddressType property of this class " 
         "(e.g., 171.79.6.40). This single property is deprecated "
         "to replace it by specific IPv4 and v6 addresses.") ] 
    string Address;
        [Description (
         "The mask for the IPv4 address of this ProtocolEndpoint, "
         "if one is defined.") ]
    string SubnetMask;
	[Experimental, Description (
         "The prefix length for the IPv6 address of this ProtocolEndpoint, "
         "if one is defined.") ]
    uint8 PrefixLength;
        [Deprecated {"No value"}, Description (
         "An enumeration that describes the format of the Address "
         "property. It is deprecated in order to explicitly support "
         "BOTH IPv4 and v6 addressing."),
         ValueMap {"0", "1", "2"},
         Values {"Unknown", "IPv4", "IPv6"} ]
    uint16 AddressType;
        [Description (
         "This property explicitly defines support for different "
         "versions of the IP protocol, for this Endpoint."), 
         ValueMap {"0", "1", "2", "3"},
         Values {"Unknown", "IPv4 Only", "IPv6 Only", 
             "Both IPv4 and IPv6"} ]
    uint16 IPVersionSupport;
};

// ==================================================================
//     BGPProtocolEndpoint
// ==================================================================
        [Version ("2.6.0"), Description (
         "A ProtocolEndpoint that is dedicated to running BGP.") ]
class CIM_BGPProtocolEndpoint : CIM_ProtocolEndpoint {
        [Description (
         "A boolean that, when TRUE, signifies that this is an "
         "instance of the external version of BGP (FALSE is the "
         "internal version).") ]
    boolean IsEBGP;
        [Description (
         "Normally, two routers running EBGP must be physically "
         "connected. This boolean, when TRUE, denotes a LOGICAL "
         "connection between two routers that are running EBGP " 
         "(e.g., there is an intermediate router or interface "
         "between them.") ] 
    boolean IsEBGPMultihop;
        [Description (
         "This is the unique identifier of the local BGP router. "
         "This is often the router ID (e.g., an IP address)."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpIdentifier"} ]
    string LocalIdentifier;
        [Description (
         "This is the unique identifier of the peer BGP router. "
         "This is often the router ID (e.g., an IP address)."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerIdentifier"} ]
    string PeerIdentifier;
        [Description (
         "This defines the current connection state of the "
         "BGP Peer."),
         ValueMap {"1", "2", "3", "4", "5", "6"},
         Values {"Idle", "Connect", "Active", "OpenSet",
          "OpenConfirm", "Established"},
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerState"} ]
    uint16 State;
        [Description (
         "This defines the desired state of the BGP connection."),
         ValueMap {"1", "2"},
         Values {"Stop", "Start"},
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpPeerAdminStatus"} ]
    uint16 AdminStatus;
        [Description (
         "This defines the negotiated version of BGP that is "
         "running between the two peers."),
         Mappingstrings {
         "MIB.IETF|RFC1657- MIB.bgpPeerNegotiatedVersion"} ]
    string NegotiatedVersion;
        [Description (
         "This is the local IP address of this router's BGP "
         "connection."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerLocalAddr"} ]
    string LocalAddress; 
        [Description (
         "This is the local port number for the TCP connection of "
         "this router's BGP connection."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerLocalPort"} ]
    uint16 LocalPort; 
        [Description (
         "This is the remote IP address of this router's BGP "
         "connection."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerRemoteAddr"} ]
    string RemoteAddress;
        [Description (
         "This is the remote port number for the TCP connection of "
         "this router's BGP connection."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerRemotePort"} ]
    uint16 RemotePort; 
        [Description (
         "This is the remote AS number for this router's BGP "
         "connection."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerRemoteAs"} ]
    uint16 RemoteAS;
        [Description (
         "This defines the maximum amount of time in seconds that "
         "may elapse between the receipt of successive KEEPALIVE or "
         "UPDATE messages. This is instrumented as a counter that "
         "increments from zero to the value specified in this "
         "property. The value of this property is calculated by "
         "this BGP speaker by using the smaller of the values of "
         "bgpPeerHoldTimeConfigured and the Hold Time received in "
         "the OPEN message. This value, if not zero seconds, must "
         "be at least three seconds, up to a maximum of 65535 "
         "seconds. Receipt of either a KEEPALIVE or an UPDATE "
         "message resets this value."),
         Units ("Seconds"),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerHoldTime"} ]
    uint16 HoldTime;
        [Description (
         "This defines the time interval in seconds for the KeepAlive "
         "timer established with the peer. The value of this property "
         "is calculated by this speaker such that, when compared with "
         "the HoldTime property, it has the same proportion as the "
         "KeepAliveConfigured property has with the "
         "HoldTimeConfigured property. A value of 0 indicates that "
         "the KeepAlive timer has not yet been established. The "
         "maximum value of this property is 21845 seconds."),
         Units ("Seconds"),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerKeepAlive"} ]
    uint16 KeepAlive;
};

// ==================================================================
//    IPXProtocolEndpoint
// ==================================================================
        [Version ("2.6.0"), Description (
         "An IPX communication point from which data may be sent "
         "or received.") ]
class CIM_IPXProtocolEndpoint : CIM_ProtocolEndpoint {
        [Description (
         "An IPX address formatted as eight hexadecimal digits "
         "representing the network number, followed by a colon, "
         "followed by twelve hexadecimal digits representing the "
         "host address (e.g. \"00112233:010203040506\").") ]
    string Address;
};

// ==================================================================
// Network
// ==================================================================
   [Experimental, Description (
     "Network is a subclass of AdminDomain that groups "
     "interconnected networking and computing objects capable of "
     "exchanging information. Instances of CIM_Network can "
     "represent an enterprise's global network or specific "
     "connectivity domains within the global network. These "
     "concepts are similar to those defined for the Network object "
     "in ITU's M.3100 specification."),
    MappingStrings {"Recommendation.ITU|M3100.Network"} ]
class CIM_Network : CIM_AdminDomain {

};

//================================================================
// Pipe
//================================================================
  [Experimental, Description (
    "Pipe is a subclass of LogicalElement, representing the "
    "status and management of a connection or trail between "
    "endpoints. This object is different than the association "
    "between the endpoints (CIM_ActiveConnection) since the emphasis "
    "is NOT on the endpoints but on the management of the pipe "
    "itself - its status, configuration, etc. Pipes are defined "
    "in the context of a CIM_Network and represent the 'transfer "
    "of information . . . between . . . endpoints'. These "
    "concepts are aligned with the definition of the Pipe "
    "object in ITU’s M.3100 specification."),
   MappingStrings {"Recommendation.ITU|M3100.Pipe",
    "Recommendation.ITU|M3100.TrailR1", 
    "Recommendation.ITU|M3100.ConnectionR1",
    "Recommendation.ITU|M3100.SubNetworkConnection"} ]
class CIM_Pipe : CIM_EnabledLogicalElement {

    [Key, Description (
      "InstanceID opaquely identifies a unique instance of "
      "Pipe. The InstanceID must be unique within a namespace. "
      "In order to ensure uniqueness, the value of InstanceID "
      "SHOULD be constructed in the following manner:  \n"
      "<Vendor ID><ID> \n" 
      "   <Vendor ID> MUST include a copyrighted, trademarked "
      "or otherwise unique name that is owned by the business "
      "entity or a registered ID that is assigned to the "
      "business entity that is defining the InstanceID. "
      "(This is similar to the <Schema Name>_<Class Name> "
      "structure of Schema class names.) The purpose of <Vendor ID> "
      "is to ensure that <ID> is truly unique across multiple "
      "vendor implementations.   If such a name is not "
      "used, the defining entity MUST assure that the <ID> "
      "portion of the Instance ID is unique when compared with "
      "other instance providers. For DMTF defined instances, the "
      "<Vendor ID> is 'CIM'. \n"
      "   <ID> MUST include either a vendor specified unique "
      "identifier, or if mapping from an ITU M.3100 environment, "
      "the trailID, connectionID or subNetworkConnectionID of "
      "the instances of PipeR2."),         
     MappingStrings {"Recommendation.ITU|M3100.TrailR1.trailId", 
      "Recommendation.ITU|M3100.ConnectionR1.connectionID", 
      "Recommendation.ITU|M3100.SubNetworkConnection."
         "subNetworkConnectionID"} ]
    string InstanceID;

    [Description (
      "Indicates whether the pipe is bi-directional (value = "
      "2), unidirectional (value = 3), or this information is "
      "not known (value = 0). For unidirectional pipes, the "
      "source and sink are indicated by a property (SourceOrSink) "
      "of the association, EndpointOfPipe."),
      ValueMap {"0", "2", "3"},
      Values {"Unknown", "Bi-Directional", "Unidirectional"}, 
      MappingStrings {"Recommendation.ITU|M3100.Pipe.directionality"} ]
    uint16 Directionality;

    [Description (
      "  Indicates whether the pipe is composed of lower-level pipes, "
      "and if so, how these lower-level pipes are aggregated (in "
      "parallel or in sequence). The specific instances of CIM_Pipe "
      "that are combined are described using the PipeComposition "
      "association. \n\n"
      "  In the context of M.3100, the ability to be composed of "
      "lower-level pipes is modeled as a Trail. A Trail is made up "
      "of one or more Connections. (Note that both Trails and "
      "Connections are subclasses of Pipe). Because of the "
      "flexibility of the PipeComposition association, there is no "
      "need to subclass CIM_Pipe, as was done in M.3100, but merely "
      "to instantiate the PipeComposition association to describe "
      "the bundling of the lower-level pipes (i.e., the connections), "
      "or the sequencing of them."),
      ValueMap {"0", "2", "3", "4"},
      Values {"Unknown", "No Lower-Level Composition", 
       "Combined In Parallel", "Combined In Sequence"} ]
    uint16 AggregationBehavior;

    [Override ("EnabledStatus"), Description (
        "EnabledStatus is an integer enumeration indicating "
        "whether the element is currently shutting down (value = 4), "
        "or in an enabled (value = 2) or disabled (value = 3) "
        "state.  In various situations, an element that is being "
        "tested is neither enabled or disabled - this is addressed "
        "by the value \"In Test\" (7). If this property does not "
        "apply to an instance of EnabledLogicalElement, the value 5 "
        "(\"Not  Applicable\"), is used."),
        ValueMap {"0", "1", "2", "3", "4", "5", "6", "7"}, 
        Values {"Unknown", "Other", "Enabled", "Disabled", 
            "Shutting Down", "Not Applicable", "Enabled but Offline",
            "In Test"},
        ModelCorrespondence {
            "CIM_EnabledLogicalElement.OtherEnabledStatus"},
        MappingStrings {
            "Recommendation.ITU|M3100.Pipe.operationalState"} ]
    uint16 EnabledStatus;

     [Override ("RequestedStatus"), Write, Description (
        "RequestedStatus is an integer enumeration indicating "
        "whether the element should be shut down (value = 4), "
        "enabled (2), disabled (3), taken offline (6) or "
        "tested (7) at the next opportunity. This "
        "property is provided to compare Requested and "
        "current Enabled statuses. Note that when "
        "EnabledStatus is set to 5 (\"Not Applicable\"), "
        "then writing this property has no effect. By default, "
        "the element's RequestedStatus is 5 (\"No Change\")."), 
      ValueMap {"2", "3", "4", "5", "6", "7"}, 
      Values {"Enabled", "Disabled", "Shut Down", "No Change",
            "Offline", "Test"},
      MappingStrings {
        "Recommendation.ITU|M3100.Pipe.administrativeState"} ]
    uint16 RequestedStatus = 5;
};

// ==================================================================
// HostedPipe
// ==================================================================
   [Association, Experimental, Description (
     "HostedPipe is an association between a pipe and the "
     "network in whose context the pipe is defined.  The "
     "cardinality of this association is 1-to-many. A network may "
     "host many pipes, and pipes are scoped/contained by only "
     "one network.") ]
class CIM_HostedPipe : CIM_Dependency {

    [Override ("Antecedent"), Min (1), Max (1), 
     Description ("The hosting network.") ] 
    CIM_Network REF Antecedent;

    [Override ("Dependent"), 
     Description ("The pipe in the network.") ] 
    CIM_Pipe REF Dependent;
};

 
// ==================================================================
// EndpointOfPipe
// ==================================================================
   [Association, Experimental, Description (
     "EndpointOfPipe describes the endpoints between which a pipe "
     "transfers information. Whether an endpoint is a source or "
     "sink is indicated by a property of the association, "
     "SourceOrSink."), 
    MappingStrings {"Recommendation.ITU|M3100.Pipe.a-TPInstance",
     "Recommendation.ITU|M3100.Pipe.z-TPInstance"} ]
class CIM_EndpointOfPipe : CIM_Dependency {

    [Override ("Antecedent"), Min (2), Max (2), 
     Description ("One of the endpoints of the pipe.") ] 
    CIM_ProtocolEndpoint REF Antecedent;

    [Override ("Dependent"), Description (
     "The pipe which is dependent on the endpoints as the "
     "source or sink of the transferred information.") ] 
    CIM_Pipe REF Dependent;

    [Description (
      "Indicates whether the endpoint is a source (value = "
      "2), or sink (value = 3) for the pipe. If this information "
      "is not applicable, the property is set to 4. If the "
      "information is not known, the property is set to 0."), 
      ValueMap {"0", "2", "3", "4"},
      Values {"Unknown", "Source", "Sink", "Not Applicable"} ]
    uint16 SourceOrSink;
};

// ==================================================================
// PipeComposition
// ==================================================================
   [Association, Aggregation, Experimental, Description (
     "   PipeComposition describes the makeup a pipe, based on lower-"
     "level ones. If the pipe referenced by the GroupComponent "
     "indicates that it is not composed of lower-level pipes (its "
     "property, AggregationBehavior, is set to 2), then no instances "
     "of this association should be defined where the pipe has the "
     "GroupComponent role. \n\n"
     "  In the context of M.3100, this semantic is modeled as a "
     "Trail that is made up of one or more Connections. Both Trails "
     "and Connections are subclasses of Pipe. Because of the "
     "flexibility of the PipeComposition association, there is no "
     "need to subclass CIM_Pipe, as was done in M.3100, but merely "
     "to instantiate this association to describe the bundling of the "
     "lower-level pipes (connections), or the sequencing of them. "
     "How the lower-level pipes are aggregated is described by the "
     "property, AggregationBehavior, on CIM_Pipe. If the pipes "
     "are combined in a sequence, the ordering is conveyed via "
     "the property, AggregationSequence, on this association."), 
    MappingStrings {
     "Recommendation.ITU|M3100.TrailR1.serverConnectionListPackage",
     "Recommendation.ITU|M3100.TrailR1.clientConnectionListPackage"} ]
class CIM_PipeComposition : CIM_Component {

    [Override ("GroupComponent"), Description (
      "The higher level pipe that is composed of lower-level "

      "parts/pipes.") ] 
    CIM_Pipe REF GroupComponent;

    [Override ("PartComponent"), Description (
     "A pipe which is a part of a higher-level one.") ] 
    CIM_Pipe REF PartComponent;

    [Description (
      "Indicates the ordering of the PartComponent pipes in the "
      "GroupComponent.  If the AggregationBehavior property of the "
      "GroupComponent pipe is set to 0 or 3 (\"Unknown\" or "
      "\"Combined In Parallel\"), then this property MUST be set "
      "to 0. If the AggregationBehavior is set to 4 (\"Combined "
      "In Sequence\"), then this property SHOULD indicate the "
      "ordering of the component pipes. Ordering starts with 1 "
      "and larger numbers indicate subsequent pipes. The "
      "numbering does not have to be in sequence. The word SHOULD "
      "is used in this Description, since the specific ordering "
      "of all the component pipes may not be known. In these cases, "
      "a value of 0 would be placed in AggregationSequence to "
      "indicate that ordering information is not available.") ]
    uint16 AggregationSequence;
};

// ==================================================================
// SNMPService
// ==================================================================
   [Experimental, Version ("2.7.0"), Description (
     "SNMPService represents an SNMP agent running on a hosting "
     "system. The UDP port to use to contact the agent is "
     "an instance of UDPProtocolEndpoint. The endpoint is "
     "associated with the SNMPService via a Dependency "
     "relationship. The community string(s) to use when contacting "
     "the SNMP agent reside in instances of SNMPCommunityString, that "
     "are associated with the SNMPService via the "
     "ServiceAccessBySAP relationship.") ]
class CIM_SNMPService : CIM_Service {
}; 

// ==================================================================
// SNMPCommunityString
// ==================================================================
   [Experimental, Version ("2.7.0"), Description (
     "SNMPCommunityString is an access point for an SNMPService. "
     "Each instance stores a community string that can be used "
     "for making SNMP requests.") ]
class CIM_SNMPCommunityString : CIM_ServiceAccessPoint {
      [Description (
        "The SNMP community string/password used for read or "
        "read/write access to the agent's data."), 
       MappingStrings {"MIB.IETF|ENTITY-MIB.entLogicalCommunity"} ]
    string CommunityString;
      [Description (
        "An enumerated integer describing whether read or read/"
        "write access is granted, or whether this information is "
        "unknown."),
       Values {"Unknown", "Read Only", "Read/Write"} ]
    uint16 TypeOfAccess;
      [Description (
        "This array contains one or more object identifiers "
        "indicating the MIB modules/object subtrees that are "
        "accessed using the CommunityString. Either text strings of "
        "numbers (such as 1.2.3.4.5), or words (such as 'system') "
        "are specified. When using text strings of numbers, an "
        "asterisk (*) can replace any subidentifier to specify "
        "a subtree family - for example, 1.2.*.5. Descriptions "
        "related to each entry in the array are found at the "
        "corresponding index of the LogicalEntitiesDescriptions "
        "property."), 
       ArrayType ("Indexed"), 
       ModelCorrespondence {
        "CIM_SNMPCommunityString.LogicalEntitiesDescriptions"}, 
       MappingStrings {"MIB.IETF|ENTITY-MIB.entLogicalType"} ]
    string LogicalEntitiesAccessed[];
      [Description (
        "Free-form textual descriptions of the logical entities "
        "indicated in the LogicalEntitiesAccessed array. There "
        "is a correspondence between the entity identifier in "
        "the LogicalEntitiesAccessed array, and the description "
        "in this array at the corresponding index."), 
       ArrayType ("Indexed"), 
       ModelCorrespondence {
        "CIM_SNMPCommunityString.LogicalEntitiesAccessed"}, 
       MappingStrings {"MIB.IETF|ENTITY-MIB.entLogicalDescr"} ]
    string LogicalEntitiesDescriptions[];
};

// ==================================================================
// SNMPTrapTarget
// ==================================================================
   [Experimental, Version ("2.7.0"), Description (
     "SNMPTrapTarget contains information describing "
     "a remote system, to which Informs and Traps are sent. "
     "An SNMPService is related via a ServiceSAPDependency "
     "association to one or more instances of this class.") ]
class CIM_SNMPTrapTarget : CIM_RemotePort {
      [Override ("AccessInfo"), Description ("The host address.") ]
    string AccessInfo;
      [Override ("PortProtocol"), Description (
        "A UDP port to which the traps/informs are sent.") ] 
    uint16 PortProtocol = 3;
      [Override ("PortInfo"), Description (
        "The UDP port number to which the traps/informs are "
        "sent. The default is port 162.") ]    
    uint32 PortInfo = 162;
      [Description (
        "Allows the selection of the notification message - "
        "Traps or Informs.  By default, Traps are selected."),
       ValueMap {"1", "2"}, Values {"Traps", "Informs"} ] 
    uint16 NotificationMessage = 1;
      [Description (
        "The SNMP version used to send the traps or informs. "
        "Note that v1 does not support informs."),
       ValueMap {"1", "2", "3"}, Values {"v1", "v2C", "v3"} ] 
    uint16 SNMPVersion;
      [Description (
        "A community string/password to send with the "
        "trap operation.") ] 
    string CommunityString;
};

// ==================================================================
// TrapSourceForSNMPService
// ==================================================================
   [Association, Experimental, Version ("2.7.0"), Description (
     "TrapSourceForSNMPService specifies the protocol "
     "endpoint/interface (and hence its IP address) from which "
     "traps originate.") ]
class CIM_TrapSourceForSNMPService : CIM_ServiceSAPDependency {
      [Override ("Antecedent"), Max (1), 
       Description (
        "The endpoint that acts as the trap source.") ]
    CIM_ProtocolEndpoint REF Antecedent;
      [Override ("Dependent"), Description (
        "The SNMP service that sends the notifications.") ]
    CIM_SNMPService REF Dependent;
};

// ==================================================================
//    IPXNetwork
// ==================================================================
        [Version ("2.6.0"), Description (
         "A network or subnet that uses the IPX protocol.") ]
class CIM_IPXNetwork : CIM_LogicalNetwork {
        [Description (
         "An IPX network number formatted as eight hexadecimal "
         "digits (e.g., \"00112233\").") ]
    string NetworkNumber;
};

// ================================================================== 
//     NextHopRouting
// ==================================================================
        [Abstract, Deprecated {"CIM_NextHopRoute"}, 
         Version ("2.7.0"), Description (
         "NextHopRouting relates a destination address to the "
         "address or interface through which the remote address "
         "may be reached.  An instance of this class can represent "
         "either static or dynamic routing, and may represent a routing "
         "table entry (but it is not required that all NextHopRoutes be "
         "in a routing table).  Static routes are distinguished by "
         "setting the IsStatic boolean property to TRUE. Subclasses "
         "of NextHopRouting provide specific protocol and Key "
         "information. NextHopRoutes are dependent on at least one "
         "ForwardingService to execute them. This is conveyed by the "
         "CIM_NextHopForwardedByService association. \n"
         "\n"
         "NextHopRouting is deprecated in lieu of the more general, "
         "concrete NextHopRoute class. NextHopRoute allows the definition "
         "of BOTH a next hop address and an interface for transmission of "
         "the traffic. Also, it does not mandate the instantiation of a "
         "ForwardingService class.  The latter is not needed if the sole "
         "purpose of the instance is to specify a 'desired/configured' route. "
         "This is simply a specification of the next hop.") ]
class CIM_NextHopRouting : CIM_LogicalElement {
        [Deprecated {"CIM_NextHopRoute.DestinationAddress"}, 
         Description (
         "The address which serves as the destination to be "
         "reached.") ]
    string DestinationAddress;
        [Deprecated {"CIM_NextHopRoute.DestinationMask"}, 
         Description (
         "The mask for the DestinationAddress.") ]
    string DestinationMask;
        [Deprecated {"CIM_AssociatedNextHop.Antecedent",
          "CIM_RouteUsesEndpoint.Antecedent"},
         Description (
         "This contains either the address of the next-hop router, "
         "or the interface used to reach the destination.") ]
    string NextHop;
        [Deprecated {"CIM_NextHopRoute.IsStatic"},
         Description (
         "TRUE indicates that this is a static route, and FALSE "
         "indicates a dynamically-learned route.") ]
    boolean IsStatic;
};

// ==================================================================
//     IPRoute
// ==================================================================
        [Abstract, Version ("2.7.0"), 
         Deprecated {"CIM_NextHopIPRoute"}, Description (
         "An IPRoute relates a destination address to the "
         "address or interface through which the remote address "
         "may be reached. The destination address may be a "
         "specific IP endpoint or a subnet, dependent on the mask. "
         "An instance of this class represents either static or "
         "dynamic routing. Static routes are distinguished by "
         "setting the IsStatic boolean property to TRUE. \n"
         "\n"
         "Since many routes between endpoints can "
         "be defined (using different route calculation algorithms), "
         "the CIM_IPRoute class is defined as Abstract.  This "
         "forces subclassing (for example, see CIM_BGPIPRoute) "
         "and allows the instances of its subclasses to be "
         "distinguished based on their CreationClassName key "
         "property. \n"
         "\n"
         "IPRoute is deprecated in lieu of the more general, concrete "
         "NextHopIPRoute class. NextHopIPRoute allows the definition "
         "of BOTH a next hop address and an interface for transmission of "
         "the traffic. Also, it does not mandate the instantiation of a "
         "ForwardingService class.") ]
class CIM_IPRoute : CIM_NextHopRouting {
        [Deprecated {"No value"}, 
         Propagated("CIM_ForwardingService.SystemCreationClassName"), 
         Key, MaxLen (256), Description (
          "The scoping ForwardingService's SystemCreationClassName.") ]
    string SystemCreationClassName;
        [Deprecated {"No value"}, 
         Propagated("CIM_ForwardingService.SystemName"), 
         Key, MaxLen (256), Description (
          "The scoping ForwardingService's SystemName.") ]
    string SystemName;
        [Deprecated {"No value"}, 
         Propagated("CIM_ForwardingService.CreationClassName"), 
         Key, MaxLen (256), Description (
          "The scoping ForwardingService's CreationClassName.") ]
    string ServiceCreationClassName;
        [Deprecated {"No value"}, 
         Propagated("CIM_ForwardingService.Name"), 
         Key, MaxLen (256), Description (
          "The scoping ForwardingService's Name.") ]
    string ServiceName;
        [Deprecated {"No value"}, 
         Key, MaxLen (256), Description (
         "CreationClassName indicates the name of the class or the "
         "subclass used in the creation of an instance. When used "
         "with the other key properties of this class, this property "
         "allows all instances of this class and its subclasses to "
         "be uniquely identified.") ]
    string CreationClassName;
        [Key, Deprecated {"CIM_NextHopIPRoute.DestinationAddress"},  
         Description (
         "The IP address which serves as the destination of the "
         "traffic, formatted according to the appropriate convention "
         "as defined in the AddressType property of this class. \n"
         "\n"
         "This property has the same semantics as DestinationAddress "
         "inherited from the NextHopRouting superclass, but a different "
         "property name. This is because this property and class were "
         "defined before NextHopRouting and are Key properties. They "
         "cannot be removed. ModelCorrespondence indicates that they "
         "should be set to equivalent values for consistency and "
         "ease of query."), 
         ModelCorrespondence {"CIM_IPRoute.DestinationAddress"} ] 
    string IPDestinationAddress;
        [Key, Deprecated {"CIM_NextHopIPRoute.DestinationMask"},
         Description (
         "The mask for the destination IP address, formatted "
         "according to the appropriate convention as defined in the "
         "AddressType property of this class. \n"
         "\n"
         "This property has the same semantics as DestinationMask "
         "inherited from the NextHopRouting superclass, but a different "
         "property name. This is because this property and class were "
         "defined before NextHopRouting and are Key properties. They "
         "cannot be removed. ModelCorrespondence indicates that they "
         "should be set to equivalent values for consistency and "
         "ease of query."), 
         ModelCorrespondence {"CIM_IPRoute.DestinationMask"} ] 
    string IPDestinationMask;
        [Key, Deprecated {"CIM_NextHopIPRoute.AddressType"},
         Description (
         "An enumeration that describes the format of the address "
         "property. Addresses that can be formatted in IPv4 format, "
         "must be formatted that way to ensure mixed IPv4/IPv6 "
         "support. "
         "\n\n"
         "AddressType is part of the key so that an IPv4 and an IPv6 "
         "route to IP subnets with the same network number but "
         "different versions (v4/v6) can coexist "),
         ValueMap {"0", "1", "2"},
         Values {"Unknown", "IPv4", "IPv6"} ]
    uint16 AddressType;
        [Override ("DestinationAddress"),
         ModelCorrespondence {"CIM_IPRoute.IPDestinationAddress"} ]
    string DestinationAddress;
        [Override ("DestinationMask"),
         ModelCorrespondence {"CIM_IPRoute.IPDestinationMask"} ]
    string DestinationMask;
};

// ==================================================================
//    RouteForwardedByService
// ==================================================================
        [Association, Deprecated {"No value"}, 
         Version ("2.7.0"), Description (
         "This assocation makes explicit the next hops that are "
         "forwarded by a specific ForwardingService, to reach the "
         "destination. Every ForwardingService can have its own "
         "unique set of routing destinations and next hops. The "
         "association is deprecated since it is incorrect to mandate "
         "the existence of a ForwardingService in order to define "
         "the existence of a route.") ]
class CIM_RouteForwardedByService : CIM_Dependency {
        [Deprecated {"No value"}, Override ("Antecedent"), Min (1) ]
    CIM_ForwardingService REF Antecedent;
        [Deprecated {"No value"}, Override ("Dependent") ]
    CIM_NextHopRouting REF Dependent;
        [Deprecated {"CIM_NextHopRoute.AdminDistance"}, Description (
         "This property contains the current administrative distance "
         "of this route, for the ForwardingService. Note that this "
         "property indicates current, specific values - whereas an "
         "instance of the CIM_AdministrativeDistance class "
         "defines default distances.") ]
    uint16 AdminDistance;
        [Deprecated {"CIM_NextHopRoute.RouteMetric"}, Description (
         "PathMetric provides a numeric indication as to the "
         "preference of this route compared to other routes that "
         "reach the same destination.") ]
    uint16 PathMetric;
};

// ==================================================================
//    ForwardedRoutes
// ==================================================================
        [Association, Deprecated {"No value"}, 
         Version ("2.7.0"), Description (
         "This assocation makes explicit the IP routes that are "
         "defined in the context of a specific ForwardingService. "
         "Every ForwardingService can have its own unique set of IP "
         "routing destinations. The association is deprecated "
         "since it is incorrect to mandate the existence of a "
         "ForwardingService in order to define the existence of a "
         "route.") ]
class CIM_ForwardedRoutes : CIM_RouteForwardedByService {
        [Deprecated {"No value"}, Override ("Antecedent"), 
         Min (1), Max (1) ]
    CIM_ForwardingService REF Antecedent;
        [Deprecated {"No value"}, Override ("Dependent"), Weak ]
    CIM_IPRoute REF Dependent;
};

// ==================================================================
// NextHopRoute
// ==================================================================
   [Experimental, Version ("2.7.0"), Description (
     "NextHopRoute represents one of a series of 'hops' to reach "
     "a network destination. A route is administratively defined, "
     "or calculated/learned by a particular routing process. A "
     "ConcreteDependency associaton may be instantiated between a "
     "route and its routing service to indicate this. (In this "
     "scenario, the route is dependent on the service.)") ]
class CIM_NextHopRoute : CIM_ManagedElement {
      [Key, Description (
        "InstanceID opaquely identifies a unique instance of "
        "NextHopRoute. The InstanceID must be unique within a namespace. "
        "In order to ensure uniqueness, the value of InstanceID "
        "SHOULD be constructed in the following manner:  \n"
        "<Vendor ID><Route ID> \n"
        "   <Vendor ID> MUST include a copyrighted, trademarked "
        "or otherwise unique name that is owned by the business entity or a "
        "registered ID that is assigned to the business entity that is defining "
        "the InstanceID. (This is similar to the <Schema Name>_<Class Name> "
        "structure of Schema class names.) The purpose of <Vendor ID> "
        "is to ensure that <ID> is truly unique across multiple "
        "vendor implementations.   If such a name is not "
        "used, the defining entity MUST assure that the <ID> "
        "portion of the Instance ID is unique when compared with "
        "other instance providers. For DMTF defined instances, the "
        "<Vendor ID> is 'CIM'. \n"
        "   <ID> MUST include a vendor specified unique "
        "identifier.") ]        
    string InstanceID;
      [Description (
        "The address which serves as the destination to be "
        "reached.") ]
    string DestinationAddress;
      [Description (
        "The specific administrative distance of this route, "
        "overriding the default distance specified by the system "
        "or routing service.") ]
    uint16 AdminDistance;
      [Description (
        "RouteMetric provides a numeric indication as to the "
        "preference of this route compared to other routes that "
        "reach the same destination.") ]
    uint16 RouteMetric;
        [Description (
         "TRUE indicates that this is a static route, and FALSE "
         "indicates a dynamically-learned route.") ]
    boolean IsStatic;
        [Description (
         "An enumerated integer indicating whether the route is "
         "administrator-defined (value=2), computed (via a routing "
         "protocol/algorithm, value=3) or the actual route "
         "implemented in the network (value=4). The default is "
         "a computed route."),
         ValueMap {"2", "3", "4"},
         Values {"Administrator Defined Route", "Computed Route", 
          "Actual Route"} ]
    uint16 TypeOfRoute=3;
};

// ==================================================================
// HostedRoute
// ==================================================================
   [Association, Experimental, Version ("2.7.0"), 
    Description (
     "HostedRoute describes the relationship between the "
     "route and the system in whose context it is defined.") ]
class CIM_HostedRoute : CIM_Dependency {
      [Override ("Antecedent"), Min (1), Max (1), 
       Description (
        "The network element that scopes/provides context "
        "for the route.") ] 
    CIM_System REF Antecedent;
      [Override ("Dependent"), Description (
        "The next hop route defined on the System.") ] 
    CIM_NextHopRoute REF Dependent;
};

// ==================================================================
// NextHopIPRoute
// ==================================================================
   [Experimental, Version ("2.7.0"), 
    Description (
     "NextHopIPRoute specifies routing in an IP network.") ]
class CIM_NextHopIPRoute : CIM_NextHopRoute {
      [Description (
        "An enumerated integer indicating how the route was "
        "derived. This is useful for display and query purposes."),
       ValueMap {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
         "10", "11"},  
       Values {"Unknown", "Other", "Connected", "User-Defined", 
             "IGRP", "EIGRP", "RIP", "Hello", "EGP", 
             "BGP", "ISIS", "OSPF"}, 
       ModelCorrespondence {
        "CIM_NextHopIPRoute.OtherDerivation"} ]
    uint16 RouteDerivation;
      [Description (
        "A string describing how the route was derived when "
        "the RouteDerivation property is 1 (\"Other\")."), 
       ModelCorrespondence {
        "CIM_NextHopIPRoute.RouteDerivation"} ]
    string OtherDerivation;
      [Description (
        "The mask for the Ipv4 destination address.") ] 
    string DestinationMask;
        [Description (
         "The prefix length for the IPv6 destination address.") ]
    uint8 PrefixLength;
      [Description (
        "An enumeration that describes the format of the address "
        "properties."), 
       Values {"Unknown", "IPv4", "IPv6"} ]
    uint16 AddressType;
};

// ==================================================================
// MPLSSpecifiedRoute
// ==================================================================
   [Experimental, Version ("2.7.0"), 
    Description (
     "MPLSSpecifiedRoute defines an administrator-defined MPLS "
     "route.") ]
class CIM_MPLSSpecifiedRoute : CIM_NextHopRoute {
        [Override ("TypeOfRoute"), Description (
         "An MPLSSpecifiedRoute is always administrator-defined "
         "(value=2)."),
         ValueMap {"2"},
         Values {"Administrator Defined Route"} ]
    uint16 TypeOfRoute=2;
      [Description (
        "The address which serves as the starting/originating point "
        "in an MPLS administrator-defined route.") ]
    string OriginatingAddress;
};

// ==================================================================
// RouteUsesEndpoint
// ==================================================================
   [Association, Experimental, Version ("2.7.0"), 
    Description (
     "RouteUsesEndpoint depicts the relationship between a next "
     "hop route and the local Endpoint that is used to transmit the "
     "traffic to the 'next hop'.") ]
class CIM_RouteUsesEndpoint : CIM_Dependency {
      [Override ("Antecedent"), Max (1), Description (
        "The endpoint used to reach the route's destination.") ]
    CIM_ProtocolEndpoint REF Antecedent;
      [Override ("Dependent"),  
       Description ("The route using the endpoint.") ] 
    CIM_NextHopRoute REF Dependent;
};

// ==================================================================
// AssociatedNextHop
// ==================================================================
   [Association, Experimental, Version ("2.7.0"), 
    Description (
     "AssociatedNextHop depicts the relationship between a "
     "route and the specification of its next hop. The next hop "
     "is external to a System, and hence is defined as a kind of "
     "RemoteServiceAccessPoint. Note that this relationship is "
     "independent of RouteUsesEndpoint (the local Endpoint used to "
     "transmit the traffic), and both may be defined for a route.") ] 
class CIM_AssociatedNextHop : CIM_Dependency {
      [Override ("Antecedent"), Max (1), Description (
        "The next hop for the route.") ] 
    CIM_RemoteServiceAccessPoint REF Antecedent;
      [Override ("Dependent"), Description (
        "The route sending traffic to the next hop.") ] 
    CIM_NextHopRoute REF Dependent;
};

// ==================================================================
// MPLSSpecifiedNextHop
// ==================================================================
   [Association, Experimental, Version ("2.7.0"), 
    Description (
     "MPLSSpecifiedNextHop depicts the relationship between an MPLS"
     "SpecifiedRoute and the definition of its next hop(s), as "
     "established by an administrator. This subclass adds several "
     "properties to AssociatedNextHop that are unique to an MPLS "
     "route specification.") ]
class CIM_MPLSSpecifiedNextHop : CIM_AssociatedNextHop {
      [Override ("Antecedent"), Max (1), Description (
        "The next hop for the route.") ] 
    CIM_RemoteServiceAccessPoint REF Antecedent;
      [Override ("Dependent"), Description (
        "The route sending traffic to the next hop.") ] 
    CIM_MPLSSpecifiedRoute REF Dependent;
	[Description (
	"Defines whether the referenced SAP MUST immediately follow the "
      "previous hop (TRUE) or whether intermediate hops (between the "
      "last one and this hop) are allowed (FALSE). This property has "
      "no meaning when the Avoid boolean is TRUE.") ]
   boolean IsStrict;
	[Description (
	"Defines whether the referenced SAP MUST be avoided in the "
      "routing (TRUE) or should be used (FALSE).") ]
   boolean Avoid;
	[Description (
	"Defines the ordering of the next hops/AccessPoints. Larger "
      "numbers imply later access in the order.") ]
   uint16 RouteOrder;
};

// ==================================================================
// MPLSComputedNextHop
// ==================================================================
   [Association, Experimental, Version ("2.7.0"), 
    Description (
     "MPLSComputedNextHop depicts the relationship between an MPLS "
     "route (where NextHopRoute.TypeOfRoute=3), and the next hop "
     "computed for it. This subclass adds an IsStrict property to the "
     "association.") ]
class CIM_MPLSComputedNextHop : CIM_AssociatedNextHop {
      [Override ("Antecedent"), Max (1), Description (
        "The next hop for the route.") ] 
    CIM_RemoteServiceAccessPoint REF Antecedent;
      [Override ("Dependent"), Description (
        "The route sending traffic to the next hop.") ] 
    CIM_NextHopRoute REF Dependent;
	[Description (
	"Defines whether the referenced SAP MUST immediately follow the "
      "previous hop (TRUE) or whether intermediate hops (between the "
      "last one and this hop) are allowed (FALSE).") ]
   boolean IsStrict;
};

// ==================================================================
//    BindsTo
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association establishes a ServiceAccessPoint "
         "as a requestor of protocol services from a "
         "ProtocolEndpoint. Typically, this association runs "
         "between SAPs and endpoints on a single system. Since a "
         "ProtocolEndpoint is a kind of ServiceAccessPoint, this "
         "binding can be used to establish a layering of two "
         "protocols, the upper layer represented by the Dependent "
         "and the lower layer represented by the Antecedent.") ]
class CIM_BindsTo : CIM_SAPSAPDependency {
        [Override ("Antecedent") ]
    CIM_ProtocolEndpoint REF Antecedent;
        [Override ("Dependent") ]
    CIM_ServiceAccessPoint REF Dependent;
};

// ==================================================================
//    BindsToLANEndpoint
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association makes explicit the dependency of a "
         "ProtocolEndpoint on some lower layer ProtocolEndpoint on "
         "the same system.") ]
class CIM_BindsToLANEndpoint : CIM_BindsTo {
        [Override ("Antecedent") ]
    CIM_LANEndpoint REF Antecedent;
        [Description (
         "This describes the framing method for the upper layer "
         "protocol endpoint that is bound to a LANEndpoint. Note: "
         "\"Raw802.3\" is only known to be used with the IPX "
         "protocol."),
         ValueMap {"0", "1", "2", "3", "4"},
         Values {"Unknown", "Ethernet", "802.2", "SNAP", "Raw802.3"} ]
    uint16 FrameType;
};

// ==================================================================
//     BGPIPRoute
// ==================================================================
        [Version ("2.6.0"), Description (
         "BGPIPRoute describes a BGP routing entry that connects two "
         "peer routers that are running BGP. The source and "
         "destination addresses may be either specific IP endpoints "
         "or IP subnets.") ]
class CIM_BGPIPRoute : CIM_IPRoute {
        [Description (
         "Usually, the administrative distance is used to determine "
         "which route gets installed in the routing table. Using this "
         "scheme, routes learned via EBGP will win over routes "
         "learned via an IGP. If this is not desired, then this "
         "assigns the administrative distance of this route to be "
         "equal to that of a local route, which means that the same "
         "route learned by an IGP will have a lower administrative "
         "distance and be installed instead.") ]
    boolean IsBackDoorRoute;
        [Description (
         "Loopback interfaces are often used by IBGP peers, because "
         "they eliminate a dependency that would otherwise occur if "
         "the actual IP address of a physical interface was used to "
         "configure BGP. The loopback interface instead instructs the "
         "router to use any available interface.") ]
    boolean UsesLoopbackPeering;
};

// ==================================================================
//    RoutesBGP
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association defines a BGP route, and makes explicit "
         "the dependency between a BGPIPRoute and a "
         "BGPProtocolEndpoint.") ]
class CIM_RoutesBGP : CIM_Dependency {
        [Override ("Antecedent"), Max (2), Description (
         "The BGPProtocolEndpoints that represent the source and "
         "destination (or at least the next hop) of the BGP route.") ]
    CIM_BGPProtocolEndpoint REF Antecedent;
        [Override ("Dependent"), Min (1), Description (
         "The routing table entry that represents a BGP route.") ]
    CIM_BGPIPRoute REF Dependent;
};

// ==================================================================
//     NetworksInAdminDomain
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association is used to define the set of Logical"
         "Networks contained in an AdminDomain. This has the implied "
         "semantics that this set of LogicalNetworks are all "
         "administered by the same network admin that "
         "administrates the domain.") ]
class CIM_NetworksInAdminDomain {
        [Key, Min (1), Max (1), Description (
         "The AdminDomain that hosts the various LogicalNetworks.") ] 
    CIM_AdminDomain REF Domain;
        [Weak, Key, Description (
         "The LogicalNetworks that are hosted by the AdminDomain.") ] 
    CIM_LogicalNetwork REF Network;
};

// ==================================================================
//     BGPCluster
// ==================================================================
        [Version ("2.6.0"), Description (
         "The BGP speakers in an AS are required to be fully meshed. "
         "This can lead to a huge number of TCP connections per "
         "router. One way to reduce the peering requirements is to "
         "use a route reflector. This is based on specifying one or "
         "more routers to act as focal points for IBGP sessions. "
         "\n\n"
         "The route reflector as a whole is called a cluster. It is "
         "logically divided into three types of routers: reflectors, "
         "clients of the route reflector(s), and non-clients of the "
         "route reflector. "
         "\n\n"
         "An AS can have more than one route reflector. There can be "
         "more than one route reflector in a cluster, and there can "
         "be more than one cluster in an AS.") ]
class CIM_BGPCluster : CIM_CollectionOfMSEs {
        [Key, Description (
         "If a cluster has more than one route reflector, all of the "
         "route reflectors in the cluster need to be configured with "
         "a 4-byte cluster ID. This allows route reflectors to "
         "recognize updates from other route reflectors in the "
         "same cluster.") ] 
    uint32 ClusterID;
};

// ==================================================================
//     RoutersInBGPCluster
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "This aggregation establishes 'whole-part' relationships "
         "between a BGPCluster and the ComputerSystems (e.g., the "
         "routers) that it contains. At least three routers are "
         "required to form a cluster - a reflector and two clients. "
         "In addition, the routers that form a cluster share common "
         "configuration information, and are commonly administered.") ]
class CIM_RoutersInBGPCluster : CIM_CollectedMSEs {
        [Override ("Collection"), Aggregate, Max (1), 
         Description (
         "The Cluster that aggregates the routers belonging to it "
         "and administers them.") ]
    CIM_BGPCluster REF Collection;
        [Override ("Member"), Min (3), Description (
         "The routers that form the Cluster.") ] 
    CIM_ComputerSystem REF Member;
};

// ==================================================================
//     BGPClustersInAS
// ==================================================================
        [Association, Aggregation, Composition, Version ("2.7.0"), 
         Description (
         "This aggregation establishes 'whole-part' relationships "
         "between an AutonomousSystem and the BGPClusters that it "
         "contains. In addition, the routers that form a cluster share "
         "common configuration information, and are commonly "
         "administered.") ]
class CIM_BGPClustersInAS {
        [Key, Aggregate, Max (1), Description (
         "The AutonomousSystem that aggregates the Clusters belonging "
         "to it and administers them.") ]
    CIM_AutonomousSystem REF GroupAS;
        [Key, Description (
         "The Clusters that are contained in the AS.") ] 
    CIM_BGPCluster REF PartAS;
};

// ==================================================================
//     RoutersInAS
// ==================================================================
        [Association, Aggregation, Composition, Version ("2.7.0"), 
         Description (
         "This aggregation establishes 'whole-part' relationships "
         "between an AutonomousSystem and the routers that it "
         "contains. In addition, the routers in the AS share common "
         "configuration information, and are commonly administered.") ]
class CIM_RoutersInAS : CIM_SystemComponent {
        [Override ("GroupComponent"), Aggregate, Max (1), Description (
         "The AutonomousSystem that aggregates the routers belonging "
         "to it and administers them.") ]
    CIM_AutonomousSystem REF GroupComponent;
        [Override ("PartComponent"), Description (
         "The Routers that are contained in the AS.") ] 
    CIM_ComputerSystem REF PartComponent;
        [Description (
         "This is an array of strings that contain the BGP attributes "
         "supported by this router.") ]
    string BGPSupportedAttributes[];
        [Description (
         "TRUE means that the community value of this router is added "
         "to the existing community value, and FALSE means that the "
         "community value of this router replaces the existing "
         "community value.") ]
    boolean AddCommunityValue;
        [Description (
         "This is an enumeration that defines the function, from the "
         "point of view of BGP, of this router."),
         ValueMap {"0", "1", "2", "3", "4", "5", "6", "7"},
         Values {"Unknown", "Other", "Conventional BGP Speaker",
          "Route Reflector", "Router Reflector Client",
          "Route Reflector Non-Client", "Peer Group Member",
          "Confederation Member"},
         ModelCorrespondence {
          "CIM_BGPService.OtherRoleDescription"} ]
    uint16 Role;
        [MaxLen(64), Description (
         "A string describing the type of function that this router "
         "has in its AS when the value of the Role property of this "
         "class is set to 1 (i.e., \"Other\"). The format of the string "
         "inserted in this property should be similar in format to "
         "the values defined for the Role property. This property "
         "should be set to NULL when the Role property is any value "
         "other than 1."),
         ModelCorrespondence {"CIM_BGPService.Role"} ]
   string OtherRoleDescription;
};

// ==================================================================
//    ProvidesEndpoint
// ==================================================================
        [Association, Version ("2.7.0"), Description (
         "This association represents a ProtocolEndpoint provided "
         "by a Service, to allow access to the Service.") ]
class CIM_ProvidesEndpoint : CIM_ServiceAccessBySAP {

        [Override ("Antecedent"), Description (
         "The Service that is accessed by the ProtocolEndpoint.") ]
    CIM_Service REF Antecedent;

        [Override ("Dependent"), Description (
         "The ProtocolEndpoint that provides access to the "
         "Service.") ] 
    CIM_ProtocolEndpoint REF Dependent;
};

// ==================================================================
//     ASBGPEndpoints
// ==================================================================
        [Association, Aggregation, Composition, Version ("2.7.0"), 
         Description (
         "This aggregation defines the different router interfaces "
         "that are running BGP in the AutonomousSystem.") ]
class CIM_ASBGPEndpoints : CIM_SystemComponent {
        [Override ("GroupComponent"), Aggregate, Max (1), Description (
         "The AutonomousSystem that aggregates the router interfaces "
         "that are running BGP.") ]
    CIM_AutonomousSystem REF GroupComponent;
        [Override ("PartComponent"), Description (
         "The router interfaces that are contained in the AS.") ] 
    CIM_BGPProtocolEndpoint REF PartComponent;
};

// ==================================================================
//     Confederation
// ==================================================================
        [Association, Aggregation, Composition, Version ("2.7.0"), 
         Description (
         "The BGP speakers in an AS are required to be fully meshed. "
         "This can lead to a huge number of TCP connections per "
         "router. One way to reduce the peering requirements is to "
         "use a confederation. A confederation effectively partitions "
         "one AS into a group of 'sub-ASs'. This enables all of the "
         "benefits of IBGP to be applied inside the confederation, "
         "while enabling EBGP to be run between each confederation. "
         "This enables certain BGP attribute values to be preserved "
         "between confederations. However, to the outside world, the "
         "AS with its confederations appear to be a single AS.") ]
class CIM_Confederation : CIM_SystemComponent {
        [Override ("GroupComponent"), Aggregate, Max (1), 
         Description (
         "The AutonomousSystem that contains the confederations.") ]
    CIM_AutonomousSystem REF GroupComponent;
        [Override ("PartComponent"), Description (
         "The Confederation within the AutonomousSystem.") ]
    CIM_AutonomousSystem REF PartComponent;
        [Description (
         "A unique identifier of the AutonomousSystem that contains "
         "the confederations.") ]
    uint32 ParentASNumber;
        [Description (
         "A unique identifier of the Confederation within the "
         "AutonomousSystem.") ]
    uint32 ChildASNumber;
};

// ==================================================================
//     RouteCalculationService
// ==================================================================
        [Abstract, Version ("2.7.0"), Description (
         "This is an abstract base class, derived from Service, "
         "that represents the route calculation aspects of "
         "a system. This class also addresses functions performed "
         "by the system when it exchanges routing information. "
         "\n\n"
         "Examining the RouteCalculationService class definition, "
         "note that its superclass NetworkService is deprecated. "
         "Therefore, NetworkService’s properties need not be "
         "implemented in an instance of RouteCalculationService. "
         "Unfortunately, NetworkService cannot be removed from "
         "the object hierarchy without a major Schema release. "
         "When/if this occurs, the NetworkService superclass will "
         "be removed, and RouteCalculationService will subclass "
         "from CIM_Service directly. Also note that there are "
         "a large number of additional routing protocols "
         "that are not currently modeled.  These will be added "
         "over time.") ]
class CIM_RouteCalculationService : CIM_NetworkService {
        [Description (
         "The RouterID uniquely identifies the router that is "
         "performing the route calculation. It is the highest IP "
         "address on the router (or the highest loopback interface, "
         "if there is one).") ] 
    string RouterID;
        [Description (
         "This is an enumerated value that defines the routing "
         "algorithm used in this route calculation."),
         ValueMap {"0", "1", "2", "3", "4", "5", "6", "7", "8"},
         Values {"Unknown", "RIPv1", "RIPv2", "OSPFv1", "OSPFv2",
          "BGPv1", "BGPv2", "BGPv3", "BGPv4"} ]
    uint16 AlgorithmType;
};

// ==================================================================
//    CalculatedRoutes
// ==================================================================
        [Association, 
         Deprecated {"CIM_ConcreteDependency", 
          "CIM_NextHopIPRoute.RouteDerivation"}, 
         Version ("2.7.0"), Description (
         "This assocation makes explicit the routes that are "
         "calculated by a specific RouteCalculationService. Thus, "
         "every RouteCalculationService can have its own unique set "
         "of calculated routes. The association is not necessary "
         "in the model and has been deprecated. An instance of the "
         "general ConcreteDependency association can tie a NextHopIPRoute "
         "to a RouteCalculationService. In addition, information on how "
         "the route was derived is available in NextHopIPRoute's "
         "RouteDerivation enumeration.") ]
class CIM_CalculatedRoutes : CIM_Dependency {
        [Deprecated {"CIM_ConcreteDependency.Antecedent",
          "CIM_NextHopIPRoute.RouteDerivation"}, 
         Override ("Antecedent"), Max (1) ]
    CIM_RouteCalculationService REF Antecedent;
        [Deprecated {"CIM_ConcreteDependency.Dependent"},  
         Override ("Dependent") ]
    CIM_IPRoute REF Dependent;
};

// ==================================================================
//    HostedRoutingServices
// ==================================================================
        [Association, Version ("2.7.0"), 
         Deprecated {"CIM_HostedService"}, Description (
         "This is a specialization of CIM_HostedService, which is an"
         "association between a Service and the System on which the "
         "functionality resides. The class, HostedRoutingServices, "
         "is deprecated since it provides no additional semantics "
         "over HostedService, and unecessarily restricts the "
         "Service to a single ComputerSystem.") ]
class CIM_HostedRoutingServices : CIM_HostedService {

        [Override ("Antecedent"), Min (1), Max (1),
         Description ("The hosting router.") ]
    CIM_ComputerSystem REF Antecedent;

        [Override ("Dependent"), Description (
         "The Service hosted on the System.") ]
    CIM_RouteCalculationService REF Dependent;
};

// ==================================================================
//    HostedForwardingServices
// ==================================================================
        [Association, Version ("2.7.0"), 
         Deprecated {"CIM_HostedService"}, Description (
         "This is a specialization of CIM_HostedService, which is an"
         "association between a Service and the System on which the "
         "functionality resides. The class, HostedForwardingServices, "
         "is deprecated since it provides no additional semantics "
         "over HostedService, and unecessarily restricts the "
         "Service to a single ComputerSystem.") ]
class CIM_HostedForwardingServices : CIM_HostedService {

        [Override ("Antecedent"), Min (1), Max (1),
         Description ("The hosting router.") ]
    CIM_ComputerSystem REF Antecedent;

        [Override ("Dependent"), Description (
         "The Service hosted on the System.") ]
    CIM_ForwardingService REF Dependent;
};

// ==================================================================
//    EGPRouteCalcDependency
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This is a specialization of ServiceServiceDependency, and "
         "captures the dependency that external gateway protocols " 
         "(such as BGP) have on interior gateway protocols (such "
         "as OSPF).") ] 
class CIM_EGPRouteCalcDependency : CIM_ServiceServiceDependency {
        [Override ("Antecedent"), Description (
         "The independent RouteCalculationService that provides "
         "routing information from the AS, for the EGP to use.") ]
    CIM_RouteCalculationService REF Antecedent;
        [Override ("Dependent"), Description (
         "The dependent RouteCalculationService (e.g., the Route"
         "CalculationService that is functioning as an EGP.") ]
    CIM_RouteCalculationService REF Dependent;
        [Description (
         "Sometimes it is necessary to inject EGP information, such "
         "as that from BGP, into IGPs. This attribute defines whether "
         "this should be done for the two routing protocols that are "
         "defined by this association. The values below mean that no, "
         " partial, and full EGP information is injected into the "
         "IGP, respectively."),
         ValueMap {"1", "2", "3"},
         Values {"None", "Partial", "Full"} ]
    uint16 IGPInjection;
};

// ==================================================================
//     BGPService
// ==================================================================
        [Version ("2.6.0"), Description (
         "This class is used to represent the basic operation of BGP. "
         "It is derived from RouteCalculationService, the superclass "
         "of all routing protocols.") ]
class CIM_BGPService : CIM_RouteCalculationService {
        [Description (
         "The BGPVersion property defines the version of BGP that "
         "this router is using. This is part of the BGP peer "
         "negotiation  process)."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpVersion"} ]
    uint8 BGPVersion; 
        [Description (
         "BGP sends errors using a NOTIFICATION message. This message "
         "contains an error code, an error subcode, and error data. "
         "The error code defines the type of the notification. The "
         "'Cease' error is for all fatal errors that are not one of "
         "the other five types of errors."),
         ValueMap {"0", "1", "2", "3", "4", "5", "6"},
         Values {"None", "Message Header Error", "OPEN Message Error",
          "UPDATE Message Error", "Hold Timer Expired",
          "Finite State Machine Error", "Cease"} ]
    uint16 LastErrorCode;
        [Description (
         "This defines the BGP error subcode for message header "
         "errors. If the ErrorCode property is any other value, "
         "then this property should be set to NULL."),
         ValueMap {"0", "1", "2", "3"},
         Values {"None", "Connection Not Synchronized",
          "Bad Message Length", "Bad Message Type"},
         ModelCorrespondence {"CIM_BGPService.ErrorCode"} ]
    uint16 LastMessageErrorSubCode;
        [Description (
         "This defines the BGP error subcode for OPEN message "
         "errors. If the ErrorCode property is any other value, "
         "then this property should be set to NULL."),
         ValueMap {"0", "1", "2", "3", "4", "5", "6"},
         Values {"None", "Unsupported Version Number", "Bad Peer AS",
          "Bad BGP Identifier", "Unsupported Optional Parameter", 
          "Authentication Failure", "Unacceptable Hold Time"},
         ModelCorrespondence {"CIM_BGPService.ErrorCode"} ]
    uint16 LastOpenErrorSubCode;
        [Description (
         "This defines the BGP error subcode for UPDATE message "
         "errors. If the ErrorCode property is any other value, "
         "then this property should be set to NULL."),
         ValueMap {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
          "10", "11"},
         Values {"None", "Malformed Attribute List",
          "Unrecognized Well-Known Attribute",
          "Missing Well-Known Attribute", "Attribute Flags Error", 
          "Attribute Length Error", "Invalid Origin Attribute",
          "AS Routing Loop", "Invalid NEXT_HOP Attribute",
          "Optional Attribute Error", "Invalid Network Field",
          "Malformed AS_path"},
         ModelCorrespondence {"CIM_BGPService.ErrorCode"} ]
    uint16 LastUpdateErrorSubCode;
};

// ==================================================================
//     BGPPeerGroup
// ==================================================================
        [Version ("2.6.0"), Description (
         "A BGP Peer Group is a set of BGP neighbors that share the "
         "same update policies. This enables an administrator to "
         "assign policies to the peer group, instead of individually. "
         "This enables the routers in the Peer Group to optimize "
         "UPDATE messages. Consequently, Peer Groups have a set of "
         "restrictions that must be followed in order to work "
         "correctly with external BGP peers. Otherwise, loss of "
         "routing information could occur."
         "\n\n"
         "A BGPPeerGroup is weak to the AutonomousSystem that "
         "contains it. Therefore, the keys from System must be "
         "propagated to it.") ]
class CIM_BGPPeerGroup : CIM_CollectionOfMSEs {
        [Propagated ("CIM_AutonomousSystem.CreationClassName"), Key, 
           MaxLen (256), Description (
         "The scoping AutonomousSystem's CreationClassName.") ] 
    string SystemCreationClassName;
        [Propagated ("CIM_AutonomousSystem.Name"), Key, MaxLen (256),
         Description ("The scoping AutonomousSystem's Name.") ] 
    string SystemName;
        [Key, Description (
         "The type of class that this instance is.") ]
    string CreationClassName;
        [MaxLen(256), Key, Description (
         "This is the name of the BGP Peer Group.") ]
    string Name;
        [Description (
         "This defines the time interval, in seconds, for the "
         "ConnectRetry timer. The suggested value is 120 seconds."),
         Units ("Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpConnectRetryInterval"} ]
    uint32 ConnectRetryInterval;
        [Description (
         "This defines the time interval in seconds for the Hold "
         "Time configured for this BGP speaker with a peer. This "
         "value is placed in an OPEN message sent to a peer by "
         "this BGP speaker, and is compared with the Hold Time "
         "field in the OPEN message received from the peer. This "
         "enables this speaker to establish a mutually agreeable "
         "Hold Time with the peer. This value must not be less "
         "than three seconds. If it is zero, then the Hold Time "
         "is NOT to be established with the peer. The suggested"
         "value for this timer is 90 seconds."),
         Units ("Seconds"),
         Mappingstrings
          {"MIB.IETF|RFC1657-MIB.bgpPeerHoldTimeConfigured"} ]
    uint16 HoldTimeConfigured;
        [Description (
         "This defines the time interval in seconds for the "
         "KeepAlive timer configured for this BGP speaker with "
         "a peer. This value will determine the frequency of "
         "the KEEPALIVE messages relative to the value of the "
         "HoldTimeConfigured property; the actual frequency is "
         "specified by the value of the KeepAlive property. A "
         "reasonable value is one third of that of the value of "
         "the HoldTimeConfigured property. If it is zero, then "
         "NO periodic KEEPALIVE messages are sent to the peer. "
         "The suggested value for this property is 30 seconds. "
         "The maximum value of this property is 21845 seconds."),
         Units ("Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpPeerKeepAliveConfigured"} ]
    uint16 KeepAliveConfigured;
        [Description (
         "This defines the time interval in seconds for the "
         "MinASOriginationInterval timer. The suggested value for "
         "this property is 15 seconds."),
         Units ("Seconds"),
         Mappingstrings
          {"MIB.IETF|RFC1657-MIB.bgpPeerMinASOriginationInterval"} ]
    uint16 MinASOriginationInterval; 
        [Description (
         "This defines the time interval in seconds for the "
         "MinRouteAdvertisementInterval timer. The suggested value "
         "for this property is 30 seconds."),
         Units ("Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpPeerMinRouteAdvertisementInterval"} ]
    uint16 MinRouteAdvertisementInterval;
};

// ==================================================================
//    HostedBGPPeerGroup
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "A BGPPeerGroup is weak to the AutonomousSystem that "
         "contains it. This association formalizes that "
         "relationship.") ]
class CIM_HostedBGPPeerGroup : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), Description (
         "The AutonomousSystem that scopes the BGP peer group.") ]
    CIM_AutonomousSystem REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "The BGP peer group defined in the context of the "
         "AutonomousSystem.") ] 
    CIM_BGPPeerGroup REF Dependent;
};

// ==================================================================
//    ReflectorService
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association will serve as the base class for defining "
         "BGP routing policies for the reflector of this Cluster.") ] 
class CIM_ReflectorService : CIM_Dependency {
        [Override ("Antecedent"), Max (1), Description (
         "The Cluster for which this policy is being defined.") ] 
    CIM_BGPCluster REF Antecedent;
        [Override ("Dependent"), Min (1), Description (
         "The BGPService to which the policy will be applied in "
         "the Cluster.") ]
    CIM_BGPService REF Dependent;
};

// ==================================================================
//    ReflectorClientService
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association will serve as the base class for defining "
         "BGP routing policies for clients of the reflector of "
         "this Cluster.") ] 
class CIM_ReflectorClientService : CIM_Dependency {
        [Override ("Antecedent"), Max (1), Description (
         "The Cluster for which this policy is being defined.") ] 
    CIM_BGPCluster REF Antecedent;
        [Override ("Dependent"), Min (1), Description (
         "The BGPService to which the policy will be applied in "
         "the Cluster.") ]
    CIM_BGPService REF Dependent;
};

// ==================================================================
//    ReflectorNonClientService
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association will serve as the base class for defining "
         "BGP routing policies for the non-clients of the reflector "
         "of this Cluster.") ] 
class CIM_ReflectorNonClientService : CIM_Dependency {
        [Override ("Antecedent"), Max (1), Description (
         "The Cluster for which this policy is being defined.") ] 
    CIM_BGPCluster REF Antecedent;
        [Override ("Dependent"), Description (
         "The BGPService to which the policy will be applied in "
         "the Cluster.") ]
    CIM_BGPService REF Dependent;
};

// ===================================================================
//     FilterEntryBase 
// ===================================================================
  [Abstract, Version ("2.7.0"), Description (
     "A FilterList aggregates instances of (subclasses of) "
     "FilterEntryBase via the aggregation EntriesInFilterList. "
     "The filter entries are always ANDed together when grouped "
     "by the FilterList. Note that it is possible to aggregate "
     "different types of filters into a single FilterList - "
     "for example, packet header filters (represented by the "
     "IpHeadersFilter class) and IPsec security filters." 
     "\n\n"
     "A FilterList is weak to the network device (e.g., the "
     "ComputerSystem) that contains it. Hence, the ComputerSystem "
     "keys are propagated to this class.") ]
class CIM_FilterEntryBase : CIM_LogicalElement {
        [Propagated ("CIM_ComputerSystem.CreationClassName"), Key, 
           MaxLen (256), 
         Description (
          "The scoping ComputerSystem's CreationClassName.") ] 
    string SystemCreationClassName;
        [Propagated ("CIM_ComputerSystem.Name"), Key, MaxLen (256),
         Description (
          "The scoping ComputerSystem's Name.") ] 
    string SystemName;
        [Key, MaxLen (256), 
         Description (
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this property "
          "allows all instances of this class and its subclasses to "
          "be uniquely identified.") ]
    string CreationClassName;
        [Key, MaxLen (256), 
         Description (
          "The Name property defines the label by which the Filter"
            "Entry is known and uniquely identified.") ] 
    string Name;
        [Description (
          "Boolean indicating that the match condition described "
          "in the properties of the FilterEntryBase subclass "
          "should be negated.") ]
    boolean IsNegated;
};

// ==================================================================
//     FilterEntry
// ==================================================================
        [Version ("2.7.0"), Description (
         "A FilterEntry is used by network devices to identify "
         "traffic and either forward it (with possibly further "
         "processing) to its destination, or to deny its "
         "forwarding. It is one of the building block of "
         "FilterLists."
         "\n\n"
         "This class is oriented towards packet filtering. Other "
         "subclasses of FilterEntryBase can be defined to do other "
         "types of filtering. "
         "\n\n"
         "A FilterEntry is weak to the network device (i.e., the "
         "ComputerSystem) that contains it. Hence, the ComputerSystem "
         "keys are propagated to this class.") ]
class CIM_FilterEntry : CIM_FilterEntryBase {
       [Description (
         "This defines the type of traffic that is being filtered. "
         "This will affect the filtering rules in the MatchCondition "
         "property of this class."),
         ValueMap {"0", "1", "2", "3", "4", "5"},
         Values {"Unknown", "IPv4", "IPX", "IPv6", "Any", "Other"},
         ModelCorrespondence {"CIM_FilterEntry.OtherTrafficType"} ]
    uint16 TrafficType;
        [Description (
         "If the value of the TrafficType property in this "
         "class is 5 (i.e., \"Other\"), then the specific type of "
         "traffic is specified in this property."),
         ModelCorrespondence {"CIM_FilterEntry.TrafficType"} ]
    string OtherTrafficType;
        [Description (
         "This specifies one of a set of ways to identify traffic. "
         "if the value is 1 (i.e., \"Other\"), then the specific "
         "type of filtering is specified in the "
         "OtherMatchConditionType property of this class."),
         ValueMap {"1", "2", "3", "4", "5", "6", "7", "8", "9",
          "10", "11", "12", "13"},
         Values {"Other", "Source Address and Mask",
          "Destination Address and Mask", "Source Port",
          "Source Port Range", "Destination Port",
          "Destination Port Range", "Protocol Type",
          "Protocol Type and Option", "DSCP", "ToS Value",
          "802.1P Priority Value", "Any"},
         ModelCorrespondence { 
          "CIM_FilterEntry.OtherMatchConditionType"} ]
    uint16 MatchConditionType;
        [Description (
         "If the value of the MatchConditionType property in this "
         "class is 1 (i.e., \"Other\"), then the specific type of "
         "filtering is specified in this property."),
         ModelCorrespondence { 
          "CIM_FilterEntry.MatchConditionType"} ]
    string OtherMatchConditionType;
        [Description (
         "This is the value of the condition that filters the "
         "traffic. It corresponds to the condition specified in the "
         "MatchConditionType property. If, however, the value of the "
         "MatchConditionProperty is 1, then it corresponds to the "
         "condition specified in the OtherMatchConditionType "
         "property.") ]
    string MatchConditionValue;
        [Description (
         "This defines whether the action should be to forward or "
         "deny traffic meeting the match condition specified in "
         "this filter."),
         ValueMap {"1", "2"},
         Values {"Permit", "Deny"} ]
    uint16 Action;
        [Description (
         "This defines whether this FilterEntry is the default "
         "entry to use by its FilterList.") ]
    boolean DefaultFilter;
        [Description (
         "This defines the traffic class that is being matched by "
         "this FilterEntry. Note that FilterEntries are aggregated "
         "into FilterLists by the EntriesInFilterList "
         "relationship. If the EntrySequence property of the "
         "aggregation is set to 0, this means that all the Filter"
         "Entries should be ANDed together. Consequently, the "
         "TrafficClass property of each of the aggregated Entries "
         "should be set to the same value.") ]
    string TrafficClass;
}; 

// =================================================================== 
//     IPHeadersFilter 
// =================================================================== 
        [Version ("2.6.0"), Description (
         "IPHeadersFilter contains the most commonly " 
         "required properties for performing filtering on IP, TCP or " 
         "UDP headers. Properties not present in an instance of the " 
         "IPHeadersFilter are treated as 'all values'.") ] 
class CIM_IPHeadersFilter : CIM_FilterEntryBase { 
        [Description (
         "HdrIPVersion identifies the version of the IP "
         "addresses for IP header filters. It is also used to "
         "determine the sizes of the OctetStrings in the six "
         "properties HdrSrcAddress, HdrSrcAddressEndOfRange, "
         "HdrSrcMask, HdrDestAddress, HdrDestAddressEndOfRange "
         "and HdrDestMask, as follows: \n"
         "ipv4(4): OctetString(SIZE (4)) \n"
         "ipv6(6): OctetString(SIZE (16|20)), \n"
         "depending on whether a scope identifier is present. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider IP version in selecting matching "
         "packets, i.e., IP version matches for all values. In this "
         "case, the HdrSrcAddress, HdrSrcAddressEndOfRange, "
         "HdrSrcMask, HdrDestAddress, HdrDestAddressEndOfRange and "
         "HdrDestMask must also be not present."),
         ValueMap {"4", "6"},
         Values {"IPv4", "IPv6"},
         ModelCorrespondence {"CIM_IPHeadersFilter.HdrSrcAddress",
          "CIM_IPHeadersFilter.HdrSrcAddressEndOfRange",
          "CIM_IPHeadersFilter.HdrSrcMask",
          "CIM_IPHeadersFilter.HdrDestAddress",
          "CIM_IPHeadersFilter.HdrDestAddressEndOfRange",
          "CIM_IPHeadersFilter.HdrDestMask"} ]
    uint8 HdrIPVersion;
        [Description (
         "HdrSrcAddress is an OctetString, of a size "
         "determined by the value of the HdrIPVersion property, "
         "representing a source IP address. When there is no "
         "HdrSrcAddressEndOfRange value, this value is compared to "
         "the source address in the IP header, subject to the mask "
         "represented in the HdrSrcMask property. (Note that the "
         "mask is ANDed with the address.) When there is a "
         "HdrSrcAddressEndOfRange value, this value is the start of "
         "the specified range (i.e., the HdrSrcAddress is lower than "
         "the HdrSrcAddressEndOfRange) that is compared to the source "
         "address in the IP header and matches on any value in the "
         "range. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrSrcAddress in selecting "
         "matching packets, i.e., HdrSrcAddress matches for all "
         "values."), 
         OCTETSTRING,
         ModelCorrespondence {"CIM_IPHeadersFilter.HdrIPVersion"} ]
    uint8 HdrSrcAddress[];
        [Description (
         "HdrSrcAddressEndOfRange is an OctetString, of "
         "a size determined by the value of the HdrIPVersion property, "
         "representing the end of a range of source IP addresses "
         "(inclusive), where the start of the range is the "
         "HdrSrcAddress property value. \n"
         "\n"
         "If a value for HdrSrcAddress is not provided, then this "
         "property also MUST NOT be provided. If a value for this "
         "property is provided, then HdrSrcMask MUST NOT be provided."), 
         OCTETSTRING,
         ModelCorrespondence {"CIM_IPHeadersFilter.HdrIPVersion"} ]
    uint8 HdrSrcAddressEndOfRange[];
        [Description (
         "HdrSrcMask is an OctetString, of a size "
         "determined by the value of the HdrIPVersion property, "
         "representing a mask to be used in comparing the source "
         "address in the IP header with the value represented in "
         "the HdrSrcAddress property. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrSrcMask in selecting "
         "matching packets, i.e., the value of the HdrSrcAddress or "
         "the source address range must match the source address "
         "in the packet exactly. If a value for this "
         "property is provided, then HdrSrcAddressEndOfRange "
         "MUST NOT be provided."), 
         OCTETSTRING,
         ModelCorrespondence {"CIM_IPHeadersFilter.HdrIPVersion"} ]
    uint8 HdrSrcMask[];
        [Description (
         "HdrDestAddress is an OctetString, of a size "
         "determined by the value of the HdrIPVersion property, "
         "representing a destination IP address. When there is no "
         "HdrDestAddressEndOfRange value, this value is compared to "
         "the destination address in the IP header, subject to the "
         "mask represented in the HdrDestMask property. (Note that "
         "the mask is ANDed with the address.) When there is a "
         "HdrDestAddressEndOfRange value, this value is the start of "
         "the specified range (i.e., the HdrDestAddress is lower than "
         "the HdrDestAddressEndOfRange) that is compared to the source "
         "address in the IP header and matches on any value in the "
         "range. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrDestAddress in selecting "
         "matching packets, i.e., HdrDestAddress matches for all "
         "values."), 
         OCTETSTRING,
         ModelCorrespondence {"CIM_IPHeadersFilter.HdrIPVersion"} ]
    uint8 HdrDestAddress[];
        [Description (
         "HdrDestAddressEndOfRange is an OctetString, of "
         "a size determined by the value of the HdrIPVersion property, "
         "representing the end of a range of destination IP addresses "
         "(inclusive), where the start of the range is the "
         "HdrDestAddress property value. \n"
         "\n"
         "If a value for HdrDestAddress is not provided, then this "
         "property also MUST NOT be provided. If a value for this "
         "property is provided, then HdrDestMask MUST NOT be provided."), 
         OCTETSTRING,
         ModelCorrespondence {"CIM_IPHeadersFilter.HdrIPVersion"} ]
    uint8 HdrDestAddressEndOfRange[];
        [Description (
         "HdrDestMask is an OctetString, of a size "
         "determined by the value of the HdrIPVersion property, "
         "representing a mask to be used in comparing the destination "
         "address in the IP header with the value represented in the "
         "HdrDestAddress property. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrDestMask in selecting "
         "matching packets, i.e., the value of the HdrDestAddress or "
         "the destination address range must match the destination "
         "address in the packet exactly. If a value for this "
         "property is provided, then HdrDestAddressEndOfRange "
         "MUST NOT be provided."), 
         OCTETSTRING,
         ModelCorrespondence {"CIM_IPHeadersFilter.HdrIPVersion"} ]
    uint8 HdrDestMask[];
        [Description (
         "HdrProtocolID is an 8-bit unsigned integer, "
         "representing an IP protocol type. This value is compared "
         "to the Protocol field in the IP header. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrProtocolID in selecting "
         "matching packets, i.e., HdrProtocolID matches for all "
         "values.") ]
    uint8 HdrProtocolID;
        [Description (
         "HdrSrcPortStart represents the lower end of "
         "a range of UDP or TCP source ports. The upper end of the "
         "range is represented by the HdrSrcPortEnd property. "
         "The value of HdrSrcPortStart MUST be no greater than the "
         "value of HdrSrcPortEnd. \n"
         "\n"
         "A source port filter is evaluated by testing whether the "
         "source port identified in the IP header falls within the "
         "range of values between HdrSrcPortStart and HdrSrcPortEnd, "
         "INCLUDING these two end points. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrSrcPortStart in selecting "
         "matching packets, i.e., there is no lower bound in "
         "matching source port values.") ]
    uint16 HdrSrcPortStart;
        [Description (
         "HdrSrcPortEnd represents the upper end of a "
         "range of UDP or TCP source ports. The lower end of the "
         "range is represented by the HdrSrcPortStart property. The "
         "value of HdrSrcPortEnd MUST be no less than the value of "
         "HdrSrcPortStart. A single port is indicated by equal values "
         "for HdrSrcPortStart and HdrSrcPortEnd. \n"
         "\n"
         "A source port filter is evaluated by testing whether the "
         "source port identified in the IP header falls within the "
         "range of values between HdrSrcPortStart and HdrSrcPortEnd, "
         "INCLUDING these two end points. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrSrcPortEnd in selecting "
         "matching packets, i.e., there is no upper bound in "
         "matching source port values.") ]
    uint16 HdrSrcPortEnd;
        [Description (
         "HdrDestPortStart represents the lower end of "
         "a range of UDP or TCP destination ports. The upper end of "
         "the range is represented by the HdrDestPortEnd property. "
         "The value of HdrDestPortStart MUST be no greater than the "
         "value of HdrDestPortEnd. A single port is indicated by " 
         "equal values for HdrDestPortStart and HdrDestPortEnd. \n"
         "\n"
         "A destination port filter is evaluated by testing whether "
         "the destination port identified in the IP header falls "
         "within the range of values between HdrDestPortStart and "
         "HdrDestPortEnd, INCLUDING these two end points. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrDestPortStart in selecting "
         "matching packets, i.e., there is no lower bound in "
         "matching destination port values.") ]
    uint16 HdrDestPortStart;
        [Description (
         "HdrDestPortEnd represents the upper end of a "
         "range of UDP or TCP destination ports. The lower end of the "
         "range is represented by the HdrDestPortStart property. The "
         "value of HdrDestPortEnd MUST be no less than the value of "
         "HdrDestPortStart. A single port is indicated by equal "
         "values for HdrDestPortStart and HdrDestPortEnd. \n"
         "\n"
         "A destination port filter is evaluated by testing whether "
         "the destination port identified in the IP header falls "
         "within the range of values between HdrDestPortStart and "
         "HdrDestPortEnd, INCLUDING these two end points. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrDestPortEnd in selecting "
         "matching packets, i.e., there is no upper bound in "
         "matching destination port values.") ]
    uint16 HdrDestPortEnd;
        [Description (
         "HdrDSCP is defined as a set of discrete "
         "DiffServ code points, with no inherent structure. There "
         "is no semantically significant relationship between "
         "different HdrDSCPs. Consequently, there is no "
         "provision for specifying a range of HdrDSCPs. \n"
         "\n"
         "Since, in IPv4, the HdrDSCP field may contain bits "
         "to be interpreted as the TOS IP Precedence, this "
         "property is also used to filter on IP Precedence. "
         "Similarly, the IPv6 Traffic Class field is also "
         "filtered using the value(s) in this property. \n"
         "\n"
         "HdrDSCP is defined as an array, to provide the "
         "ability to specify several discrete DSCPs in a single "
         "instance of IPHeadersFilter, that would be OR'ed "
         "together to define the filter criteria. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrDSCP in selecting matching "
         "packets, i.e., HdrDSCP matches for all values."), 
         MAXVALUE (63) ]
    uint8 HdrDSCP[];
        [Description (
         "The 20-bit Flow Label field in the IPv6 header "
         "may be used by a source to label sequences of packets for "
         "which it requests special handling by the IPv6 devices, such "
         "as non-default quality of service or 'real-time' service. "
         "In the filter, this 20-bit string is encoded in a 24-bit " 
         "octetstring by right-adjusting the value and padding on "
         "the left with b'0000'. \n"
         "\n"
         "If a value for this property is not provided, then the "
         "filter does not consider HdrFlowLabel in selecting matching "
         "packets, i.e., HdrFlowLabel matches for all values."), 
         OCTETSTRING ]
    uint8 HdrFlowLabel[];
}; 
    
// ==================================================================
//    8021Filter
// ==================================================================
        [Experimental, Version ("2.7.0"), 
         Description (
         "8021Filter allows 802.1.source and destination MAC addresses, "
         "as well as the 802.1 protocol ID, priority, and VLAN "
         "identifier fields, to be expressed in a single object to "
         "classify and identify traffic.") ]
class CIM_8021Filter : CIM_FilterEntryBase {
        [OctetString, Description (
         "This property is an OctetString of size 6, representing "
         "a 48-bit source MAC address in canonical format. This "
         "value is compared to the SourceAddress field in the "
         "MAC header, subject to the mask represented in the "
         "8021HdrSrcMACMask property. If a value for this "
         "property is not provided, then the filter does not "
         "consider 8021HdrSrcMACAddr in selecting matching packets, "
         "i.e., 8021HdrSrcMACAddr matches for all values.") ]
    uint8 HdrSrcMACAddr8021[6];
        [OctetString, Description (
         "This property is an OctetString of size 6, representing "
         "a 48-bit mask to be used in comparing the SourceAddress "
         "field in the MAC header with the value represented in "
         "the 8021HdrSrcMACAddr property. If a value for this "
         "property is not provided, then the filter does not "
         "consider 8021HdrSrcMACMask in selecting matching packets, "
         "i.e., the value of 8021HdrSrcMACAddr must match the source "
         "MAC address in the packet exactly.") ]
    uint8 HdrSrcMACMask8021[6];
        [OctetString, Description (
         "This property is an OctetString of size 6, representing "
         "a 48-bit destination MAC address in canonical format. This "
         "value is compared to the DestinationAddress field in the "
         "MAC header, subject to the mask represented in the "
         "8021HdrDestMACMask property. If a value for this "
         "property is not provided, then the filter does not "
         "consider 8021HdrDestMACAddr in selecting matching packets, "
         "i.e., 8021HdrDestMACAddr matches for all values.") ]
    uint8 HdrDestMACAddr8021[6];
        [OctetString, Description (
         "This property is an OctetString of size 6, representing "
         "a 48-bit mask to be used in comparing the DestinationAddress "
         "field in the MAC header with the value represented in "
         "the 8021HdrDestMACAddr property. If a value for this "
         "property is not provided, then the filter does not "
         "consider 8021HdrDestMACMask in selecting matching packets, "
         "i.e., the value of 8021HdrDestMACAddr must match the "
         "destination MAC address in the packet exactly.") ]
    uint8 HdrDestMACMask8021[6];
        [Description (
         "This property is a 16-bit unsigned integer, representing "
         "an Ethernet protocol type. This value is compared to the "
         "Ethernet Type field in the 802.3 MAC header. If a value "
         "for this property is not provided, then the filter does not "
         "consider 8021HdrProtocolID in selecting matching packets, "
         "i.e., 8021HdrProtocolID matches for all values.") ]
    uint16 HdrProtocolID8021;
        [MinValue (0), MaxValue (7), Description (
         "This property is an 8-bit unsigned integer, representing "
         "an 802.1Q priority. This value is compared to the Priority "
         "field in the 802.1Q header. Since the 802.1Q Priority field "
         "consists of 3 bits, the values for this property are "
         "limited to the range 0..7. If a value for this property "
         "is not provided, then the filter does not consider "
         "8021HdrPriorityValue in selecting matching packets, i.e., "
         "8021HdrPriorityValue matches for all values.") ]
    uint8 HdrPriorityValue8021;
        [MinValue (0), MaxValue (4095), Description (
         "This property is an 32-bit unsigned integer, representing an "
         "802.1Q VLAN Identifier. This value is compared to the VLAN "
         "ID field in the 802.1Q header. Since the 802.1Q VLAN ID field "
         "consists of 12 bits, the values for this property are limited "
         "to the range 0..4095. If a value for this property is not "
         "provided, then the filter does not consider 8021HdrVLANID in "
         "selecting matching packets, i.e., 8021HdrVLANID matches for "
         "all values.") ]
    uint32 HdrVLANID8021;
};

// ==================================================================
//    PreambleFilter
// ==================================================================
        [Experimental, Version ("2.7.0"), 
         Description (
         "PreambleFilter allows the classification of packets "
         "using traffic-conditioning results (where the results are "
         "determined by a PreambleMarkerService and stored in a "
         "'packet preamble'). This permits information "
         "about the treatment that a packet receives on an ingress "
         "interface to be communicated along with the packet to the "
         "egress interface. An instance of PreambleFilter selects "
         "packets based on a two-part string (type and value pair) "
         "identifying a specific entry in the preamble. The logic "
         "for this match is 'at least one.' That is, a packet with "
         "multiple entries/results in its preamble matches "
         "a filter if at least one of these matches the filter.") ]
class CIM_PreambleFilter : CIM_FilterEntryBase {
        [Description  (
         "  To foster interoperability, the basic format of the "
         "information captured by a PreambleMarker is specified. "
         "That information is contained in the FilterItemList "
         "property (an ordered, string array). Each entry in the "
         "array takes the form 'type,value'. When entries are added, "
         "they are appended to the end of the list. \n"
         "  A limited set of standardized 'type's exist. They are: "
         "   - ConformingFromMeter, NonConformingFromMeter and "
         "PartConformingFromMeter to convey metering results "
         "(where the 'value' is the name of the meter) \n"
         "   - VlanId to describe the traffic's VLAN information "
         "(where the 'value' is the VLAN ID). \n"
         "  An implementation is free to define and use other "
         "preamble 'types'. \n"
         "  Note that a wildcard value of \"any\" is allowed to "
         "indicate that the preamble entry matches for any 'value' "
         "of the specified 'type'. For example, using the wildcard, "
         "an administrator can define a filter to select all "
         "packets that were found to be conforming ('type' = "
         "\"ConformingFromMeter\") without having to name each "
         "meter individually."),
         ArrayType ("Ordered") ]
    string FilterItemList[];
};

// ==================================================================
//     FilterList
// ==================================================================
        [Version ("2.6.0"), Description (
         "A FilterList is used by network devices to identify routes "
         "by aggregating a set of FilterEntries into a unit, called a "
         "FilterList. FilterLists can also be used to accept or deny "
         "routing updates." 
         "\n\n"
         "A FilterList is weak to the network device (i.e., the "
         "ComputerSystem) that contains it. Hence, the ComputerSystem "
         "keys are propagated to this class.") ]
class CIM_FilterList : CIM_LogicalElement {
        [Propagated ("CIM_ComputerSystem.CreationClassName"), Key, 
         MaxLen (256), Description (
         "The scoping ComputerSystem's CreationClassName.") ] 
    string SystemCreationClassName;
        [Propagated ("CIM_ComputerSystem.Name"), Key, MaxLen (256),
         Description ("The scoping ComputerSystem's Name.") ] 
    string SystemName;
        [Key, Description (
         "The type of class that this instance is.") ]
    string CreationClassName;
        [Key, MaxLen(256), Description (
         "This is the name of the FilterList.") ]
    string Name;
        [Description (
         "This defines whether the FilterList is used "
         "for input, output, or both input and output "
         "filtering. All values are used with respect to "
         "the interface for which the FilterList applies. "
         "\n\n" 
         "\"Not Applicable\" (0) is used when there is no "
         "direction applicable to the FilterList.\n"
         "\"Input\" (1) is used when the FilterList applies "
         "to packets that are inbound on the related "
         "interface.\n"
         "\"Output\" (2) is used when the FilterList applies "
         "to packets that are outbound on the related "
         "interface.\n"
         "\"Both\" (3) is used to indicate that "
         "the direction is immaterial, e.g., to filter on "
         "a source subnet regardless of whether the flow is "
         "inbound or outbound.\n"
         "\"Mirrored\" (4) is also applicable to "
         "both inbound and outbound flow processing, but "
         "indicates that the filter criteria are applied "
         "asymmetrically to traffic in both directions "
         "and, thus, specifies the reversal of source and "
         "destination criteria (as opposed to the equality "
         "of these criteria as indicated by \"Both\"). "
         "The match conditions in the aggregated "
         "FilterEntryBase subclass instances are defined "
         "from the perspective of outbound flows and applied "
         "to inbound flows as well by reversing the source "
         "and destination criteria. So, for example, "
         "consider a FilterList with 3 FilterEntries "
         "indicating destination port = 80, and source and "
         "destination addresses of a and b, respectively. "
         "Then, for the outbound direction, the filter "
         "entries match as specified and the 'mirror' (for "
         "the inbound direction) matches on source "
         "port = 80 and source and destination addresses "
         "of b and a, respectively."),
         ValueMap {"0", "1", "2", "3", "4"}, 
         Values {"Not Applicable", "Input", "Output",
          "Both", "Mirrored"} ]
    uint16 Direction;
};

// ==================================================================
//    FilterEntryInSystem
// ==================================================================
        [Association, Aggregation, Version ("2.7.0"), 
         Deprecated {"CIM_HostedFilterEntryBase"}, 
         Description (
         "All filter entries (FilterEntryBase and its subclasses) "
         "are defined in the context of a ComputerSystem/network "
         "device, where they are used to identify and act on network "
         "traffic. Note that this class is deprecated since its "
         "subclassing is not correct. It subclasses from System"
         "Component, but a FilterEntryBase is NOT a Component of a "
         "System. Instead, it is hosted/scoped by the System. "
         "In versions up to CIM 2.6, FilterEntryInSystem was a "
         "mandatory, Weak relationship. This is no longer true, "
         "beginning with CIM V2.7.") ]
class CIM_FilterEntryInSystem : CIM_SystemComponent {
        [Override ("GroupComponent"), Aggregate, Max (1), 
         Deprecated {"CIM_HostedFilterEntryBase.Antecedent"}, 
         Description (
         "The ComputerSystem/network device that scopes the "
         "FilterEntryBase.") ]
    CIM_ComputerSystem REF GroupComponent;
        [Override ("PartComponent"), 
         Deprecated {"CIM_HostedFilterEntryBase.Dependent"}, 
         Description (
         "The FilterEntryBase on the System.") ]
    CIM_FilterEntryBase REF PartComponent;
};

// ==================================================================
//    FilterListInSystem
// ==================================================================
        [Association, Aggregation, Version ("2.7.0"),
         Deprecated {"CIM_HostedFilterList"}, 
         Description (
         "FilterLists are defined in the context of a ComputerSystem "
         "(e.g., a router, firewall or host). Note that this class is "
         "deprecated since its subclassing is not correct. It "
         "subclasses from SystemComponent, but a FilterList is "
         "NOT a Component of a System. Instead, it is hosted/scoped "
         "by the System. In versions up to CIM 2.6, FilterListInSystem "
         "was a mandatory, Weak relationship. This is no longer true, "
         "beginning with CIM V2.7.") ]
class CIM_FilterListInSystem : CIM_SystemComponent {
        [Override ("GroupComponent"), Aggregate, Max (1),
         Deprecated {"CIM_HostedFilterList.Antecedent"}, 
         Description (
         "The ComputerSystem/network device that scopes the "
         "FilterList and administers it.") ]
    CIM_ComputerSystem REF GroupComponent;
        [Override ("PartComponent"), 
         Deprecated {"CIM_HostedFilterList.Dependent"}, 
         Description (
         "The FilterList on the System.") ]
    CIM_FilterList REF PartComponent; 
};

// ==================================================================
//    HostedFilterEntryBase
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "All filter entries (FilterEntryBase and its subclasses) "
         "are defined in the context of a ComputerSystem/network "
         "device, where the filter entries are used and administered.") ]
class CIM_HostedFilterEntryBase : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), 
         Description (
         "The ComputerSystem/network device that scopes the "
         "FilterEntryBase.") ]
    CIM_ComputerSystem REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "The FilterEntryBase on the System.") ]
    CIM_FilterEntryBase REF Dependent;
};

// ==================================================================
//    HostedFilterList
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "FilterLists are defined in the context of a ComputerSystem/"
         "network device, where the list is used and administered.") ]
class CIM_HostedFilterList : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), 
         Description (
         "The ComputerSystem/network device that scopes the "
         "FilterList.") ]
    CIM_ComputerSystem REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "The FilterList on the System.") ]
    CIM_FilterList REF Dependent; 
};

// ==================================================================
//     RoutingPolicy
// ==================================================================
        [Version ("2.6.0"), Description (
         "This class is used to implement routing policies. It "
         "aggregates a set of FilterLists, along with other "
         "appropriate constructs, into a unit. One of the most "
         "important uses of this class is to change the routing "
         "policy by changing values of various BGP attributes in a "
         "consistent manner." 
         "\n\n"
         "A RoutingPolicy is weak to the network device (i.e., the "
         "ComputerSystem) that contains it. Hence, the ComputerSystem "
         "keys are propagated to this class.") ]
class CIM_RoutingPolicy : CIM_LogicalElement {
        [Propagated ("CIM_ComputerSystem.CreationClassName"), Key, 
           MaxLen (256), Description (
         "The scoping ComputerSystem's CreationClassName.") ] 
    string SystemCreationClassName;
        [Propagated ("CIM_ComputerSystem.Name"), Key, MaxLen (256),
         Description ("The scoping ComputerSystem's Name.") ] 
    string SystemName;
        [Key, MaxLen(256), Description (
         "CreationClassName indicates the name of the class or the "
         "subclass used in the creation of an instance. When used "
         "with the other key properties of this class, this property "
         "allows all instances of this class and its subclasses to "
         "be uniquely identified.") ]
    string CreationClassName;
        [Key, MaxLen(256), Description (
         "This is the name of the Routing Policy.") ]
    string Name;
        [Description (
         "The Description property is a free-form string that "
         "provides a textual description of the routing policy.") ] 
    string Description;
        [Description (
         "This defines the type of action that will be performed "
         "if the match conditions of this filter policy are met. "
         "There are essentially three choices: forward the traffic "
         "unmodified, forward the traffic, but modify either the "
         "BGP attributes describing the route and/or other "
         "attributes that define how to condition the traffic "
         "(e.g., its ToS byte settings), or prevent the traffic "
         "from being forwarded."),
         ValueMap {"1", "2", "3", "4", "5", "6", "7", "8", "9"},
         Values {"Accept As Is", "Accept With BGP Changes", 
          "Accept and Remark Packet",
          "Accept With BGP and Remark Changes",
          "Accept With Other Actions",
          "Accept With BGP Changes and Other Actions",
          "Accept with Remark Changes and Other Actions",
          "Accept with BGP and Remark Changes and Other Actions",
          "Deny"} ]
    uint16 Action;
        [Description (
         "This defines one or more BGP attributes that should be"
         "used to modify this routing update."),
         ValueMap {"1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10"},
         Values {"Origin", "AS_Path", "NEXT_HOP", "Multi_Exit_Disc",
          "Local_Pref", "Atomic_Aggregate", "Aggregator", "Community",
          "Originator_ID", "Cluster_List"} ]
    uint16 BGPAction;
        [Description (
         "The value for the corresponding BGPAction.") ]
    string BGPValue;
        [Description (
         "This defines a remarking action for this traffic."),
         ValueMap {"1", "2", "3", "4", "5", "6", "7"},
         Values {"Change DSCP", "Change ToS", "Change 802.1Q Value",
          "Change CIR", "Change CBR", "Change ABR", "Change VBR"} ]
    uint16 RemarkAction; 
        [Description (
         "The value for the corresponding RemarkAction.") ]
    string RemarkValue;
        [Description (
         "This defines other actions to be taken for this traffic."),
         ValueMap {"1", "2", "3", "4", "5", "6", "7"},
         Values {"Other", "Input Flow Policing",
          "Output Flow Policing", "Input Aggregate Policing",
          "Output Aggregate Policing",
          "PoliceByMarkingDown", "PoliceByDroppingDown"} ]
    uint16 ConditioningAction;
        [Description (
         "If the value of the ConditioningAction property of this "
         "class is 1, this contains an application-specific type of "
         "conditioning that is to be performed. Otherwise, if the "
         "ConditioningAction property is any other value, the value "
         "of this property should be NULL."),
         ModelCorrespondence { 
          "CIM_RoutingPolicy.ConditioningAction"} ]
    string OtherConditioningAction; 
        [Description (
         "The value for the corresponding ConditioningAction.") ]
    string ConditioningValue;
        [Description (
         "This controls whether BGP attribute values replace, get "
         "prepended, or get appended to their existing values."),
         ValueMap {"1", "2", "3"},
         Values {"Replace", "Prepend", "Append"} ]
    uint16 AttributeAction;
};

// ==================================================================
//    HostedRoutingPolicy
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "A RoutingPolicy is weak to the network device (i.e., the "
         "ComputerSystem) that contains it. This association "
         "formalizes that relationship.") ]
class CIM_HostedRoutingPolicy : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), Description (
         "The network device/computer system that scopes the "
         "RoutingPolicy.") ]
    CIM_ComputerSystem REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "The routing policy defined in the context of the "
         "network device.") ] 
    CIM_RoutingPolicy REF Dependent;
};

// ==================================================================
//    EntriesInFilterList
// ==================================================================
        [Association, Aggregation, Version ("2.7.0"), 
         Description (
         "This is a specialization of the CIM_Component aggregation "
         "which is used to define a set of filter entries (subclasses "
         "of FilterEntryBase) that are aggregated by a particular "
         "FilterList.") ]
class CIM_EntriesInFilterList : CIM_Component {
        [Override ("GroupComponent"), Aggregate, Max (1), 
         Description (
          "The FilterList, which aggregates the set "
          "of FilterEntries.") ] 
    CIM_FilterList REF GroupComponent;
        [Override ("PartComponent"), 
         Description (
          "Any subclass of FilterEntryBase which is a part of "
          "the FilterList.") ] 
    CIM_FilterEntryBase REF PartComponent;
        [ValueMap {"0"}, Description (
          "The order of the Entry relative to all others in the "
          "FilterList. The only permissible value is zero - "
          "indicating that all the Entries are ANDed together.") ]
    uint16 EntrySequence = 0;
};

// ==================================================================
//    ListsInRoutingPolicy
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "This is a specialization of the CIM_Component aggregation "
         "which is used to define a set of FilterLists that are "
         "aggregated by a particular RoutingPolicy.") ]
class CIM_ListsInRoutingPolicy : CIM_Component {
        [Override ("GroupComponent"), Aggregate, Description (
         "The RoutingPolicy, which aggregates the set "
         "of FilterLists.") ] 
    CIM_RoutingPolicy REF GroupComponent;
        [Override ("PartComponent"), Description (
         "A FilterList, which is part-of the RoutingPolicy.") ] 
    CIM_FilterList REF PartComponent;
        [Description ("The position of the FilterList relative "
         "to all other entries in the RoutingPolicy.") ]
    uint16 ListSequence;
};

// ==================================================================
//    BGPRoutingPolicy
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This is a specialization of the Dependency association, "
         "and defines the relationship between a BGPService and the "
         "RoutingPolicy that control it.") ] 
class CIM_BGPRoutingPolicy : CIM_Dependency {
        [Override ("Antecedent"), Description (
         "The BGP routing policy object.") ] 
    CIM_RoutingPolicy REF Antecedent;
        [Override ("Dependent"), Description (
         "The BGPService that is controlled by the routing policy.") ] 
    CIM_BGPService REF Dependent;
};

// ==================================================================
//    BGPPeerGroupService
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This defines the relationship between a BGPService and the "
         "BGP Peer Group that hosts it.") ] 
class CIM_BGPPeerGroupService : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), 
         Description (
         "The BGP Peer Group that hosts the BGP Service.") ] 
    CIM_BGPPeerGroup REF Antecedent;
        [Override ("Dependent"),
         Description (
         "The BGPService that is hosted in the BGP Peer Group.") ] 
    CIM_BGPService REF Dependent;
};

// ==================================================================
//    AdministrativeDistance
// ==================================================================
        [Version ("2.6.0"), Description (
         "Information in this class affects the choice of one "
         "protocol over another, when two protocols learn "
         "the same route. Properties define the preference of "
         "a protocol, called its distance. The lower the "
         "distance, the higher the preference for that protocol. "
         "This class affects ALL routes and contains the "
         "default distances. Specific administrative "
         "distances relative to an individual route and Forwarding"
         "Service are defined in the NextHopForwardedByService "
         "association, its AdminDistance property."
         "\n\n"
         "AdministrativeDistance, being a global object, is weak to "
         "the AdminDomain that contains it. Hence, the AdminDomain "
         "keys are propagated to this class.") ]
class CIM_AdministrativeDistance : CIM_LogicalElement {
        [Propagated ("CIM_AdminDomain.CreationClassName"), Key, 
         MaxLen (256), Description (
         "The scoping AdminDomain's CreationClassName.") ] 
    string SystemCreationClassName;
        [Propagated ("CIM_AdminDomain.Name"), Key, MaxLen (256),
         Description ("The scoping AdminDomain's Name.") ] 
    string SystemName; 
        [Key, Description (
         "The type of class that this instance is.") ]
    string CreationClassName;
        [Key, MaxLen(256), Description (
         "This is the name of the AdministrativeDistance class.") ]
    string Name; 
        [Description (
         "The distance for directly connected peers. It has a default "
         "value of 0.") ]
    uint8 DirectConnect;
        [Description (
         "The distance for staticly connected peers. It has a default "
         "value of 1.") ]
    uint8 Static;
        [Description (
         "The distance for peers using EBGP. It has a default value "
         "of 20.") ]
    uint8 EBGP; 
        [Description (
         "The distance for peers using internal EIGRP. It has a "
         "default value of 90.") ]
    uint8 EIGRPInternal; 
        [Description (
         "The distance for peers using IGRP. It has a default value "
         "of 100.") ]
    uint8 IGRP; 
        [Description (
         "The distance for peers using OSPF. It has a default value "
         "of 110.") ]
    uint8 OSPF; 
        [Description (
         "The distance for peers using ISIS. It has a default value "
         "of 115.") ]
    uint8 ISIS; 
        [Description (
         "The distance for peers using RIP. It has a default value "
         "of 120.") ]
    uint8 RIP; 
        [Description (
         "The distance for peers using EGP. It has a default value "
         "of 140.") ]
    uint8 EGP; 
        [Description (
         "The distance for peers using external EIGRP. It has a "
         "default value of 170.") ]
    uint8 EIGRPExternal; 
        [Description (
         "The distance for peers using IBGP. It has a default value "
         "of 200.") ]
    uint8 IBGP; 
        [Description (
         "The distance for peers using BGP locally. It has a default "
         "value of 200.") ]
    uint8 BGPLocal; 
        [Description (
         "The distance for peers using an unknown protocol. It has a "
         "default value of 255.") ]
    uint8 Unknown;
};

// ==================================================================
//    HostedAdminDistance
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "AdministrativeDistance, being a global object, is weak to "
         "the AdminDomain that contains it. This association "
         "formalizes that relationship.") ]
class CIM_HostedAdminDistance : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), Description (
         "The AdminDomain that scopes the AdministrativeDistance.") ]
    CIM_AdminDomain REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "The table of (global) administrative distances that are "
         "defined in the context of the AdminDomain.") ] 
    CIM_AdministrativeDistance REF Dependent;
};

// ==================================================================
//    BGPAdminDistance
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This is a specialization of the Dependency association, and "
         "defines the relationship between a BGPService and the "
         "Administrative Distances that it uses to control the "
         "(BGP) routing decisions that it makes.") ] 
class CIM_BGPAdminDistance : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), Description (
         "The table of (global) administrative distances that are "
         "used by all BGP services.") ] 
    CIM_AdministrativeDistance REF Antecedent;
        [Override ("Dependent"), Description (
         "The BGP service object, that makes BGP routing decisions.") ]
    CIM_BGPService REF Dependent;
};

// ==================================================================
//     BGPRouteMap
// ==================================================================
        [Version ("2.6.0"), Description (
         "A route map is used to control and modify routing "
         "information as well as to define when a route is "
         "redistributed between routing domains. Route maps are "
         "placed in router configuration files, and several "
         "instances of the same route map may be used to implement "
         "different actions (see accompanying white paper). "
         "\n\n"
         "Route maps may use FilterLists to identify the route " 
         " (again, see the accompanying white paper). "
         "\n\n"
         "A BGPRouteMap is specific to a given AutonomousSystem that "
         "contains it. Hence, the keys of the AutonomousSystem are "
         "propagated to this class.") ]
class CIM_BGPRouteMap : CIM_LogicalElement {
        [Propagated ("CIM_AutonomousSystem.CreationClassName"), Key, 
         MaxLen (256), Description (
         "The scoping AutonomousSystem's CreationClassName.") ] 
    string SystemCreationClassName;
        [Propagated ("CIM_AutonomousSystem.Name"), Key, MaxLen (256),
         Description ("The scoping AutonomousSystem's Name.") ] 
    string SystemName; 
        [Key, Description (
         "The type of class that this instance is.") ]
    string CreationClassName;
        [Key, MaxLen(256), Description (
         "This is the name of the RouteMap class.") ]
    string Name; 
        [Description (
         "This defines whether this RouteMap is used for input, "
         "output, or both input and output filtering."),
         ValueMap {"1", "2", "3"},
         Values {"Input", "Output", "Both"} ]
    uint16 Direction;
        [Description (
         "This defines whether the action should be to forward or "
         "deny traffic meeting the match condition specified in this "
         "RouteMap"),
         ValueMap {"1", "2"},
         Values {"Permit", "Deny"} ] 
    uint16 Action;
        [Description (
         "This specifies the criteria that must be matched in order "
         "for the corresponding MatchAction to take effect. The "
         "matching of the criteria may be specified by using a "
         "FilterList. For example, the command 'match ip address foo' "
         "uses the FilterList named 'foo' to do the matching of IP "
         "addresses."),
         ValueMap {"1", "2", "3", "4", "5", "6", "7", "8", "9"},
         Values {"Other", "Source Address and Mask",
          "Destination Address and Mask", "Source Port",
          "Source Port Range", "Destination Port",
          "Destination Port Range", "Protocol Type",
          "Protocol Type and Option"},
         ModelCorrespondence { 
          "CIM_RouteMap.OtherMatchConditionType"} ]
    uint16 MatchConditionType;
        [Description (
         "If the value of the MatchConditionType property in this "
         "class is 1 (i.e., \"Other\"), then the specific type of "
         "filtering is specified in this property."),
         ModelCorrespondence { 
          "CIM_RouteMap.MatchConditionType"} ]
    string OtherMatchConditionType; 
        [Description (
         "This defines an additional action to take if the "
         "MatchCondition is satisfied. This definition is "
         "specifically limited to BGP filtering for now (e.g., its "
         "use is limited to setting a BGP attribute to a specific "
         "value), and will be upgraded in a subsequent release. The "
         "actual value of the metric is specified in the "
         "SetMetricValue property."),
         ValueMap {"1", "2", "3", "4", "5", "6", "7", "8", "9"},
         Values {"Origin", "AS_Path", "NEXT_HOP", "Multi_Exit_Disc",
          "Local_Pref", "Atomic_Aggregate", "Aggregator", "Community",
          "Originator_ID"} ]
    uint16 SetMetricType;
        [Description (
         "This is the value of the metric that is being set for the "
         "BGP attribute defined in the SetMetricType property.") ]
    string SetMetricValue;
};

// ==================================================================
//    HostedBGPRouteMap
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "A BGPRouteMap is weak to the AutonomousSystem that "
         "contains it. This association formalizes that "
         "relationship.") ]
class CIM_HostedBGPRouteMap : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), Description (
         "The AutonomousSystem that scopes the BGP route map.") ]
    CIM_AutonomousSystem REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "The BGP route map defined in the context of the "
         "AutonomousSystem.") ] 
    CIM_BGPRouteMap REF Dependent;
};

// ==================================================================
//    BGPRouteMapsInRoutingPolicy
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "This aggregation defines the RouteMaps that are used by a "
         "particular RoutingPolicy object. Multiple instances of the "
         "same RouteMap may be used in the same RoutingPolicy "
         "instance; if this is desired, then the Sequence attribute "
         "of this aggregation can be used to disambiguate them.") ]
class CIM_BGPRouteMapsInRoutingPolicy : CIM_Component {
        [Override ("GroupComponent"), Aggregate, Description (
         "The RoutingPolicy that aggregates the RouteMaps.") ] 
    CIM_RoutingPolicy REF GroupComponent;
        [Override ("PartComponent"), Description (
         "The RouteMaps that are used by the RoutingPolicy.") ] 
    CIM_BGPRouteMap REF PartComponent;
        [Description (
         "This defines the position of this RouteMap instance "
         "relative to all other instances of the same RouteMap.") ]
    uint16 MapSequence;
};

// ==================================================================
//    BGPPeerUsesRouteMap
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "This association defines the RouteMaps that are aggregated "
         "and used by a particular BGPPeerGroup object. Multiple "
         "instances of the same RouteMap may be aggregated into the "
         "same BGPPeerGroup; if this is desired, then the MapSequence "
         "attribute of the association can be used to disambiguate "
         "them.") ]
class CIM_BGPPeerUsesRouteMap : CIM_CollectedMSEs {
        [Override("Collection"), Aggregate, 
         Description (
         "The BGPPeerGroup that aggregates the RouteMaps.") ] 
    CIM_BGPPeerGroup REF Collection;
        [Override("Member"), 
         Description (
         "The RouteMaps that are used by the BGPPeerGroup.") ] 
    CIM_BGPRouteMap REF Member;
        [Description (
         "This defines the position of this RouteMap instance "
         "relative to all other instances of the same RouteMap.") ]
    uint16 MapSequence;
};

// ==================================================================
//    FilterListsInBGPRouteMap
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "RouteMaps do not have to use FilterLists, but if they do, "
         "this association defines which FilterList is used by a "
         "particular RouteMap.") ] 
class CIM_FilterListsInBGPRouteMap : CIM_Dependency {
        [Override ("Antecedent"), Description (
         "The FilterList used by a RouteMap.") ] 
    CIM_FilterList REF Antecedent;
        [Override ("Dependent"), Description (
         "The RouteMap using the FilterList.") ] 
    CIM_BGPRouteMap REF Dependent;
};

// ==================================================================
//    InBGPPeerGroup
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "This aggregation defines the specific routers (i.e., "
         "ComputerSystems) that participate in a PeerGroup.") ] 
class CIM_InBGPPeerGroup : CIM_CollectedMSEs {
        [Override ("Collection"), Aggregate, Max (1), Description (
         "The PeerGroup that aggregates the routers.") ] 
    CIM_BGPPeerGroup REF Collection;
        [Override ("Member"), Min (2), Description (
         "The routers that comprise the PeerGroup.") ] 
    CIM_ComputerSystem REF Member;
};

// ==================================================================
//    CalculatesAmong 
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This is a specialization of the ServiceSAPDependency "
         "association, indicating that the referenced "
         "ProtocolEndpoint is utilized by the "
         "RouteCalculationService to provide its functionality.") ]
class CIM_CalculatesAmong : CIM_ServiceSAPDependency {
        [Override ("Antecedent"), 
           Description ("The required ProtocolEndpoint") ] 
    CIM_ProtocolEndpoint REF Antecedent;
        [Override ("Dependent"), Description (
         "The RouteCalculationService, which is dependent on the "
         "underlying ProtocolEndpoint.") ] 
    CIM_RouteCalculationService REF Dependent;
        [Description (
         "TRUE indicates that this ProtocolEndpoint represents a "
         "static route, and FALSE means that it represents a "
         "dynamically-learned route.") ]
    boolean IsStatic;
};

// ==================================================================
//    BGPAttributes 
// ==================================================================
        [Version ("2.6.0"), Description (
         "This class defines all of the BGP Attributes, for a given "
         "version of the BGP protocol, that can be used to affect "
         "routing decisions. "
         "\n\n"
         "BGPAttributes are specific to a given AutonomousSystem that "
         "contains it. Hence, the keys of the AutonomousSystem are "
         "propagated to this class.") ]
class CIM_BGPAttributes : CIM_LogicalElement {
        [Propagated ("CIM_AutonomousSystem.CreationClassName"), Key, 
         MaxLen (256), Description (
         "The scoping AutonomousSystem's CreationClassName.") ] 
    string SystemCreationClassName;
        [Propagated ("CIM_AutonomousSystem.Name"), Key, MaxLen (256),
         Description ("The scoping AutonomousSystem's Name.") ] 
    string SystemName; 
        [Key, Description (
         "This defines the version of the BGP protocol.") ]
    string Version;
        [Description (
         "This defines the priority, or preference, of a route, in "
         "order to better compare it with other routes for the same "
         "destination. Higher values indicate a higher preference "
         "for a route."),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgp4PathAttrLocalPref"} ]
    uint16 LocalPreference;
        [Description (
         "This attribute is a sequences of the AS numbers through "
         "which routing information carried in this UPDATE message "
         "has passed. The components of this list can be AS_SETs "
         "or AS_SEQUENCEs."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgp4PathAttrASPath"} ]
    string ASPath;
        [Description (
         "This is the set of all elements contained in all specific "
         "paths that are being summarized, so that those attributes "
         "will remain available to the routing decision process.") ]
    string AS_Set;
        [Description (
         "This attribute defines the IP address of the border router "
         "that should be used as the next hop to the destinations "
         "listed in the UPDATE message."),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgp4PathAttrNextHop"} ]
    string NextHop; 
        [Description (
         "This defines the next hop to be the IP address of the "
         "border IBGP neighbor.") ]
    string NextHopSelf;
        [Description (
         "This is used on external (e.g., inter-AS) links to indicate "
         "which is the preferred entry point into an AS, when that AS "
         "has multiple entry points. Lower MED values have "
         "preference."),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgp4PathAttrMultiExitDisc"} ]
    uint32 MED;
        [Description (
         "This defines a group of destinations that share a similar "
         "property. Communities are not restricted to a single AS, "
         "and can span multiple ASs. This attribute is used to "
         "simplify routing policies by basing policies on a logical "
         "value, as opposed to an IP address or an AS number.") ]
    uint32 BGPCommunityValue;
        [Description (
         "This attribute gets set if there are overlapping routes, "
         "and a less-specific route is selected instead of a more "
         "specific one (e.g., a system propagates an aggregate "
         "that causes loss of information."),
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrAtomicAggregate"} ]
    boolean AtomicAggregate;
        [Description (
         "This specifies the AS and IP address of the router that has "
         "generated an aggregate."),
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrAggregatorAS"} ]
    string Aggregator;
        [Description (
         "This is generated by the AS that originates the routing "
         "information. There are three types of origins - IGP, EGP, "
         "and INCOMPLETE. These correspond to whether the information "
         "was learned internally in the AS, externally via an EGP, "
         "or by some other means."),
         ValueMap {"1", "2", "3"},
         Values {"IGP", "EGP", "INCOMPLETE"},
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgp4PathAttrOrigin"} ]
    uint16 Origin; 
        [Description (
         "This is the router ID for the ORIGIN attribute.") ]
    string OriginatorID;
};

// ==================================================================
//    HostedBGPAttributes
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "The class BGPAttributes is weak to the AutonomousSystem "
         "that contains it. This association formalizes that "
         "relationship.") ] 
class CIM_HostedBGPAttributes : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1), Description (
         "The AutonomousSystem that scopes the BGP attributes.") ]
    CIM_AutonomousSystem REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "The BGP attributes defined in the context of the "
         "AutonomousSystem.") ] 
    CIM_BGPAttributes REF Dependent;
};

// ==================================================================
//    FilteredBGPAttributes 
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "This is a specialization of the Component aggregation, "
         "which is used to define the set of BGP Attributes that are "
         "used by a particular Routing Policy.") ] 
class CIM_FilteredBGPAttributes : CIM_Component {
        [Override ("GroupComponent"), Aggregate, Description (
         "The RoutingPolicy, which aggregates a set of BGP "
         "attributes.") ]
    CIM_RoutingPolicy REF GroupComponent;
        [Override ("PartComponent"), Description (
         "A BGP attribute, which is part-of the RoutingPolicy.") ]
    CIM_BGPAttributes REF PartComponent;
};

// ==================================================================
//    BGPPathAttributes 
// ==================================================================
        [Version ("2.6.0"), Description (
         "This class defines the per-path information used to process "
         "specific BGP attribute information, as defined in the "
         "bgp4PathAttrTable of RFC 1657.") ]
class CIM_BGPPathAttributes : CIM_LogicalElement {
        [Description (
         "This property and its description are taken directly from "
         "RFC 1657. The property represents a sequence of AS path "
         "segments. Each AS path segment is represented by the "
         "tuple: \n"
         "     <type, length, value>"
         "\n\n"
         "The type is a 1-octet field which has two possible values: \n"
         " 1 = AS_SET \n"
         " 2 = AS_SEQUENCE \n"
         "An AS_SET is an unordered set of ASs representing the path "
         "that an UPDATE message has traversed, and an AS_SEQUENCE is "
         "an ordered set of ASs representing the path that an UPDATE "
         "message has traversed. "
         "\n\n"
         "The length is a 1-octet field containing the number of ASs "
         "in the value field. "
         "\n\n"
         "The value field contains one or more AS numbers, each AS is "
         "represented in the octet string as a pair of octets "
         "according to the following algorithm: "
         "    first-byte-of-pair = ASNumber / 256; "
         "    second-byte-of-pair = ASNumber & 255;"
         "\n\n"
         "This property is mapped from the bgp4PathAttrASPathSegment "
         "MIB variable, which is an OctetString. Its length is "
         "defined as a minimum of 2 and a maximum of 255 octets."),
         ArrayType ("Indexed"),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgp4PathAttrASPathSegment"} ]
    uint8 PathAttrASPathSegment[ ];
        [Key, MaxLen (512), Description (
         "A comma-separated list of AS numbers, as would be stored "
         "in the value portion of the path segment in the "
         "PathAttrASPathSegment property. This list can be ordered "
         "or unordered.") ]
    string ASNumbers;
        [Key, MaxLen (32), Description (
         "This is the address of the border router that should be "
         "used for the destination network."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgp4PathAttrNextHop"} ]
    string PathAttrNextHop;
        [Description (
         "This is an enumeration that defines the ultimate origin of "
         "the path information. The value 'IGP' means that the origin "
         "is interior; the value 'EGP' means that it was learned via "
         "an EGP; the value 'INCOMPLETE' means that the origin is "
         "undetermined."),
         ValueMap {"1", "2", "3"},
         Values {"IGP", "EGP", "INCOMPLETE"},
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgp4PathAttrOrigin"} ]
    uint16 PathAttrOrigin;
        [Description (
         "This metric is used to discriminate between multiple "
         "adjacent autonomous systems. A value of -1 indicates the "
         "absence of this attribute. The range of this attribute "
         "is defined to be -1 to 2147483647."),
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrMultiExitDisc"} ]
    sint32 PathAttrMultiExitDisc;
        [Description (
         "This is the originating BGP4 speaker's degree of preference "
         "for an advertised route. A value of -1 indicates the "
         "absence of this attribute. The range of this attribute is "
         "defined to be -1 to 2147483647."),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgp4PathAttrLocalPref"} ]
    sint32 PathAttrLocalPref;
        [Description (
         "This is an enumeration that defines whether or not the "
         "local system has selected a less specific route without "
         "selecting a more specific route. There are two values, 1 "
         "and 2, indicating that a less specific route has not and "
         "has been selected, respectively. This is a 32-bit integer "
         "to correspond to the IETF MIB."),
         ValueMap {"1", "2"},
         Values {"Less Specific Not Selected",
          "Less Specific Selected"},
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrAtomicAggregate"} ]
    uint32 PathAttrAtomicAggregate;
        [Description (
         "This is the AS number of the last BGP4 speaker that "
         "performed route aggregation. A value of 0 indicates the "
         "absence of this attribute. The range of this attribute is "
         "defined to be 0 to 65535."),
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrAggregatorAS"} ]
    uint16 PathAttrAggregatorAS; 
        [Description (
         "This is the IP address of the last BGP4 speaker that "
         "performed route aggregation. A value of 0.0.0.0 indicates "
         "the absence of this attribute."),
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrAggregatorAddr"} ]
    string PathAttrAggregatorAddr;
        [Description (
         "This is the degree of preference calculated by the "
         "receiving BGP4 speaker for an advertised route. A value of "
         "-1 indicates the absence of this attribute. The range of "
         "this attribute is defined to be -1 to 2147483647."),
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrCalcLocalPref"} ]
    sint16 PathAttrCalcLocalPref;
        [Description (
         "This is an indication of whether or not this route was "
         "chosen as the best BGP4 route. There are three possible "
         "values, 0 (Unknown), 1 (FALSE) and 2 (TRUE)."),
         ValueMap {"0", "1", "2"},
         Values {"Unknown", "False", "True"}, 
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgp4PathAttrBest"} ]
    uint16 PathAttrBest;
        [Description (
         "This contains one or more path atributes not understood by "
         "this BGP4 speaker. The MIB variable is an OctetString, and "
         "contains a 1-octet length field and up to 254 additional "
         "octets of data. The length is placed in a separate "
         "attribute of this class, PathAttrUnknownNumber."),
         ModelCorrespondence { 
          "CIM_BGPPathAttributes.PathAttrUnknownNumber"},
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgp4PathAttrUnknown"} ]
    string PathAttrUnknown[ ];
        [Description (
         "The MIB variable is an OctetString, and contains a 1-octet "
         "length field and up to 255 additional octets of data. The "
         "length is placed in this attribute."),
         ModelCorrespondence { 
          "CIM_BGPPathAttributes.PathAttrUnknown"},
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgp4PathAttrUnknown"} ]
    uint16 PathAttrUnknownNumber;
};

// ==================================================================
//    BGPAttributesForRoute
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This defines the attributes that are transmitted between "
         "BGP peers on a per-route basis.") ] 
class CIM_BGPAttributesForRoute : CIM_Dependency {
        [Override ("Antecedent"), Max (1), Description (
         "The BGPPathAttribute object that may be associated with "
         "a BGP route.") ]
    CIM_BGPPathAttributes REF Antecedent;
        [Override ("Dependent"), Max (1), Description (
         "The BGPIPRoute that may have an associated set of "
         "per-peer attributes.") ]
    CIM_BGPIPRoute REF Dependent;
        [Description (
         "This defines the IP address of the peer where the path "
         "information was learned."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgp4PathAttrPeer"} ]
    string PathAttrPeer;
        [Description (
         "This defines the length in bits of the IP address prefix "
         "in the Network Layer Reachability information field. The "
         "range of this attribute is defined to be 0 to 32."),
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrIpAddrPrefixLen"} ]
    uint8 PathAttrIPAddrPrefixLen; 
        [Description (
         "An IP address prefix in the Network Layer Reachability "
         "Information field. This object is an IP address "
         "containing the prefix with length specified by the "
         "PathAttrIpAddrPrefixLen attribute."),
         ModelCorrespondence {
          "CIM_BGPPathAttributes.PathAttrIpAddrPrefixLen"},
         Mappingstrings {
          "MIB.IETF|RFC1657- MIB.bgp4PathAttrIpAddrPrefix"} ]
    string PathAttrIPAddrPrefix; 
};

// ==================================================================
//    BGPServiceAttributes 
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "This is a specialization of the Component aggregation. This "
         "aggregation defines the set of BGP Attributes that are "
         "transmitted in per-path UPDATE messages.") ] 
class CIM_BGPServiceAttributes : CIM_Component {
        [Override ("GroupComponent"), Aggregate, Max (1),
         Description (
         "The BGPService that aggregates BGP attributes as part of "
         "its routing information.") ]
    CIM_BGPService REF GroupComponent;
        [Override ("PartComponent"), Min (1), Max (1), 
         Description (
         "The BGP attribute, which are part-of the BGP UPDATE "
         "message.") ]
    CIM_BGPPathAttributes REF PartComponent;
};

// ===================================================================
//     SwitchService
// ===================================================================
        [Version ("2.6.0"), Description (
         "Generic switch (bridging) service class. Additional "
         "switching functions are incorporated as subordinate "
         "services related to this class via ServiceComponent "
         "associations.") ]  
class CIM_SwitchService : CIM_ForwardingService {
        [MaxLen(32), Description (
         "Address used by this SwitchService when it must be "
         "uniquely identified. For an ethernet bridge, the MAC "
         "Address serves as the BridgeAddress.  When concatenated with "
         "a SpanningTreeService Priority, a unique bridge identifier "
         "results. The MAC address is formatted as twelve "
         "hexadecimal digits (e.g., \"010203040506\"), with each "
         "pair representing one of the six octets of the MAC address "
         "in \"canonical\" bit order according to RFC 2469."
         "In other scenarios, like Ipv6, the address is formatted as "
         "\"ffff:ffff:ffff:ffff\"."),
         ModelCorrespondence {"CIM_SwitchService.BridgeAddressType"},
         Mappingstrings { 
          "MIB.IETF|RFC1493- MIB.dot1dBaseBridgeAddress"}  ] 
    string BridgeAddress; 
        [Description (
         "The number of switch ports controlled by this "
         "switching service.") , 
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dBaseNumPorts"} ] 
    uint16 NumPorts ;
        [Description (
         "Indicates what type of switching service can be "
         "performed."), 
         ValueMap {"1", "2", "3", "4"}, 
         Values {"Unknown", "Transparent-only", "SourceRoute-only",
          "SRT"},   
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dBaseType"} ] 
    uint8 BridgeType ;
        [Description (
         "BridgeAddressType defines the type of addressing scheme used "
         "for this Bridge and its BridgeAddress property."),
         ValueMap {"1", "2", "3", "4", "5"}, 
         Values {"Other", "IPv4", "IPv6", "MAC", 
          "MAC + Spanning Tree Priority"}, 
         ModelCorrespondence {"CIM_SwitchingService.BridgeAddress"} ]
    uint16 BridgeAddressType;
};

// ===================================================================
//     SwitchPort
// ===================================================================
        [Version ("2.6.0"), Description (
         "Switch Port from which frames are received "
         "and out which they are transmitted.") ] 
class CIM_SwitchPort : CIM_ProtocolEndpoint {
        [Description (
         "Numeric identifier for a switch port."),
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dPort"} ]
    uint16 PortNumber;
};

// ==================================================================
// TCPProtocolEndpoint
// ==================================================================
   [Experimental, Version ("2.7.0"), Description (
     "A protocol endpoint that is dedicated to running TCP.") ]
class CIM_TCPProtocolEndpoint : CIM_ProtocolEndpoint {
      [Description ("The TCP port number.") ]
    uint32 PortNumber; 
};

// ==================================================================
// UDPProtocolEndpoint
// ==================================================================
   [Experimental, Version ("2.7.0"), Description (
     "A protocol endpoint that is dedicated to running UDP.") ]
class CIM_UDPProtocolEndpoint : CIM_ProtocolEndpoint {
      [Description ("The UDP port number.") ]
    uint32 PortNumber; 
};

// ===================================================================
//     SwitchesAmong
// ===================================================================
        [Association, Version ("2.6.0"), Description (
         "A SwitchService switches frames between SwitchPorts. "
         "This association makes that relationship explicit.") ]
class CIM_SwitchesAmong : CIM_ForwardsAmong {
        [Override ("Antecedent"),
         Description ("The switch port.") ]
    CIM_SwitchPort REF Antecedent;
        [Override ("Dependent"),  Max (1),
         Description ("The switching service.") ]
    CIM_SwitchService REF Dependent;
};

// ===================================================================
//     Switchable
// ===================================================================
        [Association, Version ("2.6.0"), Description (
         "A switch port has a LANEndpoint that is "
         "exposed via this relationship.") ] 
class CIM_Switchable : CIM_BindsToLANEndpoint {
        [Override ("Antecedent"), Max (1),
         Description ("The switch port.") ]
    CIM_LANEndpoint REF Antecedent;
        [Override ("Dependent"), Max (1),
         Description ("The LAN endpoint.") ]
    CIM_SwitchPort REF Dependent;
};

// ===================================================================
//     TransparentBridgingService
// ===================================================================
        [Version ("2.6.0"), Description (
         "This service class represents the learning/transparent "
         "bridging aspect of switch service.") ]
class CIM_TransparentBridgingService : CIM_Service {
        [Description (
         "The timeout period in seconds for aging out "
         "dynamically learned forwarding information. "
         "802.1D-1990 recommends a default of 300 seconds."),
         Units("Seconds"), 
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dTpAgingTime"} ]
    uint32 AgingTime;
        [Description (
         "Filtering Database Identifier. Used by VLAN-aware "
         "switch having more than one filtering database."),
         Mappingstrings {"MIB.IETF|RFC????-MIB.dot1qFdbId"} ]
    uint32 FID;
};

// ===================================================================
//     SpanningTreeService
// ===================================================================
        [Version ("2.6.0"), Description (
         "This service class represents the capability of a switch "
         "to participate in the distributed construction of a "
         "spanning tree.") ] 
class CIM_SpanningTreeService : CIM_Service {
        [Description (
         "The version of the spanning tree protocol "
         "used by the switch."),
         ValueMap {"1", "2", "3"},
         Values {"Unknown", "DEC LB100", "IEEE 802d"},
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dStpProtocolSpecification"} ]
    uint16 ProtocolSpec;
        [Description (
         "The format of the priority bits are the first two octets "
         "of the 8-octet long Bridge ID. The other (last) 6 octets of "
         "the Bridge ID are given by the value of the Bridge Address. "
         "\n\n"
         "A priority that can be assigned to the switch for use in "
         "constructing the spanning tree. The unique identifier for "
         "a switch is constructed by concatenating the MAC address "
         "associated with the switch for spanning tree operations "
         "to the two-byte priority. Choice of the priority value "
         "influences election of the root bridge."),
         Mappingstrings {"MIB.IETF|RFC1493- MIB.dot1dStpPriority"} ]
    uint16 Priority;
        [MaxLen(16), Description (
         "The Bridge ID (Priority + MAC Address) of the root bridge."
         "\n\n"
         "The format of the priority bits are the first two octets of "
         "the 8-octet long Bridge ID. The other (last) 6 octets of the "
         "Bridge ID are given by the value of the Bridge Address. "
         "Note that the MAC address is formatted as twelve "
         "hexadecimal digits (e.g., \"010203040506\"), with each "
         "pair representing one of the six octets of the MAC address "
         "in \"canonical\" bit order according to RFC 2469."),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dStpDesignatedRoot"} ]
    string DesignatedRoot;
        [Description (
         "The cost of the path from the switch to the root."),
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStpRootCost"} ]
    uint16 RootCost;
        [Description (
         "The port number of the port having the lowest cost path "
         "to the root bridge."),
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStpRootPort"} ]
    uint16 RootPort;
        [Description (
         "The current value for the maximum age of Spanning Tree "
         "information before discard, as learned from the network."),
         Units ("Hundredths of Seconds"),
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStpMaxAge"} ]
    uint32 MaxAge;
        [Description (
         "The current value of the interval between transmission "
         "of bridge PDUs by the switch on any port for which it is "
         "the spanning tree root or trying to become so, as learned "
         "from the network."),
         Units ("Hundredths of Seconds"),
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStpHelloTime"} ]
    uint32 HelloTime;
        [Description (
         "The minimum interval between transmission of bridge PDUs "
         "through a given port, as learned from the network."),
         Units ("Hundredths of Seconds"),
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStpHoldTime"} ]
    uint32 HoldTime;
        [Description (
         "The time spent by a port in the listening state before "
         "transitioning to the learning state and in the learning "
         "state before transitioning to the forwarding state, as "
         "learned from the network. This value is also used during "
         "the period of a topology change as the maximum age of "
         "Spanning Tree information before discard."),
         Units ("Hundredths of Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dStpForwardDelay"} ]
    uint32 ForwardDelay;
        [Description (
         "The MaxAge parameter to be used by all switches in the "
         "network if this switch becomes the root."),
         Units ("Hundredths of Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dStpBridgeMaxAge"} ]
    uint32 BridgeMaxAge;
        [Description (
         "The HelloTime parameter to be used by all switches in the "
         "network if this switch becomes the root."),
         Units ("Hundredths of Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dStpBridgeHelloTime"} ]
    uint32 BridgeHelloTime;
        [Description (
         "The ForwardDelay parameter to be used by all switches in "
           "the network if this switch becomes the root."),
         Units ("Hundredths of Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dStpBridgeForwardDelay"} ]
    uint32 BridgeForwardDelay;
        [Description (
         "MAC address used by the spanning tree service when it "
         "must be uniquely identified. When concatenated with a "
         "SpanningTreeService Priority, a unique bridge identifier "
         "results. This property is defined for use of switches "
         "supporting multiple spanning tree services. "
         "\n\n"
         "Note that the MAC address is formatted as twelve "
         "hexadecimal digits (e.g., \"010203040506\"), with each "
         "pair representing one of the six octets of the MAC address "
         "in \"canonical\" bit order according to RFC 2469.") ]
    string SpanningTreeBridgeAddress;
};

// ===================================================================
//     SwitchPortSpanningTree
// ===================================================================
        [Association,
         Version ("2.6.0"), Description (
         "A switch participating in the spanning tree maintains "
         "spanning-tree specific information about each port "
         "whose forwarding is determined by the spanning tree. "
         "This association represents that information.") ] 
class CIM_SwitchPortSpanningTree : CIM_ServiceSAPDependency {
        [Override ("Antecedent"), 
         Description ("The switch port.") ]
    CIM_SwitchPort REF Antecedent;
        [Override ("Dependent"),
         Description ("The spanning tree service.") ]
    CIM_SpanningTreeService REF Dependent;
        [Description (
         "The priority assigned to the port. Contained in "
         "the first octet of the two-octet port ID; the other "
         "octet is the port number."),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dStpPortPriority"} ]
    uint8 Priority;
        [Description (
         "The current state of the port as determined by the "
         "spanning tree protocol."),
         ValueMap {"1", "2", "3", "4", "5", "6"},
         Values {"Disabled", "Blocking", "Listening", "Learning",
          "Forwarding", "Broken"},
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStpPortState"} ]
    uint16 State;
        [Description (
         "The enabled/disabled status of the port."),
         ValueMap {"1", "2"},
         Values {"Enabled", "Disabled"},
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dStpPortEnable"} ]
    uint16 Enable;
        [Description (
         "The contribution of this port to the path cost of "
         "paths towards the spanning tree root which include "
         "this port."),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dStpPortPathCost"} ]
    uint16 PathCost;
        [Description (
         "The bridge identifier of the root bridge for the segment "
         "to which the port is attached, as transmitted by the "
         "designated bridge for the segment."),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dStpPortDesignatedRoot"} ]
    string DesignatedRoot;
        [Description (
         "The cost of the path to the root offered by the "
         "designated bridge for the segment."),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dStpPortDesignatedCost"} ]
    uint16 DesignatedCost;
        [Description (
         "The bridge identifier of the designated bridge for the "
         "segment to which the port is attached."),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dStpPortDesignatedBridge"} ]
    string DesignatedBridge;
        [Description (
         "The port identifier of the port on the designated bridge "
         "serving the segment to which the port is attached."),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dStpPortDesignatedPort"} ]
    uint16 DesignatedPort;
};

// ===================================================================
//     DynamicForwardingEntry
// ===================================================================
        [Version ("2.6.0"), Description (
         "A DynamicForwardingEntry represents an entry in the "
         "forwarding (filtering) database associated with the "
         "transparent bridging service.") ]  
class CIM_DynamicForwardingEntry : CIM_LogicalElement {
        [Propagated("CIM_System.CreationClassName"), 
         Key, MaxLen (256),
         Description ("The scoping System's CreationClassName.") ]
    string SystemCreationClassName;
        [Propagated("CIM_System.Name"),
         Key, MaxLen (256),
         Description ("The scoping System's Name.") ]
    string SystemName;
        [Propagated("CIM_Service.CreationClassName"), 
         Key, MaxLen (256),
         Description ("The scoping Service's CreationClassName.") ]
    string ServiceCreationClassName;
        [Propagated("CIM_Service.Name"),
         Key, MaxLen (256),
         Description ("The scoping Service's Name.") ]
    string ServiceName;
        [Key, MaxLen (256),
         Description (
         "CreationClassName indicates the name of the class or the "
         "subclass used in the creation of an instance. When used "
         "with the other key properties of this class, this property "
         "allows all instances of this class and its subclasses to "
         "be uniquely identified.") ]
    string CreationClassName;
        [Key, MaxLen (6), Description (
         "Unicast MAC address for which the transparent bridging "
         "service has forwarding and/or filtering information. "
         "\n\n"
         "Note that the MAC address is formatted as twelve "
         "hexadecimal digits (e.g., \"010203040506\"), with each "
         "pair representing one of the six octets of the MAC address "
         "in \"canonical\" bit order according to RFC 2469."),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dTpFdbAddress"} ] 
    string MACAddress;
        [Description (
         "The status of the entry."),
         ValueMap {"1", "2", "3", "4", "5"},
         Values {"Other", "Invalid", "Learned", "Self", "Mgmt"},
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dTpFdbStatus"} ]
    uint16 DynamicStatus;
};

// ==================================================================
//    TransparentBridgingDynamicForwarding
// ==================================================================
        [Association,
         Version ("2.6.0"), Description (
         "This association links an instance of the transparent "
         "bridging service to the entries of its forwarding database. "
         "The forwarding database is weak to the service.") ]  
class CIM_TransparentBridgingDynamicForwarding : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1),
         Description ("The transparent bridging service.") ]
    CIM_TransparentBridgingService REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "Dynamic Forwarding Entry of forwarding database.") ] 
    CIM_DynamicForwardingEntry REF Dependent;
};

// ==================================================================
//    SwitchPortDynamicForwarding
// ==================================================================
        [Association,
         Version ("2.6.0"), Description (
         "This association links a dynamic forwarding entry "
         "and the switch port to which the entry applies.") ] 
class CIM_SwitchPortDynamicForwarding : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1),
         Description ("The switch port.") ]
    CIM_SwitchPort REF Antecedent;
        [Override ("Dependent"), Description (
         "Dynamic Forwarding Entry of forwarding database.") ] 
    CIM_DynamicForwardingEntry REF Dependent;
};

// ===================================================================
//     StaticForwardingEntry
// ===================================================================
        [Version ("2.6.0"), Description (
         "A StaticForwardingEntry represents an entry in the "
         "static (destination-address filtering) database associated "
         "with the switch service.") ]
class CIM_StaticForwardingEntry : CIM_LogicalElement {
        [Propagated("CIM_System.CreationClassName"), 
         Key, MaxLen (256),
         Description ("The scoping System's CreationClassName.") ]
    string SystemCreationClassName;
        [Propagated("CIM_System.Name"),
         Key, MaxLen (256),
         Description ("The scoping System's Name.") ]
    string SystemName;
        [Propagated("CIM_Service.CreationClassName"), 
         Key, MaxLen (256),
         Description ("The scoping Service's CreationClassName.") ]
    string ServiceCreationClassName;
        [Propagated("CIM_Service.Name"),
         Key, MaxLen (256),
         Description ("The scoping Service's Name.") ]
    string ServiceName;
        [Key, MaxLen (256),
         Description (
           "CreationClassName indicates the name of the class or the "
           "subclass used in the creation of an instance. When used "
           "with the other key properties of this class, this property "
           "allows all instances of this class and its subclasses to "
           "be uniquely identified.") ]
    string CreationClassName;
        [Key, MaxLen (6), Description (
         "Destination MAC address (unicast, multicast or broadcast) "
         "to which the filtering information applies. "
         "\n\n"
         "Note that the MAC address is formatted as twelve "
         "hexadecimal digits (e.g., \"010203040506\"), with each "
         "pair representing one of the six octets of the MAC address "
         "in \"canonical\" bit order according to RFC 2469."),
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStaticAddress"} ] 
    string MACAddress;
        [Description (
         "The status of the entry."),
         ValueMap {"1", "2", "3", "4", "5"},
         Values {"Other", "Invalid", "Permanent", "DeleteOnReset",
          "DeleteOnTimeout"},
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStaticStatus"} ]
    uint16 StaticStatus;
        [Description (
         "The ports to which frames with the destination MAC "
         "address arriving on the port represented by the "
         "SwitchPortStaticForwarding association are allowed "
         "to be forwarded.") ]
    uint16 AllowedToGo[];
};

// ==================================================================
//    TransparentBridgingStaticForwarding
// ==================================================================
        [Association,
         Version ("2.6.0"), Description (
         "This association links an instance of the transparent "
         "bridging service to the entries of its static "
         "(destination-address filtering) database.") ] 
class CIM_TransparentBridgingStaticForwarding : CIM_Dependency {
        [Override ("Antecedent"), Min (1), Max (1),
         Description ("The transparent bridging service.") ]
    CIM_TransparentBridgingService REF Antecedent;
        [Override ("Dependent"), Weak, Description (
         "Static Forwarding Entry of forwarding database.") ] 
    CIM_StaticForwardingEntry REF Dependent;
};

// ==================================================================
//    SwitchPortStaticForwarding
// ==================================================================
        [Association,
         Version ("2.6.0"), Description (
         "This association links a static database entry "
         "and the switch port to which the entry applies.") ]  
class CIM_SwitchPortStaticForwarding : CIM_Dependency {
        [Override ("Antecedent"), Min (1),
         Description ("The switch port.") ]
    CIM_SwitchPort REF Antecedent;
        [Override ("Dependent"), Description (
         "Static Forwarding Entry of static database.") ] 
    CIM_StaticForwardingEntry REF Dependent;
};

// ==================================================================
//    SwitchServiceTransparentBridging
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "An association linking SwitchService to a component "
         "TransparentBridgingService. The cardinality of the "
         "TransparentBridgingService is 0..1 for a VLAN-unaware "
         "switch.") ] 
class CIM_SwitchServiceTransparentBridging : CIM_ServiceComponent {
        [Override ("GroupComponent"), Aggregate, Min (1),
         Description ("The parent service.") ]
    CIM_SwitchService REF GroupComponent;
        [Override ("PartComponent"),
         Description ("The component service.") ] 
    CIM_TransparentBridgingService REF PartComponent;
};

// ==================================================================
//    SwitchServiceSpanningTree
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "An association linking SwitchService to a component "
         "SpanningTreeService. The cardinality of the "
         "SpanningTreeService is 0..1 for a VLAN-unaware "
         "switch.") ] 
class CIM_SwitchServiceSpanningTree : CIM_ServiceComponent {
        [Override ("GroupComponent"), Aggregate, Min (1),
         Description ("The parent service.") ]
    CIM_SwitchService REF GroupComponent;
        [Override ("PartComponent"),
         Description ("The component service.") ] 
    CIM_SpanningTreeService REF PartComponent;
};

// ===================================================================
//     SourceRoutingService
// ===================================================================
      [Version ("2.7.0"), Description (
       "SourceRoutingService represents the capability of a switch "
       "to participate in the source routing of frames received "
       "at its ports. It is a system-level Service that provides "
       "and supports local switching only. SourceRouting"
       "Service is aggregated into a higher level Forwarding or "
       "other switch Service through the SwitchServiceSource"
       "Routing association.") ]
class CIM_SourceRoutingService : CIM_Service {
        
        [Description (
         "Indicates whether the bridge operates using older "
         "3 bit length negotiation fields or the newer 6 bit "
         "length field in its RIF."),
         ValueMap {"1", "2"},
         Values {"Mode3", "Mode6"},
         Mappingstrings {"MIB.IETF|RFC1525-MIB.dot1dSrBridgeLfMode"} ] 
    uint16 BridgeLfMode;
};

// ==================================================================
//    SwitchServiceSourceRouting
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "An association linking SwitchService to a component "
         "SourceRoutingService. The cardinality of the "
         "SourceRoutingService is 0..1 for a VLAN-unaware "
         "switch.") ] 
class CIM_SwitchServiceSourceRouting : CIM_ServiceComponent {
        [Override ("GroupComponent"), Aggregate, Min (1),
         Description ("The parent service.") ]
    CIM_SwitchService REF GroupComponent;
        [Override ("PartComponent"),
         Description ("The component service.") ] 
    CIM_SourceRoutingService REF PartComponent;
};

// ==================================================================
//    SwitchPortPair
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association represents information regarding port "
         "pairings that is used by the SourceRoutingService of a "
         "switch.") ]
class CIM_SwitchPortPair : CIM_SAPSAPDependency {
        [Override ("Antecedent"), Min (1), Description (
         "The lower numbered port.") ]
    CIM_SwitchPort REF Antecedent;
        [Override ("Dependent"), Min (1), Description (
         "The higher numbered port.") ]
    CIM_SwitchPort REF Dependent;
        [Description (
         "A bridge number that uniquely identifies the path "
         "provided by this source routing bridge between the "
         "segments connected to high and low ports. The purpose "
         "of bridge number is to disambiguate between multiple paths "
         "connecting the same two LANs."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dPortPairBridgeNum"} ]
    uint16 BridgeNum;
        [Description (
         "The state of dot1dPortPairBridgeNum. Writing "
         "'invalid(3)' to this property removes the "
         "association instance."),
         ValueMap {"1", "2", "3"},
         Values {"Enabled", "Disabled", "Invalid"},
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dPortPairBridgeState"} ]
    uint16 BridgeState;
};

// ===================================================================
//     SwitchPortSourceRouting
// ===================================================================
        [Association, Version ("2.6.0"), Description (
         "A switch capable of source routing maintains "
         "source-routing specific information about each port. "
         "This association represents that information.") ] 
class CIM_SwitchPortSourceRouting : CIM_ServiceSAPDependency {
        [Override ("Antecedent"), Description ("The switch port.") ]
    CIM_SwitchPort REF Antecedent;
        [Override ("Dependent"), Max (1),
         Description ("The source routing service.") ]
    CIM_SourceRoutingService REF Dependent;
        [Description (
         "The maximum number of routing descriptors allowed "
         "in an All Paths or Spanning Tree Explorer frames."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortHopCount"} ]
    uint16 HopCount;
        [Description (
         "The segment number that uniquely identifies the "
         "segment to which this port is connected. Current "
         "source routing protocols limit this value to the "
         "range: 0 through 4095. (The value 0 is used by "
         "some management applications for special test "
         "cases.) A value of 65535 signifies that no segment "
         "number is assigned to this port."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortLocalSegment"} ]
    uint16 LocalSegment;
        [Description (
         "A bridge number uniquely identifies a bridge when "
         "more than one bridge is used to span the same two "
         "segments.  Current source routing protocols limit "
         "this value to the range: 0 through 15. A value of "
         "65535 signifies that no bridge number is assigned "
         "to this bridge."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortBridgeNum"} ]
    uint16 BridgeNum;
        [Description (
         "The segment number that corresponds to the target "
         "segment this port is considered to be connected to "
         "by the switch.  Current source routing protocols "
         "limit this value to the range: 0 through 4095. "
         "(The value 0 is used by some management "
         "applications for special test cases.) A value of "
         "65535 signifies that no target segment is assigned "
         "to this port."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortTargetSegment"} ]
    uint16 TargetSegment;
        [Description (
         "Determines how the port behaves when presented "
         "with a Spanning Tree Explorer frame.  The value "
         "'disabled(2)' indicates that the port will not "
         "accept or send Spanning Tree Explorer packets; any "
         "STE packets received will be silently discarded. "
         "The value 'forced(3)' indicates the port will "
         "always accept and propagate Spanning Tree Explorer "
         "frames. This allows a manually configured "
         "Spanning Tree for this class of packet to be "
         "configured. Note that unlike transparent "
         "bridging, this is not catastrophic to the network "
         "if there are loops. The value 'auto-span(1)' can "
         "only be returned by a bridge that both implements "
         "the Spanning Tree Protocol and has use of the "
         "protocol enabled on this port. The behavior of the "
         "port for Spanning Tree Explorer frames is "
         "determined by the value of the State property of "
         "the SwitchPortSpanningTree association for the port. "
         "If the port is in the 'forwarding' state, the frame "
         "will be accepted or propagated.  Otherwise, it "
         "will be silently discarded."),
         ValueMap {"1", "2", "3"},
         Values {"Auto-Span", "Disabled", "Forced"},
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortSTESpanMod"} ]
    uint16 STESpanMode;
};

// ==================================================================
//     VLAN
// ==================================================================
        [Version ("2.6.0"), Description (
         "An instance of VLAN represents a VLAN within a switch. "
         "In a particular switch, there should be an instance of VLAN "
         "for every VLAN available in the switch. For example, in a "
         "switch with port-based VLANs, if there are 16 VLANs to which "
         "ports can be assigned (VLAN 1 through VLAN 16), there should "
         "be an instance of CIM_VLAN for each of VLAN 1 through "
         "VLAN 16."
         "\n\n"
         "VLAN inherits Name from ServiceAccessPoint. Use this for "
         "the textual name of the VLAN, if there is one. Otherwise, "
         "synthesize a textual name, e.g., VLAN 0003. (Consider "
         "leading zero fill, as shown, to ensure that if the textual "
         "VLAN names are extracted and presented by a management "
         "applictions, the VLAN names will sort in the expected order. "
         "It's irritating to see a list sorted "
         "'VLAN 1, VLAN 10, VLAN 11, VLAN 2, VLAN 3...', "
         "when it could have been "
         "'VLAN 0001, VLAN 0002, ..., VLAN 0010, VLAN 0011, ....'.) "
         "The numeric part of the name should be at least four "
         "digits wide since 802.1Q specifies 4095 VLANs."
         "\n\n"
         "It is intended that VLAN be subclassed only if necessary "
         "to add attributes. The type of the VLAN can be inferred from "
         "the VLANService(s) with which the VLAN is associated "
         "in the VLANFor association."
         "\n\n"
         "An instance of VLAN may be associated with more than one "
         "VLANService. For example, there are switches that "
         "support both 802.1Q VLANs and the vendor's proprietary "
         "VLANs. In some such switches if a broadcast packet received "
         "on a port in 802.1Q VLAN 5 will be transmitted from a port "
         "in proprietary VLAN 5. In effect, there is only one VLAN 5, "
         "and the type of port only determines the packet format for "
         "tagged packets. In the case just described, only one "
         "instance of CIM_VLAN should be instantiated for VLAN 5, and "
         "it should be associated both with the 802.1Q VLANService "
         "and the proprietary VLANService. "
         "\n\n"
         "In typical VLAN-aware switches, packets can be assigned to "
         "a VLAN based on the port on which they are received " 
         "(port-based VLANS), based on the source MAC address " 
         "(MAC-based VLANs), or based on the value of a set of bits in "
         "the packet (protocol-based VLANs). If it is desirable to "
         "represent the VLAN assignment predicate for some MAC-based "
         "VLAN switch, it will be necessary to subclass VLAN. The list "
         "of MAC addresses associated with a VLAN would be an "
         "attribute of the subclass. If it is desirable to represent"
         "the VLAN assignment predicate in a protocol-based VLAN "
         "switch, it will be necessary to subclass VLAN, "
         "InboundVLAN, or both. If the predicate applies to all ports "
         "in the switch, then only VLAN need be subclassed. If the "
         "predicate may vary based on the port, then InboundVLAN must "
         "be subclassed, and CIM_VLAN might have to be subclassed "
         "as well.") ]
class CIM_VLAN : CIM_ServiceAccessPoint {
        [Description ("VLAN identifying number.") ]
    uint32 VLANNumber;
};

// ==================================================================
//     RelatedTransparentBridgingService
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "The association between a VLAN and the forwarding database "
         "(some use the term filtering database) used to determine "
         "which port a packet should be transmitted on, given that it "
         "is assigned to the VLAN and that it has a particular "
         "destination MAC address. The TransparentBridgingService "
         "represents a forwarding database.") ]
class CIM_RelatedTransparentBridgingService : 
 CIM_ServiceSAPDependency {
        [Override ("Antecedent") ]
    CIM_VLAN  REF Antecedent;
        [Override ("Dependent"), Min (1), Max (1) ]
    CIM_TransparentBridgingService REF Dependent;
};

// ==================================================================
//     CIM_RelatedSpanningTree
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association identifies the spanning tree in which "
         "a forwarding database (TransparentBridgingService) is "
         "nested.") ]
class CIM_RelatedSpanningTree : CIM_ServiceServiceDependency {
        [Override ("Antecedent") ]
    CIM_TransparentBridgingService REF Antecedent;
        [Override ("Dependent"), Max (1) ]
    CIM_SpanningTreeService REF Dependent;
};

// ==================================================================
//     InboundVLAN
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association makes explicit the operational "
         "dependencies of a SwitchPort when operating in a VLAN."
         "\n\n"
         "If there is an association between a particular "
         "SwitchPort and a particular VLAN, then there is the "
         "possibility that a packet received by the port will be "
         "assigned to the VLAN (or if the packet already has a VLAN "
         "tag, that the packet will not be dropped). If there is no "
         "such association, then there is no possibility that a "
         "packet received by the port will progress through the "
         "switch having been assigned to the VLAN in question.") ]
class CIM_InboundVLAN : CIM_SAPSAPDependency {
        [Override ("Antecedent") ]
    CIM_VLAN REF Antecedent;
        [Override ("Dependent") ]
    CIM_SwitchPort REF Dependent;
        [Description (
         "If true, packets already tagged with this VLAN number will "
         "be accepted when arriving at this port. For example, if "
         "there is an InboundVLAN association between port 12 and "
         "VLAN 7 for which Tagged is true, then if a packet tagged "
         "with VLAN 7 arrives at port 12, the packet will be "
         "accepted into the switch for further processing. If there "
         "is no such association, then the packet will be dropped."
         "\n\n"
         "If false, it means that any untagged packets arriving at "
         "this port MIGHT be classified into the associated VLAN. "
         "If, for a particular SwitchPort, there is only one instance "
         "of the association for which Tagged is false, then all "
         "incoming untagged packets will be classified into that VLAN. "
         "This is the typical configuration of a non-trunk port in a "
         "switch implementing port-based VLANs. If there is more than "
         "one such association instance, then the packet MIGHT be "
         "classified into any one of them, based on some criterion "
         "other than the identity of the switch port. For example, "
         "in a MAC-based VLAN switch, the decision would be based on "
         "the source MAC address. In a protocol-based VLAN switch, "
         "the decision would be based on the values of some set of "
         "bits in the packet. "
         "\n\n"
         "Note that the MAC address is formatted as twelve "
         "hexadecimal digits (e.g., \"010203040506\"), with each "
         "pair representing one of the six octets of the MAC address "
         "in \"canonical\" bit order according to RFC 2469.") ]
    boolean Tagged;
        [Description (
         "Default should be true if untagged packets received by the "
         "SwitchPort are assigned to the VLAN by default. For "
         "802.1Q-compliant ports, the Default property should be "
         "true on the association instance connecting a SwitchPort to "
         "the CIM_VLAN corresponding to the port's PVID. Default "
         "should never be true if Tagged is true -- it applies only "
         "to untagged packets.") ]
    boolean Default;
};

// ==================================================================
//     OutboundVLAN
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "This association makes explicit the operational "
         "dependencies of a SwitchPort when operating in a VLAN. "
         "\n\n"
         "If there is no instance of OutboundVLAN between a given "
         "SwitchPort and CIM_VLAN, then any packet that has been "
         "assigned to the VLAN and whose destination address is "
         "associated with the port will be dropped by the switch "
         "without being transmitted. Otherwise, the packet will be "
         "transmitted.") ]
class CIM_OutboundVLAN : CIM_SAPSAPDependency {
        [Override ("Antecedent") ]
    CIM_VLAN REF Antecedent;
        [Override ("Dependent") ]
    CIM_SwitchPort REF Dependent;
        [Description (
         "If Tagged is true, then the packet will be transmitted in "
         "encapsulated form, tagged with the associated VLAN tag. If "
         "Tagged is false, the packet will be trasmitted without any "
         "VLAN tag.") ]
    boolean Tagged;
};

// ==================================================================
//     VLANService
// ==================================================================
        [Abstract, Version ("2.6.0"), Description (
         "VLANService represents the VLAN aspects of the function "
         "performed by a switch. Some VLAN-aware devices participate "
         "in protocols where VLAN information is propagated among "
         "switches, e.g., GVRP in 802.1Q switches and VTP in Cisco "
         "Catalyst switches. VLANService also represents the function "
         "performed by the switch as a participant in such a protocol."
         "\n\n"
         "VLANService must be subclassed so that instances can be "
         "distinguished by their class. If there is a name assigned to "
         "a set of VLAN-aware switches, e.g., the VTP domain name in "
         "Cisco Catalyst switches, use the Name attribute inherited "
         "from CIM_Service to store the name."
         "\n\n"
         "A VLANService should be instantiated in a VLAN-aware switch "
         "even if there is no GVRP-like protocol.") ] 
class CIM_VLANService : CIM_Service {
};

// ==================================================================
//     802dot1QVLANService
// ==================================================================
        [Version ("2.6.0"), Description (
         "If a switch supports 802.1Q, an instance of this class "
         "should be instantiated in the switch. If the switch "
         "supports GVRP, this class represents the function that "
         "the switch performs with respect to GVRP.") ]
class CIM_802dot1QVLANService : CIM_VLANService {
};

// ==================================================================
//     SwitchServiceVLAN
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "An association linking SwitchService to a component "
         "VLANService.") ] 
class CIM_SwitchServiceVLAN : CIM_ServiceComponent {
        [Override ("GroupComponent"), Aggregate, Min (1), Max (1) ]
    CIM_SwitchService REF GroupComponent;
        [Override ("PartComponent") ]
    CIM_VLANService REF PartComponent;
};

// ==================================================================
//     VLANFor
// ==================================================================
        [Association, Version ("2.6.0"), Description(
         "The VLAN Port used by the VLAN Service.") ]
class CIM_VLANFor : CIM_ServiceSAPDependency {
        [Override ("Antecedent") ]
    CIM_VLAN REF Antecedent;
        [Override ("Dependent"), Min (1) ]
    CIM_VLANService REF Dependent;
};

// ===================================================================
//     TransparentBridgingStatistics
// ===================================================================
        [Version ("2.6.0"), Description(
         "Statistical information regarding the Transparent Bridging "
         "Service.") ] 
class CIM_TransparentBridgingStatistics : 
  CIM_ServiceStatisticalInformation {
        [Counter, Description (
         "The total number of Forwarding Database entries, "
         "which have been or would have been learnt, but "
         "have been discarded due to a lack of space to "
         "store them in the Forwarding Database."),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dTpLearnedEntryDiscards"} ] 
    uint32 LearnedEntryDiscards;
};

// ===================================================================
//     SpanningTreeStatistics
// ===================================================================
        [Version ("2.6.0"), Description(
         "Statistical information regarding the Spanning Tree "
         "Service.") ]
class CIM_SpanningTreeStatistics : CIM_ServiceStatisticalInformation {
        [Description(
         "The time since the last topology change was "
         "detected by the switch."),
         Units ("Hundredths of Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dStpTimeSinceTopologyChange"} ]
    uint32 TimeSinceTopologyChange;
        [Counter, Description (
         "The total number of topology changes detected by "
         "the switch since the counter was last reset or "
         "initialized."),
         Mappingstrings {"MIB.IETF|RFC1493-MIB.dot1dStpTopChanges"} ] 
    uint32 TopChanges;
};

// ===================================================================
//     SwitchPortStatistics
// ===================================================================
        [Version ("2.6.0"), Description (
         "Statistical information regarding a generic switch port, "
         "independent of the specific kind of switching done on "
         "frames arriving at the port.") ] 
class CIM_SwitchPortStatistics : CIM_SAPStatisticalInformation {
        [Counter, Description (
         "The number of frames discarded by this port due "
         "to excessive transit delay through the bridge."),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dBasePortDelayExceededDiscards"} ] 
    uint32 DelayExceededDiscards;
        [Counter, Description (
         "The number of frames discarded by this port due "
         "to an excessive size."),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dBasePortMtuExceededDiscards"} ]
    uint32 MtuExceededDiscards;
};

// ===================================================================
//     SwitchPortTransparentBridgingStatistics
// ===================================================================
        [Version ("2.6.0"), Description (
         "Statistical information regarding a switch port, "
         "at which transparent bridging is performed.") ]
class CIM_SwitchPortTransparentBridgingStatistics : 
  CIM_SAPStatisticalInformation {
        [Counter, Description (
         "The number of frames that have been received by "
         "the port from its segment. Note that a frame "
         "is only counted if and only if it is for a "
         "protocol being processed by the local bridging "
         "function, including bridge management frames."),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dTpPortInFrames"} ] 
    uint32 InFrames;
        [Counter, Description (
         "The number of frames that have been transmitted by "
         "the port to its segment. Note that a frame "
         "is only counted if and only if it is for a "
         "protocol being processed by the local bridging "
         "function, including bridge management frames."),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dTpPortOutFrames"} ]
    uint32 OutFrames;
        [Counter, Description (
         "Count of valid frames received which were "
         "discarded (i.e., filtered) by the Forwarding Process."),
         Mappingstrings {
          "MIB.IETF|RFC1493-MIB.dot1dTpPortInDiscards"} ]
    uint32 InDiscards;
};

// ===================================================================
//     SwitchPortSpanningTreeStatistics
// ===================================================================
        [Version ("2.6.0"), Description (
         "Statistical information regarding a switch port "
         "participating in the spanning tree.") ] 
class CIM_SwitchPortSpanningTreeStatistics : 
  CIM_SAPStatisticalInformation {
        [Counter, Description (
         "The number of times the port has transitioned "
         "from the Learning state to the Forwarding state."),
         Mappingstrings {
          "MIB.IETF|RFC1493- MIB.dot1dStpPortForwardTransitions"} ] 
    uint32 ForwardTransitions;
};

// ===================================================================
//     SwitchPortSourceRoutingStatistics
// ===================================================================
        [Version ("2.6.0"), Description (
         "Statistical information regarding a switch port "
         "supporting source routing.") ] 
class CIM_SwitchPortSourceRoutingStatistics : 
  CIM_SAPStatisticalInformation {
        [Counter, Description (
         "The number of Specifically Routed frames, also "
         "referred to as Source Routed Frames, that have "
         "been received from the segment attached to the port."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortSpecInFrames"} ]
    uint32 SpecInFrames;
        [Counter, Description (
         "The number of Specifically Routed frames, also "
         "referred to as Source Routed Frames, that the "
         "port has transmitted on its segment."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortSpecOutFrames"} ]
    uint32 SpecOutFrames;
        [Counter, Description (
         "The number of All Paths Explorer frames, also "
         "referred to as All Routes Explorer frames, that "
         "have been received by the port from its segment."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortApeInFrames"} ]
    uint32 ApeInFrames;
        [Counter, Description (
         "The number of all Paths Explorer Frames, also "
         "referred to as All Routes Explorer frames, that "
         "have been transmitted by the port on its segment."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortApeOutFrames"} ]
    uint32 ApeOutFrames;
        [Counter, Description (
         "The number of spanning tree explorer frames that "
         "have been received by the port from its segment."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortSteInFrames"} ]
    uint32 SteInFrames;
        [Counter, Description (
         "The number of spanning tree explorer frames that "
         "have been transmitted by the port on its segment."),
         Mappingstrings {
          "MIB.IETF|RFC1525-MIB.dot1dSrPortSteOutFrames"} ]
    uint32 SteOutFrames;
        [Counter, Description (
         "The number of explorer frames that have been "
         "discarded by the port because the routing "
         "descriptor field contained an invalid adjacent "
         "segment value."),
         Mappingstrings {
          "MIB.IETF|RFC1525- MIB.dot1dSrPortSegmentMismatchDiscards"} ]
    uint32 SegmentMismatchDiscards;
        [Counter, Description (
         "The number of frames that have been discarded by "
         "the port because the routing descriptor field "
         "contained a duplicate segment identifier."),
         Mappingstrings {
          "MIB.IETF|RFC1525- MIB.dot1dSrPortDuplicateSegmentDiscards"} ]
    uint32 DuplicateSegmentDiscards;
        [Counter, Description (
         "The number of explorer frames that have been "
         "discarded by the port because the Routing "
         "Information Field has exceeded the maximum route "
         "descriptor length."),
         Mappingstrings {
          "MIB.IETF|RFC1525- MIB.dot1dSrPortHopCountExceedsDiscards"} ]
    uint32 HopCountExceedsDiscards;
        [Counter, Description (
         "The number of duplicate LAN IDs or Tree errors. "
         "This helps in detection of problems in networks "
         "containing older IBM Source Routing Bridges."),
         Mappingstrings {
          "MIB.IETF|RFC1525- MIB.dot1dSrPortDupLanIdOrTreeErrors"} ]
    uint32 DupLanIdOrTreeErrors;
        [Counter, Description (
         "The number of ARE and STE frames that were "
         "discarded because the last LAN ID in the routing "
         "information field did not equal the LAN-in ID. "
         "This error can occur in implementations which do "
         "only a LAN-in ID and Bridge Number check instead "
         "of a LAN-in ID, Bridge Number, and LAN-out ID "
         "check before they forward broadcast frames."),
         Mappingstrings {
          "MIB.IETF|RFC1525- MIB.dot1dSrPortLanIdMismatches"} ]
    uint32 LanIdMismatches;
};

// ==================================================================
//     BGPStatistics
// ==================================================================
        [Version ("2.6.0"), Description (
         "This class contains statistical information for a "
         "Group sessions.") ]
class CIM_BGPStatistics : CIM_ServiceStatisticalInformation {
        [Counter, Description (
         "This is the number of BGP UPDATE messages received on this "
         "router's BGP connection. This is a 32-bit counter."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerInUpdates"} ]
    uint32 InUpdates; 
        [Counter, Description (
         "This is the number of BGP UPDATE messages transmitted on "
         "this router's BGP connection. This is a 32-bit counter."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerOutUpdates"} ]
    uint32 OutUpdates; 
        [Counter, Description (
         "This is the total number of BGP messages received on this "
         "router's BGP connection. This is a 32-bit counter."),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpPeerInTotalMessages"} ]
    uint32 InTotalMessages;
        [Counter, Description (
         "This is the total number of BGP messages transmitted on "
         "this router's BGP connection. This is a 32-bit counter."),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpPeerOutTotalMessages"} ]
    uint32 OutTotalMessages;
        [Description (
         "This contains the last error code and error subcode for "
         "this router's BGP connection. If no error has occurred, "
         "then each integer in the array is zero."),
         Mappingstrings {"MIB.IETF|RFC1657-MIB.bgpPeerLastError"} ]
    uint8 LastError [2]; 
        [Counter, Description (
         "This contains the total number of times that the BGP Finite "
         "State Machine has transitioned into the established state "
         "for this router's BGP connection. This is a 32-bit "
         "counter."),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpPeerFsmEstablishedTransitions"} ]
    uint32 FsmEstablishedTransitions;
        [Gauge, Description (
         "This indicates how long, in seconds, this peer has been in "
         "the established state, or how long since this peer was last "
         "in the established state. It is set to zero when a new peer "
         "is configured or when the router is booted. This has the "
         "semantics of a 32-bit gauge."),
         Units ("Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpPeerFsmEstablishedTime"} ]
    uint32 FsmEstablishedTime; 
        [Gauge, Description (
         "This defines the time in seconds since the last BGP UPDATE "
         "message was received from the peer. This has the semantics "
         "of a 32-bit gauge."),
         Units ("Seconds"),
         Mappingstrings {
          "MIB.IETF|RFC1657-MIB.bgpPeerInUpdateElapsedTime"} ]
    uint32 InUpdateElapsedTime;
};

// ==================================================================
//    BGPServiceStatistics
// ================================================================== 
        [Association, Version ("2.6.0"), Description ( 
         "This association defines statistics collected for a BGP " 
         "session.") ] 
class CIM_BGPServiceStatistics : CIM_ServiceStatistics { 
        [Override("Stats"), Max (1), Description (
         "The statistics object for the BGP session.") ] 
    CIM_BGPStatistics REF Stats;
        [Override("Element"), Min (1), Max (1), Description ( 
         "The BGPService for which statistics are being gathered.") ] 
    CIM_BGPService REF Element;
};

// ===================================================================
//     CIM_EndpointIdentity (CR308a) - this class stays here!
// ===================================================================
        [Association, Version ("2.6.0"), Description (
         "CIM_EndpointIdentity indicates that two ProtocolEndpoints "
         "represent different aspects of the same underlying address "
         "or protocol-specific ID. This association refines the "
         "CIM_LogicalIdentity superclass by restricting it to the "
         "Endpoint level and defining its use in well understood "
         "scenarios. One of these scenarios is to represent that an "
         "Endpoint has both 'LAN' and protocol-specific aspects. "
         "For example, an Endpoint could be both a LANEndpoint as "
         "well as a DHCPEndpoint.") ]
class CIM_EndpointIdentity : CIM_LogicalIdentity {
        [Override ("SystemElement"), Description (
         "SystemElement represents one aspect of the "
         "Endpoint.") ]
    CIM_ProtocolEndpoint ref SystemElement;
        [Override ("SameElement"), Description (
         "SameElement represents an alternate aspect of "
         "the Endpoint.") ]
    CIM_ProtocolEndpoint ref SameElement;
};

// ===================================================================
// Start of the QoS sub-model
// ===================================================================

// ===================================================================
//     CIM_QoSService
// ===================================================================
        [Version ("2.7.0"), Description (
         "This is a concrete class that represents the ability to "
         "conceptualize a QoS service as a set of coordinated "
         "sub-services. This enables the network administrator to map "
         "business rules to the network, and the network designer to "
         "engineer the network such that it can provide different "
         "functions for different traffic streams. "
         "\n\n"
         "This class has two main purposes. First, it serves as a "
         "common base class for defining various sub-services that "
         "are needed to build higher-level QoS services. Second, it "
         "serves as a way to consolidate relationships between "
         "different types of QoS services and different types of "
         "ConditioningServices."
         "\n\n"
	 "For example, Gold Service may be defined as a QoSService "
	 "which aggregates two other QoSServices together. Each of "
	 "these 'other' QoSServices could be DiffServServices - one "
	 "representing the servicing of very high demand packets "
	 "(instantiated as a DiffServService directly), and one "
	 "representing the service given to most of the packets "
	 "(instantiated as an AFService).  The high demand "
	 "DiffServService instance would use QoSConditioning"
	 "SubService to aggregate together the necessary classifiers "
	 "to indicate which traffic it applies to, the appropriate "
	 "meters for contract limits, the marker to mark the EF PHB "
	 "in the packets, and the queuing-related services. The "
	 "AFService instance would similarly use QoSConditioning"
	 "SubService to aggregate its classifiers, meters, the several "
	 "markers used to mark the different AF PHBs in the packets, "
	 "and the queuing-related services needed to deliver the packet "
	 "treatment.") ]
class CIM_QoSService : CIM_Service {
};

// ==================================================================
//    QoSSubService
// ==================================================================
        [Association, Aggregation, Composition, Version ("2.7.0"), 
         Description (
         "  The associations - QoSSubService and QoSConditioningSub"
         "Service - operate in conjunction. High level QoS "
         "definitions, such as 'John gets Gold Service', map to "
         "lower level, more concrete QoSServices (the subclasses "
         "of QoSService). This is described by the QoSSubService "
         "association. In turn, each of the SubServices may require "
         "their own conditioning. This is modeled using the "
         "QoSConditioningSubService aggregation. \n"
         "  Note that a more concrete QoSService may only be "
         "aggregated into one higher level Service, using this "
         "association. The cardinality on the GroupComponent "
         "reference is Max (1).") ]
class CIM_QoSSubService : CIM_ServiceComponent  {
        [Override ("GroupComponent"), Aggregate, Max (1), 
         Description (
         "The higher level QoSService that is constructed by "
         "aggregating one or more lower-level QoSServices.") ]
    CIM_QoSService REF GroupComponent;
        [Override ("PartComponent"), Description (
         "The more concrete QoSService that is used to provide "
         "the higher level Service.") ]
    CIM_QoSService REF PartComponent; 
};

// ===================================================================
//     PrecedenceService
// ===================================================================
        [Version ("2.7.0"), Deprecated {"CIM_QoSService"}, 
         Description (
         "This class represents a specialization of the general "
         "concept of forwarding network traffic by adding specific "
         "semantics that define how traffic is forwarded based on "
         "the value of the ToS byte of a packet. \n"
         "\n"
         "This class is used to enable DiffServ devices and non-"
         "DiffServ devices to exchange traffic. This is done by "
         "defining a sibling class, DiffServService, to represent "
         "devices that forward traffic based on the DiffServ code "
         "point. This enables the administrator to define mappings "
         "between devices that do not support DiffServ (and instead "
         "use IP Precedence) and those that do support DiffServ. \n"
         "\n"
         "PrecedenceService is deprecated since forwarding based on the "
         "value of the ToS byte is specified using a FilterList, which "
         "is associated with a ClassifierElement. If there is a need to "
         "distinguish a higher-level set of coordinated QoS services, "
         "the QoSService class can be instantiated directly.") ]
class CIM_PrecedenceService : CIM_QoSService {
        [Deprecated {"CIM_IPHeadersFilter.HdrDSCP"}, 
         Description (
         "This property is an 8-bit unsigned integer that defines the "
         "notion of precedence for different types of traffic.") ]
    uint8 PrecedenceValue;
};

// ===================================================================
//     DiffServService
// ===================================================================
        [Version ("2.7.0"), Description (
         "DiffServService represents the use of standard or custom "
         "DiffServ services (associated with particular Per Hop "
         "Behaviors, PHBs) to implement a (higher-level) QoSService. "
         "Note that the DiffServService may be just one of a set "
         "of coordinated QoSSubServices that together implement a "
         "higher-level QoSService. The relationship between the "
         "QoSServices is described using the association, "
         "QoSSubService.") ]
class CIM_DiffServService : CIM_QoSService {
        [Deprecated {"CIM_DiffServService.PHBID"}, Description (
         "This property is an unsigned 8-bit integer, and defines the "
         "Differentiated Services Code Point (DSCP) that this link "
         "uses to represent various types of differentiated "
         "services through device-specific configuration commands. It"
         "is deprecated since this information is conveyed via "
         "filter lists, associated with ClassifierElements. The "
         "DiffServService is better represented as a Per Hop "
         "Behavior.") ]
    uint8 DSCP;
        [Description (
         "A 16-bit unsigned integer which identifies a particular "
         "per hop behavior, or family of per hop behaviors. The "
         "value is a Per Hop Behavior Identification Code, as defined "
         "in [R3140]. Note that as defined, these identification codes "
         "use the default, recommended, code points for PHBs as part of "
         "their structure. These values may well be different from the "
         "actual value used in the marker, as the marked value is "
         "domain-dependent. The ability to indicate the PHB "
         "Identification Code associated with a DiffServService is "
         "helpful when tying the QoSService to reference documents, "
         "and for inter-domain coordination and operation.") ]
    uint16 PHBID;
};

// ===================================================================
//     8021PService
// ===================================================================
        [Version ("2.7.0"), Deprecated {"CIM_QoSService"}, 
         Description (
         "This class represents a specialization of the general "
         "concept of forwarding network traffic by adding specific "
         "semantics that define how traffic is forwarded based on "
         "the value of the Priority field in the 802.1P header. \n"
         "\n"
         "This class is used to enable DiffServ domains and domains "
         "that support 802.1P only to exchange traffic. It represents "
         "the mapping between implementations that only support "
         "802.1P priority marking to be mapped to implementations "
         "that support DiffServ, which use DSCPs. \n"
         "\n"
         "8021PService is deprecated since forwarding based on the "
         "value of the Priority field in the 802.1P header is "
         "specified using a FilterList, which is associated with "
         "a ClassifierElement. If there is a need to distinguish "
         "a higher-level set of coordinated QoS services, the "
         "QoSService class can be instantiated directly.") ]
class CIM_8021PService : CIM_QoSService {
        [Deprecated {"CIM_8021Filter.8021HdrPriorityValue"}, 
         Description (
         "This property is an 8-bit unsigned integer that defines the "
         "notion of priority as specified in 802.1P "
         "implementations.") ]
    uint8 PriorityValue;
};

// ===================================================================
//     AFService
// ===================================================================
        [Version ("2.7.0"), Description (
         "This class represents a specialization to the general "
         "concept of forwarding network traffic by adding specific "
         "semantics that characterize the operation of the Assured "
         "Forwarding (AF) Service (RFC2597). This RFC defines four "
         "different AF classes to represent four different treatments "
         "of traffic (e.g., a different amount of forwarding "
         "resources, such as buffer space and bandwidth, are "
         "allocated. Within each AF class, IP packets are marked with "
         "one of three possible drop precedence values. The drop "
         "precedence of a packet determines the relative "
         "importance of that packet compared to other packets within "
         "the same AF class if congestion occurs. A congested "
         "interface will try to avoid dropping packets with a lower "
         "drop precedence value by instead discarding packets with a "
         "higher drop precedence value."
         "\n\n"
	 "Note that [R2597] defines 12 DSCPs that together represent the AF "
	 "Per Hop Behavior (PHB) group.  Implementations are free to extend "
	 "this (e.g., add more classes and/or drop precedences). \n"
	 "\n"
	 "The AFService class is modeled as a specialization of "
	 "DiffServService, which is in turn a specialization of QoSService. "
	 "This enables it to be related to higher-level QoSServices, as "
	 "well as to lower-level conditioning sub-services (e.g., "
	 "classification, metering, dropping, queuing, and others).") ]
class CIM_AFService : CIM_DiffServService {
        [Description (
         "This property is an 8-bit unsigned integer that indicates "
         "the number of AF classes that this AF implementation uses. "
         "Among the instances aggregated into AFService (using "
         "QoSConditioningSubService), one SHOULD find markers with "
         "as many distinct values as is indicated by ClassNumber.") ]
    uint8 ClassNumber;
        [Description (
         "This property is an 8-bit unsigned integer that indicates "
         "the number of drop precedence values that this AF "
         "implementation uses. The number of drop precedence values "
         "is the number PER AF CLASS. The corresponding droppers are "
         "found in the collection of ConditioningServices aggregated "
         "by QoSConditioningSubService.") ]
    uint8 DropperNumber;
};

// ===================================================================
//     FlowService
// ===================================================================
        [Experimental, Version ("2.7.0"),  
         Description (
         "This class represents a service that supports a particular "
         "microflow. The microflow is identified by the string-valued "
         "property FlowID. In some implementations, an instance of this "
         "class corresponds to an entry in the implementation's flow "
         "table.") ]
class CIM_FlowService : CIM_QoSService {
        [Description (
         "This property is a string containing an identifier for a "
         "microflow.") ]
    string FlowID;
};

// ===================================================================
//     EFService
// ===================================================================
        [Version ("2.7.0"), Deprecated {"CIM_DiffServService"}, 
         Description (
         "This class represents a specialization of the general "
         "concept of forwarding network traffic by adding specific "
         "semantics that characterize the operation of the "
         "Expedited Forwarding (EF) Service (defined in RFC 2598). \n"
         "\n"
         "The EF PHB can be used to build a low loss, low latency, "
         "low jitter, assured bandwidth, end-to-end service through "
         "DiffServ domains.  Such a service appears to the endpoints "
         "like a point-to-point connection or a virtual leased line. "
         "This service has also been described as Premium service in "
         "the IETF literature. \n"
         "\n"
         "RFC 2598 defines one DSCP for the EF service. Thus, there "
         "is no need to define any attributes in this class, since an "
         "instance of the EFService class, by definition, means that "
         "this particular DSCP is used. \n"
         "\n"
         "EFService is deprecated since forwarding based on the "
         "value of the DiffServ Code Point is specified using a "
         "FilterList, which is associated with a ClassifierElement. "
         "If there is a need to distinguish a higher-level set of "
         "coordinated QoS services, the DiffServService class can "
         "be instantiated directly.") ]
class CIM_EFService : CIM_DiffServService {
};

// ==================================================================
//    AFRelatedServices
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "The IETF's RFC2597 describes a Differentiated Services "
         "Per-Hop-Behavior (PHB) Group called Assured Forwarding "
         "(AF). Quoting from the RFC, \"The AF PHB group provides "
         "delivery of IP packets in four independently forwarded "
         "AF classes. Within each AF class, an IP packet can be "
         "assigned one of three different levels of drop "
         "precedence.\" The AFRelatedServices association describes "
         "the precedence of the individual AF drop-related "
         "Services within an AF IP packet-forwarding class.") ]
class CIM_AFRelatedServices {
        [Key, Max (1), Description (  
           "The AFService with a lower drop precedence (ie, lower "
         "probability of dropping packets).") ]
    CIM_AFService REF AFLowerDropPrecedence;
        [Key, Description (  
         "An AFService at the same IP packet-forwarding class level, "
         "but at a higher drop precedence.") ]
    CIM_AFService REF AFHigherDropPrecedence;
};

// ===================================================================
//     ConditioningService
// ===================================================================
        [Version ("2.7.0"), Description (
         "ConditioningService represents the ability to define how "
         "traffic is conditioned in the data-forwarding path of a "
	 "device. The subclasses of ConditioningService define the "
	 "particular types of conditioning that are done. These are "
	 "the services performed by a classifier, a meter, a marker, "
	 "a dropper, a queue, and a scheduler. Other, more "
	 "sophisticated types of conditioning may be defined in the "
	 "future. \n" 
	 "\n"
	 "ConditioningService is a concrete class because its "
	 "superclass (ForwardingService) is concrete. While "
	 "this class can be instantiated, an instance of it "
	 "does not accomplish anything, because the nature of the "
	 "conditioning, and the parameters that control it, are "
	 "specified only in the subclasses of ConditioningService. \n" 
	 "\n"
	 "Two associations in which ConditioningService participates "
	 "are critical to its usage in QoS - QoSConditioningSubService "
	 "and NextService. QoSConditioningSubService aggregates "
	 "ConditioningServices into a particular QoS service (such as "
	 "AF), to describe the specific conditioning functionality that "
	 "underlies that QoSService in a particular device. NextService "
	 "indicates the subsequent conditioning service(s) for "
	 "different traffic streams.") ]
class CIM_ConditioningService : CIM_Service {
        [Deprecated {"CIM_EnabledLogicalElement.EnabledStatus"}, 
         Description (
         "This property is a boolean that, if TRUE, signifies that "
         "one or more conditioning functions can be performed on "
         "traffic encountered by this ConditioningService. This "
         "allows one or more ConditioningServices to be enabled or "
         "disabled to provide different types of conditioning for "
         "traffic. Enabled is deprecated in lieu of a similar "
         "(but more generally and completely defined) property "
         "which is inherited.") ]
    boolean Enabled;
};

// ==================================================================
//    QoSConditioningSubService
// ==================================================================
        [Association, Aggregation, Version ("2.7.0"), 
         Description (
         "A QoSService utilizes underlying ConditioningServices as "
         "part of its overall functionality. This is modeled using "
         "the QoSConditioningSubService association. Note that "
         "a ConditioningService may only be part of a single "
         "QoSService - the cardinality on the QoSService "
         "reference is Max (1).") ] 
class CIM_QoSConditioningSubService : CIM_ServiceComponent {
        [Override ("GroupComponent"), Aggregate, 
	 Description (
         "This aggregation identifies the set of ConditioningServices "
         "that together condition traffic for a particular "
         "QoSService.") ]
    CIM_QoSService REF GroupComponent;
        [Override ("PartComponent"), 
         Description ("The ConditioningService.") ]
    CIM_ConditioningService REF PartComponent; 
};

// ==================================================================
//    ConditioningServiceOnEndpoint
// ==================================================================
        [Association, Version ("2.7.0"), 
         Deprecated {"CIM_IngressConditioningServiceOnEndpoint",
           "CIM_EgressConditioningServiceOnEndpoint"}, 
         Description (
         "The QoS Model describes the traffic conditioning functions "
         "in place for a network device. In order to 'be "
         "conditioned', a packet is received at a ProtocolEndpoint. "
         "After 'conditioning', a packet is dropped or leaves the "
         "device via a ProtocolEndpoint. This dependency on "
         "ProtocolEndpoints is defined by the ConditioningServiceOn"
         "Endpoint association. A property of the association, "
         "ServiceType, indicates whether the ConditioningService "
         "handles incoming (\"Ingress\") or out-going (\"Egress\") "
         "packets. This association is deprecated since different "
         "cardinalities are needed on the ingress and egress "
         "classes. This cannot be done using a single association.") ]
class CIM_ConditioningServiceOnEndpoint : CIM_ForwardsAmong {
        [Deprecated {"CIM_IngressConditioningServiceOnEndpoint.Antecedent",
           "CIM_EgressConditioningServiceOnEndpoint.Antecedent "}, 
         Override ("Antecedent"), Max (1), Description (
         "The ProtocolEndpoint through which traffic arrives at or "
         "leaves from a network device.") ]
    CIM_ProtocolEndpoint REF Antecedent;
        [Deprecated {"CIM_IngressConditioningServiceOnEndpoint.Dependent",
           "CIM_EgressConditioningServiceOnEndpoint.Dependent"}, 
         Override ("Dependent"), Description (
         "The ConditioningService which begins or ends the traffic "
         "conditioning processing within a network device.") ]
    CIM_ConditioningService REF Dependent;
        [Deprecated {"CIM_IngressConditioningServiceOnEndpoint",
          "CIM_EgressConditioningServiceOnEndpoint"}, 
         Description (
         "Indicates whether a packet is incoming (value = 1, "
         "\"Ingress\") or out-going (value = 2, \"Egress\") at the "
         "ProtocolEndpoint, relative to the ConditioningService."),
         ValueMap {"0", "1", "2"},  
         Values {"Unknown", "Ingress", "Egress"} ]
    uint16 ServiceType; 
};

// ==================================================================
//    IngressConditioningServiceOnEndpoint
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This association represents the binding, in the ingress "
         "direction, between a ProtocolEndpoint and the first "
         "ConditioningService that processes packets received via "
         "that Endpoint.  Since there can only be one 'first' "
         "ConditioningService for a ProtocolEndpoint, the cardinality "
         "for the Dependent object reference is narrowed from 0..n "
         "to 0..1. On the other hand, a single ConditioningService "
         "can be the first to process packets received via multiple "
         "ProtocolEndpoints. So, the cardinality of the "
         "Antecedent object reference remains 0..n.") ]
class CIM_IngressConditioningServiceOnEndpoint : 
 CIM_ServiceSAPDependency {
        [Override ("Antecedent"), Description (
         "The ProtocolEndpoint through which traffic arrives at "
         "a network device.") ]
    CIM_ProtocolEndpoint REF Antecedent;
        [Override ("Dependent"), Max (1), Description (
         "The ConditioningService which begins the traffic "
         "conditioning processing within a network device.") ]
    CIM_ConditioningService REF Dependent;
};

// ==================================================================
//    EgressConditioningServiceOnEndpoint
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This association represents the binding, in the egress "
         "direction, between a ProtocolEndpoint and the last "
         "ConditioningService that processes packets before they "
         "leave a network device (via that ProtocolEndpoint). This "
         "'last' ConditioningService is ordinarily a scheduler, "
         "but it does not have to be. There can be multiple "
         "'last' ConditioningServices for an Endpoint (for example, "
         "in the case of a fallback scheduler). Therefore, the "
         "cardinality for the Dependent object reference remains "
         "0..n. On the other hand, a single ConditioningService "
         "cannot be the last one to process packets for multiple "
         "Endpoints. So, the cardinality of the Antecedent object "
         "reference is narrowed from 0..n to 0..1.") ]
class CIM_EgressConditioningServiceOnEndpoint : 
 CIM_ServiceSAPDependency {
        [Override ("Antecedent"), Max (1), Description (
         "The ProtocolEndpoint through which traffic leaves "
         "a network device.") ]
    CIM_ProtocolEndpoint REF Antecedent;
        [Override ("Dependent"), Description (
         "The ConditioningService which ends the traffic "
         "conditioning processing within a network device.") ]
    CIM_ConditioningService REF Dependent;
};

// ==================================================================
//    NextService
// ==================================================================
        [Association, Version ("2.7.0"), Description (
         "NextService establishes a predecessor-successor "
	 "relationship between two ConditioningService objects. This "
	 "association is used to indicate the sequence of "
	 "ConditioningServices required to process a particular type "
	 "of traffic. \n"
	 "\n"
	 "Instances describe the various relationships between "
	 "different ConditioningServices (such as classifiers, meters, "
	 "droppers, etc.) that are used collectively to condition "
	 "traffic. Both one-to-one and more complicated fan-in and/or "
	 "fan-out relationships can be described. The Conditioning"
	 "Services may feed one another directly, or they may be "
	 "mapped to multiple 'next' Services based on the "
	 "characteristics of the packet." ) ] 
class CIM_NextService {
        [Key, Description (
         "The preceding ConditioningService, 'earlier' in the "
         "processing sequence for a packet.") ]
    CIM_ConditioningService REF PrecedingService;
        [Key, Description (
         "The 'next' or following ConditioningService.") ]
    CIM_ConditioningService REF FollowingService;
};

// ===================================================================
//     ClassifierService
// ===================================================================
        [Version ("2.7.0"), Description (
         "ClassifierService represents a logical entity associated "
	 "with an ingress or egress interface of a device, that takes "
	 "a single input stream, and sorts it into one or more output "
	 "streams. The sorting is done by a set of filters that select "
	 "packets based on the packet contents, or possibly based on "
	 "other attributes associated with the packet. Each output "
	 "stream is the result of matching a particular filter. \n"
	 "\n"
	 "Rather than being linked directly to its filters (instantiated "
	 "as FilterLists), a classifier is modeled as an aggregation "
	 "of ClassifierElements.  Each of these ClassifierElements is "
	 "linked to a single FilterList, by the association "
	 "ClassifierElementUsesFilterList. Note that ClassifierServices "
	 "are designed to allow hierarchical classification. When "
	 "hierarchical classification is used, a ClassifierElement may "
	 "point to another ClassifierService (via the association, "
	 "NextServiceAfterClassifierElement). When this is true, the "
	 "ClassifierElement MUST NOT use the ClassifierElementUses"
	 "FilterList association. \n"
	 "\n"
	 "A classifier is modeled as a ConditioningService so that it "
	 "can be aggregated into a QoSService (using the "
	 "QoSConditioningSubService aggregation), and can use the "
	 "NextService association to identify the subsequent "
	 "ConditioningServices for different traffic streams.") ]
class CIM_ClassifierService : CIM_ConditioningService {
};

// ===================================================================
//     ClassifierElement
// ===================================================================
        [Experimental, Version ("2.7.0"), Description (
         "ClassifierElement represents the linkage, within a single "
         "ClassifierService, between a FilterList (that defines the "
         "criteria to select packets from the stream of packets "
         "coming into the Service) and the next ConditioningService "
         "(to which the selected packets go after they leave the "
         "ClassifierService). ClassifierElement has no properties of "
         "its own. It is present to serve as an aggregated entity "
         "into ClassifierService (using the ClassifierElementIn"
         "ClassifierService association), and for associations with its "
         "FilterList (ClassifierElementUsesFilterList) and its next "
         "ConditioningService (NextServiceAfterClassifierElement). \n"
         "\n"
         "Note that a ClassifierElement may be associated with a "
         "ClassifierService through the NextServiceAfterClassifier"
         "Element association. This will occur when implementing "
         "hierarchical classification. In this case, the "
         "ClassifierElement MUST NOT instantiate the ClassifierElement"
         "UsesFilterList association. Further, when a ClassifierElement "
         "is associated with a ClassifierService as described above, "
         "the order of processing of the associated ClassifierService "
         "is a function of the ClassifierOrder property of the "
         "ClassifierElementInClassifierService aggregation.") ]
class CIM_ClassifierElement : CIM_ClassifierService {
};

// ===================================================================
//     ClassifierElementInClassifierService
// ===================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Aggregation, Composition, Description (
         "This aggregation represents the relationship between "
         "a ClassifierService and the ClassifierElements that provide "
         "its fan-out function. ClassifierElements represent "
         "the traffic selectors for the Service. A ClassifierService "
         "typically aggregates multiple ClassifierElements. An "
         "individual Element, however, is aggregated only by a single "
         "ClassifierService.") ]
class CIM_ClassifierElementInClassifierService : CIM_ServiceComponent {
        [Override ("GroupComponent"), Aggregate, Min (1), Max (1),
         Description (
         "The ClassifierService which aggregates ClassifierElements.") ]
    CIM_ClassifierService REF GroupComponent;
        [Override ("PartComponent"), Description (
         "The aggregated ClassifierElement, defined in the context of one "
         "ClassifierService.") ] 
    CIM_ClassifierElement REF PartComponent;
        [Description (
         "Because the filters for a classifier can overlap, it is "
         "necessary to specify the order in which the ClassifierElements "
         "are aggregated by a ClassifierService. This then dictates the "
         "order in which packets coming into the classifier are presented. "
         "Values are represented in ascending order: first '1', then '2', "
         "and so on. Different values MUST be assigned for each of the "
         "ClassifierElements aggregated by a given ClassifierService.") ]
    uint32 ClassifierOrder;
};

// ===================================================================
//     ClassifierElementUsesFilterList
// ===================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This association relates one or more ClassifierElements "
         "with a FilterList that defines the criteria to select packets "
         "for the classifier to process. Note that a classifier is "
         "always modeled as a ClassifierService that aggregates a set "
         "of ClassifierElements. Each of these ClassifierElements is "
         "EITHER associated with a single FilterList OR associated to "
         "another ClassifierService (via NextServiceAfterClassifier"
         "Element to describe hierarchical classification).") ]
class CIM_ClassifierElementUsesFilterList : CIM_Dependency {
        [Override ("Antecedent"), Max (1),
         Description (
         "The FilterList that specifies the traffic criteria for a "
         "ClassifierElement.") ]
    CIM_FilterList REF Antecedent;
        [Override ("Dependent"), Description (
         "The ClassifierElement that depends on the FilterList for "
         "its traffic criteria.") ] 
    CIM_ClassifierElement REF Dependent;
};

// ===================================================================
//     ClassifierElement
// ===================================================================
        [Experimental, Version ("2.7.0"), Description (
         "ClassifierElement represents the linkage, within a single "
         "ClassifierService, between a FilterList (that defines the "
         "criteria to select packets from the stream of packets "
         "coming into the Service) and the next ConditioningService "
         "(to which the selected packets go after they leave the "
         "ClassifierService). ClassifierElement has no properties of "
         "its own. It is present to serve as an aggregated entity "
         "into ClassifierService (using the ClassifierElementIn"
         "ClassifierService association), and for associations with its "
         "FilterList (ClassifierElementUsesFilterList) and its next "
         "ConditioningService (NextServiceAfterClassifierElement). \n"
         "\n"
         "Note that a ClassifierElement may be associated with a "
         "ClassifierService through the NextServiceAfterClassifier"
         "Element association. This will occur when implementing "
         "hierarchical classification. In this case, the "
         "ClassifierElement MUST NOT instantiate the ClassifierElement"
         "UsesFilterList association. Further, when a ClassifierElement "
         "is associated with a ClassifierService as described above, "
         "the order of processing of the associated ClassifierService "
         "is a function of the ClassifierOrder property of the "
         "ClassifierElementInClassifierService aggregation.") ]
class CIM_ClassifierElement : CIM_ClassifierService {
};

// ===================================================================
//     ClassifierElementInClassifierService
// ===================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Aggregation, Composition, Description (
         "This aggregation represents the relationship between "
         "a ClassifierService and the ClassifierElements that provide "
         "its fan-out function. ClassifierElements represent "
         "the traffic selectors for the Service. A ClassifierService "
         "typically aggregates multiple ClassifierElements. An "
         "individual Element, however, is aggregated only by a single "
         "ClassifierService.") ]
class CIM_ClassifierElementInClassifierService : CIM_ServiceComponent {
        [Override ("GroupComponent"), Aggregate, Min (1), Max (1),
         Description (
         "The ClassifierService which aggregates ClassifierElements.") ]
    CIM_ClassifierService REF GroupComponent;
        [Override ("PartComponent"), Description (
         "The aggregated ClassifierElement, defined in the context of one "
         "ClassifierService.") ] 
    CIM_ClassifierElement REF PartComponent;
        [Description (
         "Because the filters for a classifier can overlap, it is "
         "necessary to specify the order in which the ClassifierElements "
         "are aggregated by a ClassifierService. This then dictates the "
         "order in which packets coming into the classifier are presented. "
         "Values are represented in ascending order: first '1', then '2', "
         "and so on. Different values MUST be assigned for each of the "
         "ClassifierElements aggregated by a given ClassifierService.") ]
    uint32 ClassifierOrder;
};

// ===================================================================
//     ClassifierElementUsesFilterList
// ===================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This association relates one or more ClassifierElements "
         "with a FilterList that defines the criteria to select packets "
         "for the classifier to process. Note that a classifier is "
         "always modeled as a ClassifierService that aggregates a set "
         "of ClassifierElements. Each of these ClassifierElements is "
         "EITHER associated with a single FilterList OR associated to "
         "another ClassifierService (via NextServiceAfterClassifier"
         "Element to describe hierarchical classification).") ]
class CIM_ClassifierElementUsesFilterList : CIM_Dependency {
        [Override ("Antecedent"), Max (1),
         Description (
         "The FilterList that specifies the traffic criteria for a "
         "ClassifierElement.") ]
    CIM_FilterList REF Antecedent;
        [Override ("Dependent"), Description (
         "The ClassifierElement that depends on the FilterList for "
         "its traffic criteria.") ] 
    CIM_ClassifierElement REF Dependent;
};

// ===================================================================
//     NextServiceAfterClassifierElement
// ===================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "An association used to establish a predecessor-successor "
         "relationship between a single ClassifierElement (within a "
         "ClassifierService) and the next ConditioningService object "
         "that further processes the selected traffic. Note that the "
         "cardinalities indicate that a FollowingService MUST be "
         "defined, after the ClassifierElement. This is because there "
         "is no reason to classify traffic unless further processing "
         "will be done.") ]
class CIM_NextServiceAfterClassifierElement : CIM_NextService {
        [Override ("PrecedingService"), Description (
         "The ClassifierElement that selects traffic to be passed "
         "to the FollowingService.") ]
    CIM_ClassifierElement REF PrecedingService;
        [Override ("FollowingService"), Min (1), Max (1), 
         Description (
         "The ConditioningService that follows the ClassifierElement.") ] 
    CIM_ConditioningService REF FollowingService;
};

// ===================================================================
//     NextServiceAfterClassifierElement
// ===================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "An association used to establish a predecessor-successor "
         "relationship between a single ClassifierElement (within a "
         "ClassifierService) and the next ConditioningService object "
         "that further processes the selected traffic. Note that the "
         "cardinalities indicate that a FollowingService MUST be "
         "defined, after the ClassifierElement. This is because there "
         "is no reason to classify traffic unless further processing "
         "will be done.") ]
class CIM_NextServiceAfterClassifierElement : CIM_NextService {
        [Override ("PrecedingService"), Description (
         "The ClassifierElement that selects traffic to be passed "
         "to the FollowingService.") ]
    CIM_ClassifierElement REF PrecedingService;
        [Override ("FollowingService"), Min (1), Max (1), 
         Description (
         "The ConditioningService that follows the ClassifierElement.") ] 
    CIM_ConditioningService REF FollowingService;
};

// ==================================================================
//    ClassifierFilterSet
// ==================================================================
        [Association, 
         Deprecated {"CIM_ClassifierElementUsesFilterList",
          "ClassifierElementInClassifierService"}, 
         Version ("2.7.0"), Description (
         "In order for a ClassifierService to correctly identify and "
         "process network traffic, that traffic must be described by "
         "FilterEntries, which are aggregated into FilterLists. This "
         "association defines the Dependency of the ClassifierService "
         "on FilterLists (and therefore, their FilterEntries). The "
         "cardinality of the association requires that the Classifier"
         "Service operate against at least one FilterList. \n"
         "\n"
         "The association is deprecated in lieu of associating Filter"
         "Lists to ClassifierElements, and ClassifierElements into "
         "ClassifierServices. The latter approach is very flexible "
         "regarding the implementations that can be modeled, and removes "
         "the need to track individual traffic streams using an "
         "artificial model property, TrafficClass. Using "
         "ClassifierElements, each stream is processed beginning with "
         "a single FilterList and progressing through various "
         "ConditioningServices, associated via instances of "
         "NextService.") ] 
class CIM_ClassifierFilterSet : CIM_Dependency {
        [Deprecated {"CIM_ClassifierElementUsesFilterList.Antecedent"}, 
         Override ("Antecedent"), Min (1), Description (
	   "The FilterList aggregating FilterEntries, these in turn "
         "describe how traffic is identified and processed by the "
         "ClassifierService.") ]
    CIM_FilterList REF Antecedent;
        [Deprecated {"CIM_ClassifierElementUsesFilterList.Dependent"}, 
         Override ("Dependent"), Description (
         "The ClassifierService which uses the FilterList and its "
         "aggregated FilterEntries.") ]
    CIM_ClassifierService REF Dependent;
        [Deprecated {"CIM_ClassifierElementInClassifierService.ClassifierOrder"}, 
         Description (
         "The ordering of the FilterLists used in the classification "
         "and forwarding functions of the ClassifierService.") ]
    uint16 FilterListPosition; 
};

// ===================================================================
//     MeterService
// ===================================================================
        [Version ("2.7.0"), Description (
         "This class represents the metering of network traffic. "
         "Metering is the function of monitoring the arrival times "
         "of packets of a traffic stream and determining the level "
         "of conformance of each packet with respect to a pre-"
         "established traffic profile. A meter has the ability to "
         "invoke different ConditioningServices for conforming "
         "and non-conforming traffic. Traffic leaving a meter may "
         "be further conditioned (e.g., dropped or queued) by "
         "routing the packet to another conditioning element. \n"
         "\n"
         "This class is modeled as a ConditioningService so that "
         "it can be aggregated into a QoSService (using the "
         "QoSConditioningSubService association), to indicate that "
         "its functionality underlies that QoS service. MeterService "
         "also participates in a subclass of the NextService association, "
         "to identify the subsequent ConditioningServices for conforming "
         "and non-conforming traffic.") ]
class CIM_MeterService : CIM_ConditioningService {
        [Description (
         "This property is an enumerated 16-bit unsigned integer "
         "that is used to specify the particular type of meter. "
         "Defined values of the enumeration are: "
         "\n\n"
         "   1: Other \n"
         "   2: Average Rate Meter \n"
         "   3: Exponentially Weighted Moving Average Meter \n"
         "   4: Token Bucket Meter \n"
         "\n"
         "Note: The MeterType property and the MeterService "
         "subclasses provide similar information. This property is "
         "defined for query purposes and for future expansion. It "
         "is assumed that not all MeterServices will require a "
         "subclass to define them.  Therefore, MeterService will "
         "be instantiated directly and the Type property is "
         "needed."),
         ValueMap {"1", "2", "3", "4"}, 
         Values {"Other", "Average Rate Meter", 
          "Exponentially Weighted Moving Average Meter", 
          "Token Bucket Meter"}, 
         ModelCorrespondence {"CIM_MeterService.OtherMeterType"} ]
    uint16 MeterType;
        [Description (
         "This property is a string used in conjunction with "
         "the MeterType property. When the value of MeterType "
         "is 1 (i.e., \"Other\"), then the name of the conformance "
         "level for this meter is defined in this property."),
         ModelCorrespondence {"CIM_MeterService.MeterType"} ]
    string OtherMeterType;
        [Description (
         "An unsigned integer indicating the number of conformance "
         "levels supported by the Meter. For example, when only " 
         "'in-profile' or 'out of profile' metering is supported. "
         "ConformanceLevels is set to 2.") ]
    uint16 ConformanceLevels;
};

// ===================================================================
//     AverageRateMeterService
// ===================================================================
        [Version ("2.7.0"), Description (
         "This is a concrete subclass of MeterService that represents "
	 "a simple meter, called an Average Rate Meter. This type of "
	 "meter measures the average rate at which packets are "
	 "submitted to it over a specified time. Packets are "
	 "defined as conformant if their average arrival rate "
	 "does not exceed the specified measuring rate of the meter. "
	 "Any packet that causes the specified measuring rate to be "
	 "exceeded is defined to be non-conforming.") ]
class CIM_AverageRateMeterService : CIM_MeterService {
      [Description (
         "This property is a 32-bit unsigned integer that defines the "
         "rate used to determine whether admitted packets are in "
         "conformance or not. The value is specified in kilobits per "
         "second."),
         Units ("KiloBits per Second") ]
    uint32 AverageRate;
       [Description ( 
        "This property is a 64-bit unsigned integer that defines " 
        "the time period over which the average measurement should " 
        "be taken. The value is specified in microseconds."), 
        Units ("MicroSeconds") ] 
    uint64 DeltaInterval; 
};

// ===================================================================
//     EWMAMeterService
// ===================================================================
        [Version ("2.7.0"), Description (
         "This is a concrete subclass of the MeterService class that "
	 "represents an exponentially weighted moving average meter. This "
	 "meter is a simple low-pass filter that measures the rate of "
	 "incoming packets over a small, fixed sampling interval. Any "
	 "admitted packet that pushes the average rate over a pre-defined "
	 "limit is defined to be non-conforming.") ]
class CIM_EWMAMeterService : CIM_MeterService {
        [Description (
         "This property is a 32-bit unsigned integer that defines the "
         "average rate against which the sampled arrival rate of "
         "packets should be measured. Any packet that causes the "
         "sampled rate to exceed this rate is deemed "
         "non-conforming. The value is specified in kilobits per "
         "second."),
         Units ("KiloBits Per Second") ]
    uint32 AverageRate;
       [Description ( 
        "This property is a 64-bit unsigned integer that defines " 
        "the sampling interval used to measure the arrival rate. " 
        "The calculated rate is averaged over this interval " 
        "and checked against the AverageRate property. All " 
        "packets whose computed average arrival rate is " 
        "less than the AverageRate are deemed conforming. The "
        "value is specified in microseconds."), 
        Units ("MicroSeconds") ] 
    uint64 DeltaInterval;
        [Description (
         "This property is a 32-bit unsigned integer representing the "
         "reciprocal of the time constant (e.g., frequency response) "
         "of what is essentially a simple low-pass filter.  For example, "
         "the value 64 for this property represents a time constant "
         "value of 1/64.") ]
    uint32 Gain;
};

// ===================================================================
//     TokenBucketMeterService
// ===================================================================
        [Version ("2.7.0"), Description (
         "This is a concrete subclass of the MeterService class that "
	 "represents the metering of network traffic using a token "
	 "bucket meter.  Two types of token bucket meters are defined "
	 "using this class - a simple, two-parameter bucket meter, "
	 "and a multi-stage meter. \n"
	 "\n"
	 "A simple token bucket usually has two parameters, an average "
	 "token rate and a burst size, and has two conformance levels: "
	 "'conforming' and 'non-conforming'.  This class also defines " 
	 "an excess burst size, which enables the meter to have three "
	 "onformance levels ('conforming', 'partially conforming', and "
	 "'non-conforming'). In this case, packets that exceed the "
	 "excess burst size are deemed non-conforming, while packets "
	 "that exceed the smaller burst size but are less than the "
	 "excess burst size are deemed partially conforming.") ]
class CIM_TokenBucketMeterService : CIM_MeterService {
        [Description (
         "This property is a 32-bit unsigned integer that is used to "
         "define the committed rate of the meter. The value is "
         "expressed in kilobits per second."),
         Units ("KiloBits per Second") ]
    uint32 AverageRate;
        [Description (
         "This attribute is a 32-bit unsigned integer that is used to "
         "define the peak rate of the meter. The value is "
         "expressed in kilobits per second."), 
         Units ("KiloBits per Second") ]
    uint32 PeakRate;
        [Description (
         "This property is a 32-bit unsigned integer that is used to "
         "define the maximum number of tokens available for the "
         "committed rate (specified by the AverageRate property). The "
         "value is specified in kilobytes."),
         Units ("KiloBytes") ]
    uint32 BurstSize;
        [Description (
         "This property is a 32-bit unsigned integer that is used to "
         "define the maximum number of tokens available for the "
         "peak rate (specified by the PeakRate property). The "
         "value is specified in kilobytes."),
         Units ("KiloBytes") ]
    uint32 ExcessBurstSize;
};

// ==================================================================
//    NextServiceAfterMeter
// ==================================================================
        [Association, Version ("2.7.0"), Description (
         "This association describes a predecessor-successor "
         "relationship between a MeterService and one or more "
         "ConditioningService objects that process traffic from the "
         "meter. For example, for devices that implement preamble "
         "marking, the FollowingService reference (after the meter) "
         "is a PreambleMarkerService - to record the results of the "
         "metering in the preamble. \n"
         "\n"
         "It might be expected that the NextServiceAfterMeter "
         "association would subclass from NextService. However, "
         "meters are 1:n fan-out elements, and require a mechanism "
         "to distinguish between the different results/outputs of "
         "the meter. Therefore, this association defines a new key "
         "property, MeterResult, which is used to record the result "
         "and identify the output through which this traffic left "
         "the meter.") ]
class CIM_NextServiceAfterMeter {
        [Key, Description (
         "The preceding MeterService, 'earlier' in the "
         "processing sequence for a packet.") ]
    CIM_MeterService REF PrecedingService;
        [Key, Description (
         "The 'next' or following ConditioningService.") ]
    CIM_ConditioningService REF FollowingService;
	  [Key, Description (
         "Information on the result of the metering. Traffic "
         "is distinguished as being conforming, non-conforming, or "
         "partially conforming. More complicated metering can be "
         "built either by extending the enumeration or by "
         "cascading meters."), 
         ValueMap {"0", "1", "2", "3"}, 
         Values {"Unknown", "Conforming", "Partially Conforming", 
          "Non-Conforming"} ]
    uint16 MeterResult;
};

// ===================================================================
//     MarkerService
// ===================================================================
        [Version ("2.6.0"), Description (
         "MarkerService represents the general process of "
	 "marking a selected field in a network packet with "
	 "a specified value. Packets are marked in order to "
	 "control the conditioning that they will subsequently "
	 "receive. Subclasses of MarkerService identify the "
	 "specific fields to be marked, and introduce properties "
	 "to represent the values used in marking these fields. "
	 "Markers are usually invoked as a result of a "
	 "preceding classifier match. \n"
	 "\n"
	 "MarkerService is a concrete class because its "
	 "superclass (ConditioningService) is concrete. While "
	 "this class can be instantiated, an instance of it "
	 "does not accomplish anything, because both the field "
	 "to be marked and the value used to mark it are defined "
	 "in subclasses. \n"
	 "\n"
	 "MarkerService is modeled as a ConditioningService so "
	 "that it can be aggregated into a QoSService (using the "
	 "QoSConditioningSubService association). This association "
	 "indicates that the MarkerService's functionality "
	 "underlies the QoSService. MarkerService also "
	 "participates in the NextService association to identify "
	 "the subsequent ConditioningService(s) that act on packets "
	 "after they have been marked.") ]
class CIM_MarkerService : CIM_ConditioningService {
};

// ===================================================================
//     PreambleMarkerService
// ===================================================================
        [Experimental, Version ("2.7.0"), Description (
         "PreambleMarkerService models the storing of traffic-"
         "conditioning results in a packet preamble. An instance "
         "appends a two-part string of the form '<type>,<value>' to "
         "the packet preamble. The concept of 'type's is discussed "
         "more fully in the Description of the class' "
         "FilterItemList property.") ]
class CIM_PreambleMarkerService : CIM_MarkerService {
        [Description (
         "  To foster interoperability, the basic format of the "
         "information captured by a PreambleMarker is specified. "
         "That information is contained in the FilterItemList "
         "property (an ordered, string array). Each entry in the "
         "array takes the form 'type,value'. When entries are added, "
         "they are appended to the end of the list. \n"
         "  A limited set of standardized 'type's exist. They are: "
         "   - ConformingFromMeter, NonConformingFromMeter and "
         "PartConformingFromMeter to convey metering results "
         "(where the 'value' is the name of the meter) \n"
         "   - VlanId to describe the traffic's VLAN information "
         "(where the 'value' is the VLAN ID). \n"
         "  An implementation is free to define and use other "
         "preamble 'types'. \n"
         "  Note that a wildcard value of \"any\" is allowed to "
         "indicate that the preamble entry matches for any 'value' "
         "of the specified 'type'. For example, using the wildcard, "
         "an administrator can define a filter to select all "
         "packets that were found to be conforming ('type' = "
         "\"ConformingFromMeter\") without having to name each "
         "meter individually."),
         ArrayType ("Ordered") ]
    string FilterItemList[];
};

// ===================================================================
//     ToSMarkerService
// ===================================================================
        [Experimental, Version ("2.7.0"), Description (
         "ToSMarkerService marks the ToS (type of service) field "
         "in the IPv4 packet header [R791] with a specific value. "
         "Packets are marked in order to control the conditioning "
         "that they will subsequently receive. Following common "
         "practice, the value to be written into the ToS field is "
         "represented as an unsigned 8-bit integer.") ]
class CIM_ToSMarkerService : CIM_MarkerService {
        [Description (
         "This property is an unsigned 8-bit integer, representing "
         "a value to be used for marking the type of service (ToS) "
         "field in the IPv4 packet header. The ToS field is "
         "defined to be a complete octet, so the range for this "
         "property is 0..255.  Some implementations, however, "
         "require that the lowest-order bit in the field is always "
         "0.  Such an implementation cannot support an "
         "odd TosValue.") ]
    uint8 ToSValue;
};


// ===================================================================
//     DSCPMarkerService
// ===================================================================
        [Experimental, Version ("2.7.0"), Description (
        "DSCPMarkerService marks the differentiated services "
        "codepoint (DSCP) within the DS field in the IPv4 and IPv6 "
        "packet headers, as defined in [R2474]. It is marked with "
        "the specific value defined in the property, DSCPValue. "
        "Following common practice, the value to be written into "
        "the field is represented as an unsigned 8-bit integer.") ]
class CIM_DSCPMarkerService : CIM_MarkerService {
        [MinValue (0), MaxValue (63), Description (
         "This property is an unsigned 8-bit integer, representing "
         "a value to be used for marking the DSCP field in an "
         "IPv4 or Ipv6 packet header. Since the DSCP consists of 6 "
         "bits, the values for this property are limited to the "
         "range 0..63.  When the DSCP is marked, the remaining two bits "
         "in the DS field are left unchanged.") ]  
    uint8 DSCPValue;
};

// ===================================================================
//     8021QMarkerService
// ===================================================================
        [Experimental, Version ("2.7.0"), Description (
        "8021QMarkerService marks the Priority field in an 802.1Q-"
        "compliant frame, with a specified value. Frames are "
        "marked in order to control the conditioning that they will "
        "subsequently receive. Following common practice, the value "
        "to be written into the field is represented as an unsigned "
        "8-bit integer.") ]
class CIM_8021QMarkerService : CIM_MarkerService {
        [MinValue (0), MaxValue (7), Description (
         "This property is an unsigned 8-bit integer, representing "
         "a value to be used for marking the Priority field in the "
         "802.1Q header. Since the Priority field consists of 3 "
         "bits, the values for this property are limited to the "
         "range 0..7.  When the Priority field is marked, the "
         "remaining two bits in the octet are left unchanged.") ]  
    uint8 PriorityValue;
};

// ===================================================================
//     DropperService
// ===================================================================
 [Version ("2.7.0"), Description (
   "DropperService represents the ability to selectively "
   "drop network traffic, and/or to invoke another "
   "ConditioningService (indicated using the NextService "
   "association) for further processing of traffic that is "
   "not dropped. It is the base class for different types "
   "of droppers. Droppers are distinguished by the "
   "algorithm that they use to drop traffic. \n"
   "\n"
   "The NextService association has special semantics for "
   "droppers, in addition to conveying the general information "
   "of 'what happens next' (that apply to all Conditioning"
   "Services). The queue(s) from which a particular dropper "
   "drops packets are identified by following chain(s) of "
   "NextService associations 'rightwards' from the dropper, "
   "until they reach a queue.") ]
class CIM_DropperService : CIM_ConditioningService {
        [Description (
         "This property is an enumerated 16-bit unsigned integer "
         "that defines the type of dropper. Its Values are: \n"
         "   1:  Other \n"
         "   2:  Random \n"
         "   3:  HeadTail \n"
         "   4:  Absolute Dropper \n"
         "\n"
         "Note: The DropperType property and the DropperService "
         "subclasses provide similar information. This property is "
         "defined for query purposes and to not require a "
         "subclass for all types of DropperServices (for example, "
         "to describe an Absolute Dropper in today's model). "
         "Therefore, DropperService can be instantiated directly "
         "and the Type property is needed."),
         ValueMap {"1", "2", "3", "4"},
         Values {"Other", "Random", "HeadTail", "Absolute Dropper"},
         ModelCorrespondence { 
          "CIM_DropperService.OtherDropperType"} ]
    uint16 DropperType; 
        [Description (
         "This property contains a vendor-specific value for the "
         "type of dropping that is done. It is used when the value "
         "of the DropperType property is 1 (Other)."),
         ModelCorrespondence {"CIM_DropperService.DropperType"} ]
    string OtherDropperType;
        [Deprecated {
          "CIM_DropperService.TypeOfDropper (=4, Absolute Dropper)"}, 
         Description (
         "This property indicates whether the Dropper will always "
         "drop incoming packets (value=1) regardless of their type. "
         "It is deprecated since its information is conveyed by "
         "the TypeOfDropper property (value=4, 'Absolute Dropper')."), 
         ValueMap {"0", "1", "2"},
         Values {"Unknown", "Always Drop", "Do Not Always Drop"} ]
    uint16 AlwaysDrop;
        [Experimental, Description (
         "This enumeration indicates the point in the associated "
         "queue (associated via the NextService relationship) "
         "from which packets should be dropped. If the value is "
         "0 \"Unknown\", then packets MAY be dropped from any "
         "location in the queue."), 
         ValueMap {"0", "1", "2"},
         Values {"Unknown", "Head", "Tail"} ]
    uint16 DropFrom;
        [Description (
         "This property is an enumerated unsigned 16-bit integer "
         "that defines the metric used to trigger the start of "
         "dropping packets. This does NOT mean that all packets "
         "will be dropped; it does mean that SOME packets will "
         "start to be dropped. The number and type of packets "
         "dropped is a function of the type of algorithm used by "
         "this Dropper. Values are: "
         "\n\n"
         "   1:  Other \n"
         "   2:  Queue Threshold \n"
         "   3:  Arrival Rate "),
         ValueMap {"1", "2", "3"},
         Values {"Other", "Queue Threshold", "Arrival Rate"} ]
    uint16 DropStartMetric;
        [Description (
         "This property is an enumerated unsigned 16-bit integer "
         "that defines the metric used to determine when ALL "
         "packets will be dropped REGARDLESS of the type of "
         "algorithm used by this Dropper. Values are: "
         "\n\n"
         "   1:  Other \n"
         "   2:  Queue Threshold \n"
         "   3:  Arrival Rate "),
         ValueMap {"1", "2", "3"},
         Values {"Other", "Queue Threshold", "Arrival Rate"} ]
    uint16 DropMaintainMetric;
};

// ===================================================================
//     REDDropperService
// ===================================================================
 [Version ("2.7.0"), Description (
   "REDDropperService represents the ability to drop "
   "network traffic using a Random Early Detection (RED) "
   "algorithm. The purpose of a RED algorithm is to "
   "avoid congestion (as opposed to managing congestion). "
   "Instead of waiting for the queues to fill up, and then "
   "dropping large numbers of packets, RED works by "
   "monitoring average queue depth. When the queue depth "
   "exceeds a minimum threshold, packets are randomly "
   "discarded. These discards cause TCP to slow its "
   "transmission rate for those connections that "
   "experienced the packet discards. Other connections "
   "are not affected by these discards. \n"
   "\n"
   "A RED dropper always drops packets from a single queue, "
   "which is related to the dropper as the following Service "
   "in the NextService association. The queue(s) examined by "
   "the drop algorithm are found by following the "
   "CalculationServiceForDropper association(s) to determine the "
   "dropper's DropThresholdCalculationService(s), and then "
   "following the CalculationBasedOnQueue association to "
   "find the queue being watched by each CalculationService.") ]
class CIM_REDDropperService : CIM_DropperService {
        [Description (
         "This is an unsigned 32-bit integer that defines the "
	 "minimum average queue depth at which packets are "
	 "subject to being dropped. (See the ThresholdUnits "
	 "property to determine the units of the threshold.) "
	 "The slope of the drop probability function is "
	 "described by the Start/StopProbability properties."),
        ModelCorrespondence {"CIM_REDDropperService.ThresholdUnits"} ]
    uint32 MinQueueThreshold;
        [Description (
         "This is an unsigned 32-bit integer that defines the "
	 "maximum average queue length at which packets are "
	 "subject to always being dropped, regardless of the "
	 "dropping algorithm and probabilities being used. "
	 "(See the ThresholdUnits property to determine the "
	 "units of the threshold.)"), 
        ModelCorrespondence {"CIM_REDDropperService.ThresholdUnits"} ]
    uint32 MaxQueueThreshold;
        [Description (
         "This is an unsigned 32-bit integer, used in conjunction "
         "with the StopDropProbability property. The start and stop "
         "probabilities define the slope of the drop probability "
         "function.  This function governs the rate at which "
         "packets are subject to being dropped, as a function of "
         "the queue length. \n"
         "\n"
         "This property expresses a drop probability in drops "
         "per thousand packets. For example, the value 100 "
         "indicates a drop probability of 100 per 1000 packets, "
         "that is, 10%.  Min and max values are 0 to 1000."), 
         MinValue (0), MaxValue (1000),
         Units ("Per Thousand Packets"), 
         ModelCorrespondence {
          "CIM_REDDropperService.StopProbability"} ]
    uint32 StartProbability;
        [Description (
         "This is an unsigned 32-bit integer, used in conjunction "
         "with the StartDropProbability property. The start and "
         "stop probabilities define the slope of the drop "
         "probability function. This function governs the rate at "
         "which packets are subject to being dropped, as a "
         "function of the queue length. \n"
         "\n"
         "This property expresses a drop probability in drops "
         "per thousand packets. For example, the value 100 "
         "indicates a drop probability of 100 per 1000 packets, "
         "that is, 10%.  Min and max values are 0 to 1000."), 
         MinValue (0), MaxValue (1000),
         Units ("Per Thousand Packets"), 
         ModelCorrespondence {
          "CIM_REDDropperService.StartProbability"} ]
    uint32 StopProbability;
        [Experimental, Description (
         "ThresholdUnits is an enumerated integer that identifies "
         "the units for the Min and MaxQueueThreshold properties. "
         "The values are either bytes (1) or packets (2)."), 
         ValueMap {"1", "2"}, 
         Values {"Bytes", "Packets"} ]
    uint16 ThresholdUnits;
};

// ===================================================================
//     WeightedREDDropperService
// ===================================================================
        [Version ("2.7.0"), Deprecated {"No value"}, 
         Description (
         "This class represents a logical entity that resides in the "
         "data forwarding path of a network device. It describes the "
         "ability to drop network traffic using a Weighted Random "
         "Early Detection (WRED) algorithm. Like RED, the purpose of "
         "WRED is to avoid congestion (as opposed to managing "
         "congestion). This modification of the basic RED algorithm "
         "enables packets belonging to different traffic classes to "
         "be dropped at different queue depths. This algorithm also "
         "enables discard to be done based on different information "
         "contained in the packet header, such as IP Precedence, "
         "RSVP session parameters, or even on other factors not "
         "directly encoded in the packet header, such as the "
         "queue depth. \n"
         "\n"
         "Implementation of this class has shown that weighting "
         "should not be a property of the class (but on an association "
         "to it), and that there is insufficient data to process the "
         "drop metric. The class is deprecated pending further "
         "definition by the DMTF.") ]
class CIM_WeightedREDDropperService : CIM_DropperService {
        [Description (
         "This property is an enumerated 16-bit unsigned integer, "
         "and defines the type of metric that is used to drop "
         "traffic.  Values are: "
         "\n\n"
         "   1:  Other \n"
         "   2:  IP Precedence \n"
         "   3:  DSCP Value \n"
         "   4:  802.1P Priority Value \n"
         "   5:  RSVP Session \n"
         "   6:  Queue Depth \n"
         "   7:  Packet Arrival Rate "),
         ValueMap {"1", "2", "3", "4", "5", "6", "7"},
         Values {"Other", "IP Precedence", "DSCP Value", 
          "802.1P Priority Value", "RSVP Session", 
          "Queue Depth", "Packet Arrival Rate"},  
         ModelCorrespondence {
          "CIM_WeightedREDDropperService.OtherDropMetric"} ]
    uint16 DropMetric;
        [Description (
         "This string property is used in conjunction with the "
         "DropMetric property. When the value of DropMetric is "
         "1 (i.e., \"Other\"), then the type of metric to be used "
         "is defined in this property."),
         ModelCorrespondence {
          "CIM_WeightedREDDropperService.DropMetric"} ]
    string OtherDropMetric;
        [Description (
         "This is a 32-bit real number that represents the "
         "weighting factor used to determine which queues "
         "get more service."), 
         MinValue (0), MaxValue (100) ]
    real32 Weight;
};

// ===================================================================
//     HeadTailDropper
// ===================================================================
        [Experimental, Version ("2.7.0"), Description (
         "HeadTailDropper describes the threshold information "
         "of a head or tail dropper. The inherited property "
         "DropFrom indicates whether a particular instance of "
         "this class is a head dropper or a tail dropper. \n"
         "\n"
         "A head dropper always examines the same queue from "
         "which it drops packets, and this queue is always "
         "related to the dropper as the following service in "
         "the NextService association.") ]
class CIM_HeadTailDropper : CIM_DropperService {

        [Description (
         "This is an unsigned 32-bit integer that indicates "
         "the queue depth (in bytes) at which traffic is "
         "dropped.  For a tail dropper, all newly arriving "
         "traffic is dropped. For a head dropper, packets at the "
         "front of the queue are dropped to make room for new "
         "packets, which are added at the end."), 
         Units ("Bytes") ]
    uint32 QueueThreshold;
};

// ===================================================================
//     QueuingService
// ===================================================================
        [Version ("2.7.0"), Description (
         "QueuingService represents the ability to queue "
	 "network traffic, and to specify the characteristics "
	 "for determining long-term congestion. It is modeled "
	 "as a ConditioningService so that it can be aggregated "
	 "into a QoSService (using the QoSConditioningSubService "
	 "association). This indicates that its functionality "
	 "underlies the QoSService.") ]
class CIM_QueuingService : CIM_ConditioningService {
        [Gauge, Experimental, Description (
         "Indicates the current depth of this queue in units "
         "specified by DepthUnits. This value may be important "
         "in diagnosing unexpected behavior."),
         ModelCorrespondence {"CIM_QueuingService.DepthUnits"} ]
    uint32 CurrentQueueDepth;
        [Experimental, Description (
         "DepthUnits is an enumerated integer that identifies "
         "the units for the CurrentQueueDepth property. "
         "The values are either bytes (1) or packets (2)."), 
         ValueMap {"1", "2"}, 
         Values {"Bytes", "Packets"} ]
    uint16 DepthUnits;
};

// ===================================================================
//     DropThresholdCalculationService
// ===================================================================
        [Experimental, Version ("2.7.0"), Description (
         "This class calculates an average depth for a queue, based "
         "on a smoothing weight and a sampling time interval.  The "
         "latter are properties of this Service, describing how it "
         "operates and its necessary parameters. The Service does "
         "the calculation on behalf of a RED dropper (as indicated "
         "by the association, CalculationServiceForDroppper). A "
         "DropThresholdCalculationService is always associated to "
         "the single queue that it examines via the Calculation"
         "BasedOnQueue relationship.") ]
class CIM_DropThresholdCalculationService : CIM_Service {

        [MinValue (0), MaxValue (100000), Description (
         "This property is a 32-bit unsigned integer, ranging between "
         "0 and 100,000 - specified in thousandths. It defines the "
         "weighting of past history in affecting the calculation of "
         "the current average queue depth. The current queue depth "
         "calculation uses the inverse of this value as its factor, "
         "and one minus that inverse as the factor for the historical "
         "average.  The calculation takes the form: \n"
         "average = (old_average*(1-inverse of SmoothingWeight)) \n"
         " + (current_queue_depth*inverse of SmoothingWeight) \n "
         "Implementations may choose to limit the acceptable set of "
         "values to a specified set, such as powers of 2."), 
         Units ("Thousandths") ]
    uint32 SmoothingWeight;

        [Description (
         "This property is a 32-bit unsigned integer, and defines "
         "the number of nanoseconds between each calculation of "
         "average/smoothed queue depth. When this property is not "
         "specified, the CalculationService may determine an "
         "appropriate interval."), 
         Units ("NanoSeconds") ]
    uint32 TimeInterval;
};

// ==================================================================
//    QueueHierarchy
// ==================================================================
        [Association, Version ("2.6.0"), Deprecated {"No value"}, 
         Description (
         "  Describes the reliance of a QueuingService on other, "
         "supporting queues and their QueuingServices. A given Service "
         "can only act in support of one QueuingService; but a "
         "higher level queue may be supported by many lower level "
         "QueuingServices. \n"
         "  The class is deprecated since a queue only stores "
         "network traffic. It does not support other queues, or "
         "manipulate its entries. This type of processing is described "
         "using NextService associations 'rightwards' from the "
         "QueuingService. These associations reference 'other' "
         "ConditioningServices that may send traffic to 'other' "
         "queues).") ] 
class CIM_QueueHierarchy : CIM_ServiceServiceDependency {
        [Override ("Antecedent"), Deprecated {"No value"}, 
         Description (
         "The supporting queue(s) and its QueuingService. This Service "
         "can only support at most one, higher level QueuingService.") ]
    CIM_QueuingService REF Antecedent;
        [Override ("Dependent"), Max (1), Deprecated {"No value"}, 
         Description (
         "The QueuingService dependent on other, supporting Queuing"
         "Services.") ]
    CIM_QueuingService REF Dependent;
};

// ==================================================================
//    CalculationServiceForDropper
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This association is a subclass of ServiceServiceDependency, "
         "and represents the reliance of a REDDropperService on one or "
         "more DropThresholdCalculationServices. The latter calculate "
         "average queue depth, based on the observed depths of a "
         "queue. The specific queue examined by each CalculationService "
         "is defined using the CalculationBasedOnQueue association.") ]
class CIM_CalculationServiceForDropper : CIM_ServiceServiceDependency {
        [Override ("Antecedent"), Min (1), Description (
         "A calculation service for the dropper.") ]
    CIM_DropThresholdCalculationService REF Antecedent;
        [Override ("Dependent"), Description (
         "The RED dropper which is dependent on average queue depth "
         "calculations by the Antecedent Service.") ]
    CIM_REDDropperService REF Dependent;
};

// ==================================================================
//    CalculationBasedOnQueue
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This association establishes a dependency relationship "
         "between a QueuingService and an instance of the "
         "DropThresholdCalculationService class. The queue's "
         "current depth is used by the CalculationService in "
         "calculating an average/smoothed queue depth.") ]
class CIM_CalculationBasedOnQueue : CIM_ServiceServiceDependency {
        [Override ("Antecedent"), Min (1), Max (1), 
         Description (
         "The queue examined by the CalculationService.") ]
    CIM_QueuingService REF Antecedent;
        [Override ("Dependent"), Description (
         "The CalculationService that provides an average queue "
         "depth.") ]
    CIM_DropThresholdCalculationService REF Dependent;
};

// ==================================================================
//    HeadTailDropQueueBinding
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This association describes the relationship between a "
         "head or tail dropper and the queue that it monitors to "
         "determine when to drop traffic. The referenced queue's "
         "depth is compared against the Dropper's threshold property. "
         "Although the dropper drops from only one queue, the "
         "drop decision may be influenced by the state of several "
         "queues. The rule for combining the multiple inputs is "
         "simple addition: if the sum of the lengths of the "
         "monitored queues exceeds the dropper's QueueThreshold "
         "value, then packets are dropped. Note that this rule for "
         "combining inputs may be overridden.") ]
class CIM_HeadTailDropQueueBinding : CIM_Dependency {
        [Override ("Antecedent"), Min (1),  
         Description (
         "A QueuingService examined by the CalculationService.") ]
    CIM_QueuingService REF Antecedent;
        [Override ("Dependent"), Description (
         "The CalculationService that provides an average queue "
         "depth.") ]
    CIM_HeadTailDropper REF Dependent;
};

// ===================================================================
//     BufferPool
// ===================================================================
        [Version ("2.6.0"), Description (
         "This class represents the use of buffers by a Queuing"
         "Service. The existence and management of individual buffers "
         "will be modeled in a future release. At the current level "
         "of abstraction, modeling the existence of the BufferPool "
         "is necessary.  Long term, it is not sufficient."
         "\n\n"
         "In implementations where there are multiple "
         "buffer sizes, an instance of BufferPool should be "
         "defined for each set of buffers with identical or similar "
         "sizes. These instances of buffer pools can then be grouped "
         "together using the CollectedBuffersPool association. "
         "\n\n"
         "Note that this class is derived from CollectionOfMSEs, "
         "and not from Forwarding or ConditioningService. BufferPool "
         "is only a collection of storage, and is NOT a Service.") ]
class CIM_BufferPool : CIM_CollectionOfMSEs {
        [Key, Override ("CollectionID"), MaxLen (256), 
         Description (
         "This property is defined in the CollectionOfMSEs class, "
         "but is overridden here to serve as part of the " 
         "(composite) key that identifies the BufferPool instance.") ]
    string CollectionID;
        [Key, MaxLen (256), Description (
         "CreationClassName indicates the name of the class or the "
         "subclass used in the creation of an instance. When used "
         "with the other key properties of this class, this property "
         "allows all instances of this class and its subclasses to "
         "be uniquely identified.") ]
    string CreationClassName;
        [MaxLen (256), Description (
         "The Name property defines the label by which the object "
           "is known.") ] 
    string Name;
        [Description (
         "This property is a 16-bit unsigned integer, and defines "
         "the number of bytes in each buffer.") ]
    uint16 BufferSize;
        [Description (
         "This property is a 32-bit unsigned integer, and defines "
         "the total number of buffers in the Pool.") ]
    uint32 TotalBuffers;
        [Description (
         "This property is a 32-bit unsigned integer, and defines "
         "the number of buffers in the Pool that are currently "
         "not allocated to any instance of a QueuingService. "
         "Buffers allocated to a QueuingService could either be "
         "in use (containing packet data), or allocated to a Queue "
         "pending the arrival of new packet data.") ]
    uint32 AvailableBuffers;
        [Description (
         "This property is a 32-bit unsigned integer, and defines "
         "the number of buffers in the Pool that have been "
         "simultaneously allocated to multiple instances of "
         "QueuingService.") ]
    uint32 SharedBuffers;
};

// ==================================================================
//    QueueAllocation
// ==================================================================
        [Association, Version ("2.6.0"), Description (
         "Describes the reliance of a QueuingService on the "
         "availability of space in a BufferPool.") ] 
class CIM_QueueAllocation : CIM_Dependency {
        [Override ("Antecedent"), Description (
         "The BufferPool supporting packet storage for a "
         "QueuingService.") ]
    CIM_BufferPool REF Antecedent;
        [Override ("Dependent"), Description (
         "The QueuingService dependent on the BufferPool for storage "
         "space.") ]
    CIM_QueuingService REF Dependent;
        [MinValue (0), MaxValue (100), Description (
         "This property is an 8-bit unsigned integer representing "
         "a percentage from 0 to 100. It defines the percentage of "
         "the BufferPool that should be allocated to the referenced "
         "QueuingService. If absolute sizes are desired, this is "
         "accomplished by defining individual BufferPools of the "
         "specified sizes, with QueueAllocation.AllocationPercentages "
         "set to 100."), 
         Units ("Percent") ]
    uint8 AllocationPercentage;
};

// ==================================================================
//    CollectedBufferPool
// ==================================================================
        [Association, Aggregation, Version ("2.6.0"), 
         Description (
         "CIM_CollectedBufferPool is an aggregation association "
         "representing that a Pool may itself be contained "
         "in a 'higher level' Pool.") ]
class CIM_CollectedBufferPool : CIM_MemberOfCollection {
        [Override("Collection"), Aggregate, 
         Description ("The 'higher level' or parent Pool.") ]
   CIM_BufferPool REF Collection;
        [Override("Member"),
         Description ("The 'collected' Pool.") ]
   CIM_BufferPool REF Member;
};

// ===================================================================
//     PacketSchedulingService
// ===================================================================
        [Version ("2.7.0"), Description (
         "This class represents the scheduling service, which is a "
         "process that determines whether a queued packet should be "
         "removed from a queue and sent to an output interface. Note "
         "that output interfaces can be physical network interfaces or "
         "interfaces to components internal to systems, such as "
         "crossbars or backplanes. In either case, if multiple queues "
         "are involved, schedulers are used to provide access to the "
         "interface. Each instance of a PacketSchedulingService "
         "describes a scheduler from the perspective of the queues "
         "that the scheduler is servicing. One can describe that "
         "different schedulers support different queues, or that "
         "a scheduler supports several queues. \n"
         "\n"
         "PacketSchedulingService is modeled as a ConditioningService "
         "so that it can be aggregated into a QoSService (using the "
         "QoSConditioningSubService association) to indicate that its "
         "functionality underlies that QoS service. It participates in "
         "the NextService association to identify a subsequent "
         "ConditioningService, if any, that acts on traffic after it "
         "has been processed by the scheduler.") ]
class CIM_PacketSchedulingService : CIM_ConditioningService {
        [Description (
         "This property is an enumerated 16-bit unsigned integer, and "
         "defines the type of scheduler. Values are: \n"
         "\n"
         "   1:  Other \n"
         "   2:  FIFO \n"
         "   3:  Priority \n"
         "   4:  Allocation \n"
         "   5:  Bounded Priority \n"
         "   6:  Weighted Round Robin Packet \n"
         "If no value is specified, 2 (\"FIFO\") should be assumed."), 
         ValueMap {"1", "2", "3", "4", "5", "6"},
         Values {"Other", "FIFO", "Priority", "Allocation", 
          "Bounded Priority", "Weighted Round Robin Packet"}, 
         ModelCorrespondence {
          "CIM_PacketSchedulingService.OtherSchedulerType"} ]
    uint16 SchedulerType;
        [Description (
         "This string property is used in conjunction with "
         "the SchedulerType property. When the value of "
         "SchedulerType is 1 (i.e., \"Other\"), then the type of "
         "scheduler to be used is defined in this attribute."),
        ModelCorrespondence {
         "CIM_ PacketSchedulingService.SchedulerType"} ]
    string OtherSchedulerType;
};

// ==================================================================
//    NextScheduler
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), Description (
         "This association is a subclass of NextService, and defines "
         "a predecessor-successor relationship between Packet"
         "SchedulingServices.  In a hierarchical queuing "
         "configuration (where a second scheduler treats the output of "
         "a first scheduler as a single, aggregated input), the two "
         "schedulers are related via the NextScheduler association.") ]
class CIM_NextScheduler : CIM_NextService {
        [Override ("PrecedingService"), Description (
         "The PacketSchedulingService whose output is treated as a "
         "single, aggregated input by the FollowingService scheduler. "
         "The [0..n] cardinality indicates that a single "
         "FollowingService scheduler may bring together the aggregated "
         "outputs of multiple prior schedulers.") ]
    CIM_PacketSchedulingService REF PrecedingService;
        [Override ("FollowingService"), Key, Max (1), Description (
         "A scheduler that includes among its inputs the aggregated "
         "outputs of one or more PrecedingService schedulers.") ]
    CIM_PacketSchedulingService REF FollowingService;
};

// ==================================================================
//    SchedulerUsed
// ==================================================================
        [Association, Deprecated {"CIM_QueueToSchedule",
          "CIM_SchedulingServiceToSchedule"}, 
         Version ("2.7.0"), Description (
         "In order to remove queued packets, a process or Service "
         "(identified as a PacketSchedulingService) runs.  This "
         "association describes the Dependency of the queue and its "
         "QueuingService on a SchedulingService, which empties it. \n"
         "\n"
         "The association is deprecated in lieu of associating Queuing"
         "Services to SchedulingElements, and SchedulingElements into "
         "SchedulingServices. The latter approach is very flexible "
         "regarding the implementations that can be modeled, and removes "
         "the need to track individual traffic streams using an "
         "artificial model property, TrafficClass.") ]
class CIM_SchedulerUsed : CIM_ServiceServiceDependency {
        [Override ("Antecedent"), 
         Deprecated {"CIM_QueueToSchedule.Queue"}, 
         Min (1), Max (1), Description (
         "The PacketSchedulingService which empties the Queuing"
         "Service's queue.") ]
    CIM_PacketSchedulingService REF Antecedent;
        [Override ("Dependent"), 
         Deprecated {"CIM_QueueToSchedule.SchedElement"}, 
         Description (
         "The queue and its QueuingService from which packets "
         "are emptied.") ]
    CIM_QueuingService REF Dependent;
};

// ===================================================================
//     PrioritySchedulingService
// ===================================================================
        [Version ("2.6.0"), Description (
         "This class represents a simple priority scheduler, which is "
         "a process that schedules arriving packets into different "
         "priority queues. "
         "\n\n"
         "This is modeled as a specialization of the "
         "PacketSchedulingService, which is a sibling service to "
         "ConditioningService. Both PacketSchedulingService and "
         "ConditioningService instances are derived from a "
         "common root, ForwardingService.") ]
class CIM_PrioritySchedulingService : CIM_PacketSchedulingService {
        [Description (
         "This property is a 16-bit unsigned integer that defines "
         "the priority level of the queue that is being scheduled.") ]
    uint16 Priority;
};

// ===================================================================
//     PriorityBandwidthSchedulingService
// ===================================================================
        [Version ("2.6.0"), Description (
         "This class represents a priority scheduler that is extended "
         "to specify an upper limit on the bandwidth that can be sent "
         "on the priority queue, over some time interval."
         "\n\n"
         "This is modeled as a specialization of the "
         "PacketSchedulingService, which is a sibling service to "
         "ConditioningService. Both PacketSchedulingService and "
         "ConditioningService instances are derived from a "
         "common root, ForwardingService.") ]
class CIM_PriorityBndwidthSchedulingService : 
 CIM_PrioritySchedulingService {
        [Description (
         "This property is a 32-bit unsigned integer, and defines "
         "the number of bytes that can be delivered from a queue each "
         "cycle."),
         Units ("Bytes") ]
    uint32 BandwidthAllocation;
        [Description (
         "This is a boolean property which, if TRUE, signifies that a "
         "temporary or short-term allocation of additional bandwidth "
         "in addition to the amount of bandwidth allocated through the "
         "BandwidthAllocation attribute is allowed.") ]
    boolean BurstsAllowed;
        [Description (
         "This property is a 32-bit unsigned integer, and specifies "
         "the amount of temporary or short-term bandwidth that can be "
         "allocated beyond the amount of bandwidth allocated through "
         "the BandwidthAllocation attribute. If the maximum actual "
         "bandwidth allocation were to be measured, it would be the "
         "sum of the BurstAllocation and the BandwidthAllocation "
         "properties."),
         Units ("Bytes") ]
    uint32 BurstAllocation;
};

// ===================================================================
//     BandwidthSchedulingService
// ===================================================================
        [Version ("2.6.0"), Description (
         "This class represents a bandwidth scheduler, which is a "
         "process that reserves a portion of the bandwidth of a link "
         "for each selected traffic type. This is modeled as a "
         "specialization of the PacketSchedulingService, which is a "
         "sibling service to ConditioningService. Both "
         "PacketSchedulingService and ConditioningService instances "
         "are derived from a common root, ForwardingService.") ]
class CIM_BandwidthSchedulingService : CIM_PacketSchedulingService {
        [Description (
         "This property is a 32-bit unsigned integer, and defines "
         "the number of bytes that can be delivered from a queue "
         "each cycle."),
         Units ("Bytes") ]
    uint32 BandwidthAllocation;
        [Description (
         "This is a boolean attribute which, if TRUE, signifies that "
         "a temporary or short-term allocation of additional bandwidth "
         "in addition to the amount of bandwidth allocated through the "
         "BandwidthAllocation attribute is allowed.") ]
    boolean BurstsAllowed;
        [Description (
         "This property is a 32-bit unsigned integer, and specifies "
         "the amount of temporary or short-term bandwidth that can be "
         "allocated beyond the amount of bandwidth allocated through "
         "the BandwidthAllocation attribute. If the maximum actual "
         "bandwidth allocation were to be measured, it would be the "
         "sum of the BurstAllocation and the BandwidthAllocation "
         "properties."),
         Units ("Bytes") ]
    uint32 BurstAllocation;
        [Description (
         "This is a boolean attribute that, if TRUE, enables unused "
         "bandwidth from the associated queue to be allocated to "
         "queues that need additional resources.") ]
    boolean CanShare;
        [Description (
         "This is a boolean attribute that, if TRUE, prevents the "
         "scheduler from bursting traffic from the queue to which this "
         "instance of the scheduler is associated (via SchedulerUsed). "
         "When TRUE, this attribute also prevents bandwidth from other "
         "idle queues to be consumed by the associated queue, thereby "
         "preventing resource allocations above the assigned "
         "bandwidth.") ]
    boolean WorkConserving;
};

// ===================================================================
//     RoundRobinPacketSchedulingService
// ===================================================================
        [Version ("2.6.0"), Description (
         "This class represents a round robin packet scheduler, which "
         "is a process that guarantees that bandwidth will be "
         "allocated fairly at the packet level. With this type of "
         "scheduler, each associated queue is entitled to equal access "
         "to the output interface. This is modeled as a specialization "
         "of the PacketSchedulingService, which is a sibling service "
         "to ConditioningService. Both PacketSchedulingService and "
         "ConditioningService are derived from a common root, "
         "ForwardingService.") ]
class CIM_RoundRobinPacketSchedulingService : 
 CIM_PacketSchedulingService {
};

// ===================================================================
//     WeightedRoundRobinPacketSchedulingService
// ===================================================================
        [Version ("2.6.0"), Description (
         "This class represents a weighted round robin packet "
         "scheduler, which is the same as a fair packet scheduler "
         "except that a per-traffic stream multiplier is applied to "
         "each stream. This is modeled as a specialization of the "
         "PacketSchedulingService, which is a sibling service to "
         "ConditioningService. Both PacketSchedulingService and "
         "ConditioningService are derived from a common root, "
         "ForwardingService.") ]
class CIM_WeightedRoundRobinPacketSchedulingService : 
  CIM_PacketSchedulingService {
        [Description (
         "This property is a real 32-bit number, which is used to "
         "define the weighting factor that will be used to offer some "
         "queues a higher probability of being serviced than other "
         "queues. This property represents this probability."),
         MinValue (0), MaxValue (100) ]
    real32 WeightingFactor;
        [Description (
         "This property is a 16-bit unsigned integer, which specifies "
         "a tie breaker in the event that two or more queues achieve "
         "an equal weighting. While this condition may not occur in "
         "some implementations of a weighted round robin scheduler, "
         "there are many implementations that require a priority to "
         "resolve this condition. However, in instances where this "
         "behavior is not necessary or is undesirable, this property "
         "may be left unspecified.") ]
    uint16 Priority;
};

// ==================================================================
//    NonWorkConservingSchedulingService
// ==================================================================
        [Experimental, Version ("2.7.0"), Description (
         "A type of packet scheduler, that is capable of "
         "operating in a non-work conserving manner. This class "
         "does not add any properties beyond those it inherits "
         "from PacketSchedulingService.  It does, however, "
         "participate in one additional association, "
         "FailNextScheduler.") ]
class CIM_NonWorkConservingSchedulingService : 
 CIM_PacketSchedulingService {
};

// ==================================================================
//    FailNextScheduler
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This association is a subclass of NextScheduler, and defines "
         "a predecessor-successor relationship between a NonWork"
         "ConservingSchedulingService and another PacketScheduling"
         "Service. It indicates that the NonWorkConserving scheduler "
         "may pass up a scheduling opportunity (thereby behaving "
         "in a non-work conserving manner), and make the resulting "
         "bandwidth available to the FollowingService scheduler.") ]
class CIM_FailNextScheduler : CIM_NextScheduler {
        [Override ("PrecedingService"), Description (
         "The NonWorkConservingSchedulingService whose excess "
         "bandwidth is made available to the scheduler identified "
         "by the FollowingService reference. The [0..n] cardinality "
         "indicates that a single FollowingService scheduler may "
         "have the opportunity to use the unused bandwidth of multiple "
         "prior non-work-conserving schedulers.") ]
    CIM_NonWorkConservingSchedulingService REF PrecedingService;
        [Override ("FollowingService"), Description (
         "A scheduler that may use the bandwidth available from "
         "the non-work conserving scheduler.") ]
    CIM_PacketSchedulingService REF FollowingService;
};

// ==================================================================
//    SchedulingElement
// ==================================================================
        [Experimental, Abstract, Version ("2.7.0"), Description (
         "SchedulingElement represents the configuration "
         "information that a PacketSchedulingService has for one "
         "of the elements that it is scheduling. The scheduled "
         "element is either a QueuingService or another Packet"
         "SchedulingService. \n"
         "\n"
         "Among the subclasses of this class, some are defined in "
         "such a way that all of their instances are work conserving. "
         "Other subclasses, however, have instances that either "
         "are or are not work conserving. In this class, the boolean "
         "property WorkConserving indicates whether an instance is or "
         "is not work conserving. Note that WorkConserving is "
         "restricted to TRUE in the subclasses that are inherently "
         "work conserving, since instances of these classes cannot "
         "be anything else.") ]
class CIM_SchedulingElement : CIM_ManagedElement {
        [Key]
    string InstanceID;

        [Write, Description (
         "A boolean property indicating whether the "
         "PacketSchedulingService tied to this instance (by the "
         "ElementInSchedulingService aggregation) is treating the"
         "queue/input tied to this instance, in a work-conserving "
         "manner. The queue/input is indicated by either the "
         "QueueToSchedule or SchedulingServiceToSchedule "
         "association. Note that this property is writeable, "
         "indicating that an administrator can change the behavior "
         "of the SchedulingElement - but only for those elements "
         "that can operate in a non-work conserving mode.") ]
    boolean WorkConserving;
};

// ==================================================================
//    AllocationSchedulingElement
// ==================================================================
        [Experimental, Version ("2.7.0"), Description (
         "This class is a subclass of the abstract class "
         "SchedulingElement. It introduces five new properties to "
         "support bandwidth-based scheduling. As is the case with "
         "all subclasses of SchedulingElement, the input associated "
         "with an instance of AllocationSchedulingElement is of "
         "one of two types: either a queue, or another scheduler.") ]
class CIM_AllocationSchedulingElement : CIM_SchedulingElement {
	[Description (
         "A 16-bit unsigned integer enumeration that identifies "
         "the units in which the BandwidthAllocation and "
         "BurstAllocation properties are expressed. The following "
         "values are defined: \n"
         " - Bytes(1) \n"
         " - Packets(2) \n"
         " - Cells(3) (fixed-size, for example, ATM) \n"
         "If no value is specified, 1 (\"Bytes\") should be assumed."),
         ValueMap {"1", "2", "3"},
         Values {"Bytes", "Packets", "Cells"} ]
    uint16 AllocationUnits;
        [Description (
         "A 32-bit bit unsigned integer defining the number "
         "of 'units' per second that should be allocated to the "
         "associated input. 'Units' are identified by the "
         "AllocationUnits property."), 
         ModelCorrespondence {
          "CIM_AllocationSchedulingElement.AllocationUnits"} ]
    uint32 BandwidthAllocation;
        [Description (
         "A 32-bit bit unsigned integer specifying the amount "
         "of temporary or short-term bandwidth (in 'units' per "
         "second) that can be allocated to an input, beyond the "
         "amount of bandwidth allocated through the "
         "BandwidthAllocation property. If the maximum actual "
         "bandwidth allocation for the input were to be "
         "measured, it would be the sum of the BurstAllocation and "
         "the BandwidthAllocation properties. 'Units' are "
         "identified by the AllocationUnits property."), 
         ModelCorrespondence {
          "CIM_AllocationSchedulingElement.AllocationUnits"} ]
    uint32 BurstAllocation;
        [Description (
         "A boolean property that, if TRUE, enables unused "
         "bandwidth from the associated input to be allocated "
         "to other inputs serviced by the Scheduler.") ]
    boolean CanShare;
        [Description (
         "A boolean property that, if TRUE, indicates that the "
         "behavior of the scheduler relative to this input can be "
         "altered by changing the value of the inherited property, "
         "WorkConserving.") ]
    boolean WorkFlexible;
};

// ==================================================================
//    WRRSchedulingElement
// ==================================================================
        [Experimental, Version ("2.7.0"), Description (
         "This class is a subclass of the abstract class "
         "SchedulingElement. It introduces a new property, "
         "WeightingFactor, to give some inputs a higher probability "
         "of being serviced than other inputs. It also introduces "
         "a Priority property, to serve as a tiebreaker to be used "
         "when inputs have equal weighting factors. As is the case "
         "with all subclasses of SchedulingElement, the input "
         "associated with an instance of WRRSchedulingElement is of "
         "one of two types: either a queue, or another scheduler. "
         "Because scheduling of this type is always work conserving, "
         "the inherited boolean property, WorkConserving, is restricted "
         "to TRUE in this class.") ]
class CIM_WRRSchedulingElement : CIM_SchedulingElement {
	[Override ("WorkConserving"), ValueMap {"TRUE"} ]
     boolean WorkConserving = TRUE;
        [Description (
         "A 32-bit bit unsigned integer defining the weighting "
         "factor that offers some inputs a higher probability of "
         "being serviced than other inputs. The property's minimum "
         "value is 0, its maximum value is 100000, and its Units "
         "are thousandths."),
         MinValue (0), MaxValue (100000), Units ("Thousandths") ]
    uint32 WeightingFactor;
        [Description (
         "A 16-bit bit unsigned integer which serves as a "
         "tiebreaker, in the event that two or more inputs have "
         "equal weights. A larger value represents a higher "
         "priority. While this condition may not occur in some "
         "implementations of a weighted round robin scheduler, "
         "many implementations require a priority to resolve "
         "an equal-weight condition. In the instances where "
         "this behavior is not necessary or is undesirable, the "
         "property may be left unspecified.") ]
    uint16 Priority;
};

// ==================================================================
//    PrioritySchedulingElement
// ==================================================================
        [Experimental, Version ("2.7.0"), Description (
         "This class is a subclass of the abstract class "
         "SchedulingElement. It indicates that a scheduler is "
         "taking packets from a set of inputs using the priority "
         "scheduling discipline. As is the case with all "
         "subclasses of SchedulingElement, the input associated "
         "with an instance of PrioritySchedulingElement is of one "
         "of two types: either a queue, or another scheduler. The "
         "Priority property represents the priority for an input, "
         "relative to the priorities of all the other inputs to "
         "which the scheduler (that aggregates this "
         "PrioritySchedulingElement) is associated. Inputs to which "
         "the scheduler is related via other scheduling disciplines "
         "do not figure in this prioritization. Because scheduling "
         "of this type is always work conserving, the inherited "
         "boolean property, WorkConserving, is restricted to TRUE "
         "in this class.") ]
class CIM_PrioritySchedulingElement : CIM_SchedulingElement {
	[Override ("WorkConserving"), ValueMap {"TRUE"} ]
     boolean WorkConserving = TRUE;
        [Description (
         "A 16-bit unsigned integer indicating the priority level "
         "of this SchedulingElement's input, relative to the other "
         "inputs serviced by the SchedulingElement's aggregating "
         "PacketSchedulingService.  A larger value represents a "
         "higher priority.") ]
    uint16 Priority;
};

// ==================================================================
//    BoundedPrioritySchedulingElement
// ==================================================================
        [Experimental, Version ("2.7.0"), Description (
         "This class is a subclass of the class PriorityScheduling"
         "Element, which is itself derived from the abstract class "
         "SchedulingElement. As is the case with all subclasses of "
         "SchedulingElement, the input associated with an instance "
         "of BoundedPrioritySchedulingElement is of one of two types: "
         "either a queue, or another scheduler. BoundedPriority"
         "SchedulingElement adds an upper bound (BandwidthBound in "
         "kilobits per second) on how much traffic can be handled "
         "from an input. This data is specific to that one input. It "
         "is needed when bounded strict priority scheduling is "
         "performed. Note that this class inherits from its "
         "superclass the restriction of the inherited boolean "
         "property WorkConserving to TRUE.") ]
class CIM_BoundedPrioritySchedulingElement : 
 CIM_PrioritySchedulingElement {
        [Override ("WorkConserving"), ValueMap {"TRUE"} ]
     boolean WorkConserving = TRUE;
        [Description (
         "A 32-bit unsigned integer that defines the upper limit "
         "on the amount of traffic that can be handled from the "
         "input (through this SchedulingElement). This is not a "
         "shaped upper bound, since bursts can occur. It is a "
         "strict bound, limiting the impact of the input.  Units "
         "are kilobits per second."), 
         Units ("KiloBits per Second") ]
    uint32 BandwidthBound;
};

// ==================================================================
//    QueueToSchedule
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This is a top-level association, representing the "
         "relationship between a queue (QueuingService) and a "
         "SchedulingElement. The SchedulingElement, in turn, "
         "represents the information in a packet scheduling service "
         "that is specific to this queue, such as relative priority "
         "or allocated bandwidth. \n"
         "\n"
         "Although it cannot be expressed formally with the "
         "association cardinalities, there is an additional constraint "
         "on participation in this association. A particular instance "
         "of (a subclass of) SchedulingElement always participates "
         "either in exactly one instance of this association, or in "
         "exactly one instance of the association "
         "SchedulingServiceToSchedule.") ]
class CIM_QueueToSchedule {
        [Key, Max (1), Description (
         "The queue and its QueuingService from which packets "
         "are emptied.") ]
    CIM_QueuingService REF Queue;
        [Key, Description (
         "The SchedulingElement for the input queue.") ]
    CIM_SchedulingElement REF SchedElement;
};

// ==================================================================
//    SchedulingServiceToSchedule
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Description (
         "This is a top-level association, representing the "
         "relationship between a scheduler (PacketSchedulingService) "
         "and a SchedulingElement, in a configuration involving "
         "cascaded schedulers. The SchedulingElement, in turn, "
         "represents the information in a packet scheduling service "
         "that is specific to this scheduler, such as relative "
         "priority or allocated bandwidth. \n"
         "\n"
         "Although it cannot be expressed formally with the "
         "association cardinalities, there is an additional constraint "
         "on participation in this association. A particular instance "
         "of (a subclass of) SchedulingElement always participates "
         "either in exactly one instance of this association, or in "
         "exactly one instance of the association QueueToSchedule.") ]
class CIM_SchedulingServiceToSchedule {
        [Key, Max (1), Description (
         "The scheduler being cascaded.") ]
    CIM_PacketSchedulingService REF SchedService;
        [Key, Description (
         "A SchedulingElement in the subsequent scheduler.") ]
    CIM_SchedulingElement REF SchedElement;
};

// ==================================================================
//    ElementInSchedulingService
// ==================================================================
        [Association, Experimental, Version ("2.7.0"), 
         Aggregation, Composition, Description (
         "This association represents the relationship between a "
         "PacketSchedulingService and the set of SchedulingElements "
         "that tie it to its inputs (either QueuingServices or other "
         "PacketSchedulingServices).") ]
class CIM_ElementInSchedulingService : CIM_Component {
        [Override ("GroupComponent"), Aggregate, Max (1), 
         Description (
         "The scheduler aggregating the SchedulingElement. A "
         "SchedulingElement can be associated with at most one "
         "SchedulingService.") ]
    CIM_PacketSchedulingService REF GroupComponent;
        [Override ("PartComponent"), Min (1), Description (
         "A SchedulingElement that ties either a queue or another "
         "scheduler to the referenced PacketSchedulingService. Every "
         "PacketSchedulingService MUST have at least one Scheduling"
         "Element/input.") ]
    CIM_SchedulingElement REF PartComponent;
};


// ===================================================================
//     OSPF
// ===================================================================

// ==================================================================== 
// OSPFProtocolEndpointBase 
// ==================================================================== 
   [Experimental, Version ("2.7.0"), Description ( 
     "Base class for OSPF protocol endpoints, defining several" 
     "general properties.")] 
class CIM_OSPFProtocolEndpointBase : CIM_ProtocolEndpoint { 
      [Override ("EnabledStatus"), Description ( 
        "The operational status of the interface, see ospfIfAdminStat " 
        "in RFC 1850. It is an integer enumeration indicating " 
        "whether the element is currently in an enabled " 
        "(value = 1), disabled (value = 2) or an unknown (0) " 
        "state. If this property does not apply, the value " 
        "3 (\"Not Applicable\"), should be used."), 
       ValueMap{"0", "1", "2", "3" }, 
       Values {"Unknown", "Enabled", "Disabled","Not Applicable"}, 
       MappingStrings {"MIB.IETF|RFC1850-MIB.ospfIfAdminStat"} ] 
    uint16 EnabledStatus; 

      [Description ( 
        "Estimated delay, in seconds that it takes to transmit a " 
        "Link State Update Packet over this interface, see C.3 in " 
        "RFC 2328."), 
       Units("Seconds"), 
       MappingStrings {"MIB.IETF|RFC1850-MIB.ospfIfTransitDelay"} ] 
    uint16 TransitDelay; 

      [Description ( 
        "The number of seconds between LSA (Link State " 
        "Advertisement) retransmissions, see C.3 in RFC 2328."), 
       Units("Seconds"), 
       MappingStrings {"MIB.IETF|RFC1850-MIB.ospfIfRetransInterval"} ] 
    uint16 RetransmitInterval; 
      
      [Required, Description ( 
        "Identifies the authentication procedure to be used on the " 
        "attached network, see C.3 in RFC 2328."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfAuthType"}, 
       ValueMap{"1","2","3","4"}, 
       Values{"Other" "Null authentication","Simple password", 
        "Cryptographic authentication"} ] 
    uint16 AuthType; 

      [Description ( 
        "Specifies the authentication procedure if the value, \"Other\" (1) " 
        "is set for AuthType."), 
       ModelCorrespondence {"CIM_OSPFProtocolEndpoint.AuthType"} ] 
    string OtherAuthType; 

      [Description ( 
        "This key is used during the authentication procedure to " 
        "verify OSPF protocol packets, see C.3 RFC 2328. It is used " 
        "in the \"Simple password\" and in the \"Cryptographic " 
        "authentication\" case too."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfAuthKey"} ] 
    string AuthKey; 
}; 

// ==================================================================== 
// OSPFProtocolEndpoint 
// ==================================================================== 
   [Experimental, Version ("2.7.0"), Description ( 
     "This class represents the OSPF configuration of an interface " 
     "running OSPF. The instance of this class should be connected to " 
     "an IPProtocolEndpoint instance via a BindsTo association. The " 
     "IPProtocolEndpoint instance is the Antecedent and the " 
     "OSPFProtocolEndpoint instance is the Dependent in the BindsTo " 
     "association.") ] 
class CIM_OSPFProtocolEndpoint : CIM_OSPFProtocolEndpointBase { 
      [Description ( 
        "When two routers attached to a network both attempt to " 
        "become the Designated Router, the one with the highest (i.e. " 
        "largest) Priority takes precedence, see C.3 in RFC 2328. " 
        "Only routers with greater than zero priority are eligible to " 
        "become Designated Router."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfRtrPriority"} ] 
    uint8 Priority; 

      [Description ( 
        "If a neighbouring router on an NBMA (NonBroadcast " 
        "MultiAccess) link becomes inactive, it is still necessary " 
        "to send Hello Packets to the dead neighbor. These packets " 
        "will be sent at the reduced rate, which should be much " 
        "larger than HelloInterval, see C.5 in RFC 2328."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfPollInterval"}, 
       Units("Seconds") ] 
    uint16 PollInterval; 

      [Description ( 
        "The cost of the routes through this OSPF endpoint, " 
        "see C.3 in RFC 2328."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfMetricStatus"} ] 
    uint16 Cost; 

      [Description ( 
        "Indicates whether the interface connects to an on-demand " 
        "circuit, see RFC 1793." ), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfDemand"} ] 
    boolean IfDemand; 

}; 
  

// ==================================================================== 
// OSPFVirtualInterface 
// ==================================================================== 
   [Experimental, Version ("2.7.0"), Description ( 
     "This class represent an OSPF protocol endpoint on a virtual " 
     "link. The definition of a virtual link from RFC2328, is " 
     "'Virtual links can be configured between any two backbone " 
     "routers that have an interface to a common non-backbone area. " 
     "Virtual links belong to the backbone. The protocol treats two " 
     "routers joined by a virtual link as if they were connected by an " 
     "unnumbered point-to-point backbone network.'") ] 
class CIM_OSPFVirtualInterface : CIM_OSPFProtocolEndpointBase { 
}; 
  

// ==================================================================== 
// RoutingProtocolDomain 
// ==================================================================== 
    [Experimental, Version ("2.7.0"), Description ( 
      "A Routing Protocol Domain is a collection of routers which " 
      "coordinate their routing knowledge using a single [instance of " 
      "a] routing protocol. This class represents the " 
      "area/layer/level/zone like property of a routing protocol, " 
      "such as an OSPF (area), IS-IS (layer) or PNNI (level). It does not " 
      "represent the entire routing domain in every case. For example " 
      "for OSPF, it represents an Area, but in the case of RIP, it " 
      "represents the whole RIP domain. Any common attributes of these " 
      "routing domains can be placed in this class in future " 
      "versions of CIM.") ] 
class CIM_RoutingProtocolDomain : CIM_AdminDomain { 
}; 
  

// ==================================================================== 
// OSPFArea 
// ==================================================================== 
    [Experimental, Version ("2.7.0"), Description (
      "This class represents an " 
      "OSPF area. The definition of an OSPF area from RFC2328, is " 
      "'OSPF allows sets of networks to be grouped together. " 
      "Such a grouping is called an area. The topology of an area is " 
      "hidden from the rest of the Autonomous System. This information " 
      "hiding enables a significant reduction in routing traffic. Also, " 
      "routing within the area is determined only by the area's own " 
      "topology, lending the area protection from bad routing data.' " 
      "This class has a 'Type' propery, which distinguishes between the " 
      "different area types. This approach was chosen, because it " 
      "provides a simpler way to indicate the type of an area, " 
      "and additional subclassing is not needed at this time.") ] 
class CIM_OSPFArea : CIM_RoutingProtocolDomain { 
      [Description ( 
        "The area ID of this OSPF area, see C.2 in RFC 2328."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfAreaId"} ] 
    uint32 AreaID; 

      [Required, Description ( 
        "The type of the OSPF area."), 
       ValueMap{"2","3","4"}, 
       Values{"Plain","Stub","NSSA"} ] 
    uint16 AreaType; 

      [Description ( 
        "When the number of non-default AS-external-LSAs in a " 
        "router's link-state database reaches this limit, the router " 
        "enters OverflowState, see 2.1 in RFC 1765."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfExtLsdbLimit"} ] 
    uint32 ExtLsdbLimit; 
}; 
  

// ==================================================================== 
// OSPFService 
// ==================================================================== 
    [Experimental, Version ("2.7.0"), Description ( 
      "This class is used to represent the basic operation of OSPF. " 
      "It is derived from the RouteCalculationService, the superclass " 
      "of all routing protocols.") ] 
class CIM_OSPFService : CIM_RouteCalculationService { 
      [Description ( 
        "This attribute indicates whether this router is running " 
        "MOSPF (multicast enhancements to OSPF) or not, " 
        "see B.1 in RFC 1584. This attribute only can be true, " 
        "when the SupportMOSPF property in OSPFService " 
        "Capabilities is also true. If SupportMOSPF is false, " 
        "then this property has no meaning."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfMulticastExtensions"}, 
       ModelCorrespondence {"CIM_OSPFServiceCapabillities.SupportMOSPF"} ]
    boolean RunningMOSPF; 

      [Description ( 
        "This attribute indicates whether this router will forward " 
        "multicast datagrams between OSPF areas or not, see B.1 in " 
        "RFC 1584."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfMulticastExtensions"} ] 
    boolean IsInterAreaMulticastForwader; 

      [Description ( 
        "This attribute indicates whether this router will forward " 
        "multicast datagrams between Autonomous Systems or not, " 
        "see B.1 in RFC 1584."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfMulticastExtensions"} ] 
    boolean IsInterAsMulticastForwader; 

      [Description ( 
        "The number of seconds that, after entering OverflowState, " 
        "a router will attempt to leave OverflowState. When set to 0, " 
        "the router will not leave OverflowState until restarted, " 
        "see 2.1 in RFC 1765."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfExitOverflowInterval"}, 
       Units("Seconds") ] 
    uint32 ExitOverflowInterval; 
      
      [Description (
        "Controls the preference rules used in choosing among "
	  "multiple AS-external-LSAs advertising the same destination. "
	  "When set to TRUE, the preference rules remain those "
	  "specified by RFC 1583. When set to FALSE, the "
	  "preference rules are those stated in RFC 2328, which prevent "
	  "routing loops when AS-external-LSAs for the same destination "
	  "have been originated from different areas. See C.1 in "
	  "RFC2328.") ]
    boolean RFC1583Compatibility;
}; 

// ================================================================== 
// OSPFServiceCapabilities 
// ================================================================== 
   [Experimental, Description ( 
     "The OSPFServiceCapabilities class represents the capabilities " 
     " of an OSPF service.") ] 
class CIM_OSPFServiceCapabilities : CIM_Capabilities { 
      [Description ( 
        "This attribute indicates whether this router supports NSSA " 
        "(\"not-so-stubby\") areas or not, see RFC 1587.") ] 
    boolean SupportNSSA; 

      [Description ( 
        "This attribute indicates whether this router supports " 
        "on-demand circuits or not, see RFC 1793."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfDemandExtensions"} ] 
    boolean SupportOndemand; 

      [Description ( 
        "This attribute indicates whether this router supports " 
        "MOSPF (multicast enhancements to OSPF) or not, " 
        "see B.1 in RFC 1584."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfMulticastExtensions"} ] 
    boolean SupportMOSPF; 

}; 

// ==================================================================== 
// OSPFAreaConfiguration 
// ==================================================================== 
   [Experimental, Version ("2.7.0"), Description ( 
     "  Each OSPF router has an association to one or more OSPF areas. " 
     "Into these areas, a router advertises summaries filtered by " 
     "specific address ranges. This would natively be modeled as a ternary " 
     "association (router/OSPFService to OSPFArea to RangeOfIPAddresses), " 
     "which is problematic in some implementations. To get around this " 
     "issue, the OSPFAreaConfiguration class is defined to act as a " 
     "focal point to bring together the router (indicated as a " 
     "ComputerSystem with an instance of OSPFService, associated to the " 
     "AreaConfiguration using OSPFServiceConfiguration), the area " 
     "(indicated as an OSPFArea, associated to the AreaConfiguration " 
     "using AreaOfConfiguration) and the address ranges for advertising " 
     "(indicated as instances of RangeOfIPAddresses, associated to the "
     "AreaConfiguration using RangesOfConfiguration). There would be an "
     "instance of OSPFAreaConfiguration for each connected area of a " 
     "router/OSPFService. \n" 
     "When network administrators want to control the " 
     "advertisements of OSPF routers by filters, they first define " 
     "the relevant ranges. In order for a router to handle a range, " 
     "an instance of RangeOfIPAddresses MUST be associated to the " 
     "relevant OSPFAreaConfiguration (using the relationship, RangesOf" 
     "Configuration). The association between the range and " 
     "area configuration contains a property defining the handling " 
     "(EnableAdvertise) to allow or disallow advertisements in the " 
     "range. \n" 
     "Notes: " 
     "- Because RangeOfIPAddresses is scoped by a System (via the " 
     "HostedCollection association),  an instance of RangeOfIPAddresses " 
     "would be associated to an OSPFArea, satisfying this semantic." 
     "- This class is inherited from LogicalElement, because " 
     "a suitable subclass 'lower' in the inheritance " 
     "hiearchy does not exist.") ] 
class CIM_OSPFAreaConfiguration : CIM_LogicalElement { 
      [Key, Description ( 
        "InstanceID opaquely identifies a unique instance of " 
        "OSPFAreaConfiguration. The InstanceID must be unique " 
        "within a namespace. In order to ensure this, the " 
        "value of InstanceID SHOULD be constructed in the " 
        "following manner:  \n" 
        "<Vendor ID><OSPFService ID><Area Configuration ID> \n" 
        "where: \n" 
        "  <Vendor ID> MUST include a copyrighted, trademarked " 
        "or otherwise unique name that is owned by the business " 
        "entity (or a registered ID that is assigned to the " 
        "business entity) that is defining the InstanceID. " 
        "(This is similar to the <Schema Name>_<Class Name> " 
        "structure of Schema class names.) The purpose of " 
        "<Vendor ID> is to ensure that <ID> is truly unique " 
        "across multiple vendor implementations. For instances defined " 
        "by the DMTF, <Vendor ID> is 'CIM'.\n" 
        "   <OSPFService ID> and <Area Configuration ID> MUST " 
        "specify vendor-unique identifiers for the OSPFService" 
        "and AreaConfiguration.") ] 
    string InstanceID; 

      [Description ( 
       "This attribute contains the value of the default route that " 
       "this router advertises into a stub area, " 
       "see C.2 RFC 2328."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfStubMetric"} ] 
    uint32 StubDefaultCost; 
      
      [Description (
        "This attribute contains the type of metric advertised as a "
        "default route into a stub area, see 3. in RFC 1850."),
       MappingStrings {"MIB.IETF|RFC1850-MIB.ospfStubMetricType"},
       ValueMap {"2", "3", "4"},
       Values {"OSPF Metric", "Comparable Cost", "NonComparable"} ]
    uint16 StubMetricType;
}; 
  

// ==================================================================== 
// OSPFLink 
// ==================================================================== 
   [Experimental, Version ("2.7.0"), Description ( 
     "This class is used to represent a OSPF link between two or " 
     "more OSPF protocol endpoints.") ] 
class CIM_OSPFLink : CIM_CollectionOfMSEs { 
      [Override("CollectionID"), Key, Description ( 
        "The CollectionID property uniquely identifies an " 
        "OSPF link.") ] 
    string CollectionID; 

      [Required, Description ( 
        "The type of the link, see 1.2 in RFC 2328."), 
       ValueMap{"2", "3", "4", "5"}, 
       Values{"Point-To-Point", "Point-To-Multipoint", "Broadcast", 
        "NBMA"} ] 
    uint16 LinkType; 

      [Description ( 
        "The time, in seconds, between sending OSPF Hello-packets " 
        "over the interface, see C.3 in RFC 2328." ), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfHelloInterval"}, 
       Units("Seconds") ] 
    uint32 HelloInterval; 

      [Description ( 
        "After ceasing to hear a router's Hello packets, the number " 
        "of seconds before its neighbors declare the router down, " 
        "see C.3 in RFC 2328." ), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfRtrDeadInterval"}, 
       Units("Seconds") ] 
    uint32 RouterDeadInterval; 

      [Required, Description ( 
        "This parameter indicates whether IP multicast datagrams " 
        "should be forwarded over this OSPF link, and if so, how " 
        "the forwarding should be done, see B.2 in RFC 1584."), 
       MappingStrings{"MIB.IETF|RFC1850-MIB.ospfIfMulticastForwarding"}, 
       ValueMap{"2","3","4"}, 
       Values {"Disabled","Data-link Multicast","Data-link Unicast"} ] 
    uint16 MulticastForwarding; 
}; 
  

// ==================================================================== 
// AreaOfConfiguration 
// ==================================================================== 
   [Association, Experimental, Version ("2.7.0"), Description ( 
     "This association connects an area configuration to its area. " 
     "The OSPFAreaConfiguration class is defined to act as a " 
     "focal point to bring together the router (indicated as a " 
     "ComputerSystem with an instance of OSPFService, associated to the " 
     "AreaConfiguration using OSPFServiceConfiguration), the area " 
     "(indicated as an OSPFArea, associated to the AreaConfiguration " 
     "using AreaOfConfiguration) and the address ranges for " 
     "advertising (indicated as instances of RangeOfIPAddresses, "
     "associated to the AreaConfiguration using RangesOfConfiguration). "
     "There is an instance of OSPFAreaConfiguration for each connected " 
     "area of a router/OSPFService.") ] 
class CIM_AreaOfConfiguration : CIM_Dependency { 
      [Override ("Antecedent"), Max (1), Description ( 
        "The OSPF area.") ] 
    CIM_OSPFArea REF Antecedent ; 

      [Override("Dependent"), Description ( 
       "The configuration which is applied to an OSPF area. This " 
       "is the Dependent reference in this association, since it " 
       "depends on the area for any functional significance.") ] 
    CIM_OSPFAreaConfiguration REF Dependent; 
}; 
  

// ==================================================================== 
// OSPFServiceConfiguration 
// ==================================================================== 
   [Association, Experimental, Version ("2.7.0"), Description ( 
    "OSPFServiceConfiguration connects an OSPF service to its area " 
    "configurations. The configurations are defined for the OSPF " 
    "service, and so do not make sense as stand alone objects. " 
    "This is the reason for the Min (1), Max (1) cardinalities on " 
    "OSPFService. They mandate the instantiation of the service " 
    "and of this association for the referenced instance of " 
    "OSPFAreaConfiguration.  The area configuration acts as " 
    "a focal point to bring together the router (indicated as a " 
    "ComputerSystem with an instance of OSPFService, associated to the " 
    "AreaConfiguration using this relationship), the area " 
    "(indicated as an OSPFArea, associated to the AreaConfiguration " 
    "using AreaOfConfiguration) and the address ranges for advertising " 
    "(indicated as instances of RangeOfIPAddresses, associated to the "
    "AreaConfiguration using RangesOfConfiguration). There would be an "
    "instance of OSPFAreaConfiguration for each connected area of a " 
    "router/OSPFService.") ] 
class CIM_OSPFServiceConfiguration : CIM_Dependency { 
      [Override ("Antecedent"), Min (1), Max (1), Description ( 
        "The OSPF service.") ] 
    CIM_OSPFService REF Antecedent ; 

      [Override("Dependent"), Description ( 
        "The area configuration.") ] 
    CIM_OSPFAreaConfiguration REF Dependent; 
}; 
  

// ==================================================================== 
// RangesOfConfiguration 
// ==================================================================== 
   [Association, Experimental, Version ("2.7.0"), Description ( 
     "This association connects address ranges to the OSPF area " 
     "configuration. When network administrators want to control the " 
     "advertisements of OSPF routers by filters, they first define " 
     "the relevant ranges. In order for a router to handle a range, " 
     "an instance of RangeOfIPAddresses MUST be associated to the " 
     "router's OSPFAreaConfiguration, using this relationship. The " 
     "association between the range and area configuration contains " 
     "a property (EnableAdvertise) defining the handling: " 
     "to allow or disallow advertismenets in the range.") ] 
class CIM_RangesOfConfiguration : CIM_Dependency { 
      [Override ("Antecedent"), 
       Description ( 
        "The address range that is in the OSPF area configuration.") ] 
    CIM_RangeOfIPAddresses REF Antecedent; 

      [Override ("Dependent"), 
       Description ( 
        "The OSPF area configuration that contains the range.") ] 
    CIM_OSPFAreaConfiguration REF Dependent; 

      [Description ( 
        "The address range is advertised (TRUE) or not (FALSE), " 
        "see C.2 in RFC 2328.") ] 
    boolean EnableAdvertise; 
}; 

// ==================================================================== 
// RoutingProtocolDomainInAS 
// ==================================================================== 
   [Association, Aggregation, Experimental, Version ("2.7.0"), 
    Description ( 
     "This assocation connects an Autonomous System  to the routing " 
     "domains that it contains.") ] 
class CIM_RoutingProtocolDomainInAS : CIM_ContainedDomain{ 
      [Override ("GroupComponent"), Aggregate, Max (1), 
       Description ("The autonomous system.") ] 
    CIM_AutonomousSystem REF GroupComponent; 

      [Override ("PartComponent"), Description ("The routing domain.") ] 
    CIM_RoutingProtocolDomain REF PartComponent; 
}; 
  

// ==================================================================== 
// EndpointInLink 
// ==================================================================== 
   [Association, Aggregation, Experimental, Version ("2.7.0"), 
    Description ( 
     "This assocation connects an OSPF link to the OSPF protocol " 
     "endpoints that this link contains.") ] 
class CIM_EndpointInLink : CIM_CollectedMSEs { 
      [Aggregate, Override("Collection"), Max (1), 
       Description ( 
        "The OSPF link.") ] 
    CIM_OSPFLink REF Collection; 

      [Override("Member"), 
       Description ( 
        "The OSPF protocol endpoint.") ] 
    CIM_OSPFProtocolEndpoint REF Member; 
}; 
  

// ==================================================================== 
// EndpointInArea 
// ==================================================================== 
   [Association, Aggregation, Composition, Experimental, 
    Version ("2.7.0"), Description ( 
     "This relation connects an OSPF endpoint to an area.") ] 
class CIM_EndpointInArea : CIM_Component { 
      [Aggregate, Override("GroupComponent"), Min (1), Max (1), 
       Description ( 
        "The OSPF area.") ] 
    CIM_OSPFArea REF GroupComponent; 

      [Override("PartComponent"), 
       Description ( 
        "The OSPF endpoint in the area.") ] 
    CIM_OSPFProtocolEndpointBase REF PartComponent; 
}; 
  

// ==================================================================== 
//    MPLS
// ==================================================================== 

// ==================================================================
// MPLSService
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This object class contains properties relating to the "
      "overall operation of MPLS on a router. This service is "
      "weak to the router (modeled as a ComputerSystem) via "
      "the association CIM_HostedService.") ]
class CIM_MPLSService: CIM_Service {
};


// ==================================================================
// MPLSTEService
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This object class contains properties relating to the "
      "overall operation of MPLS traffic engineering on a router. "
      "This is a specific subclass of MPLSService.") ]
class CIM_MPLSTEService: CIM_MPLSService {

      [Description (
      "Path computation may be configured to be more or less "
      "reactive to network state. It may be desirable to have "
      "different values on different LSRs. Also, certain "
      "tunnels may not be re-optimized. This property specifies "
      "the re-optimization frequency for the LSR, in seconds. "
      "Default is 3600 (1 hour). The maximum interval is "
      "604800 seconds (1 week). A value of 0 disables re-"
      "optimization."),
      Units ("Seconds"), MaxValue (604800) ]
   uint32 ReoptimizationFreq = 3600; 

      [Description (
      "Specifies the time interval in seconds at which traffic "
      "engineering information is flooded. Shorter intervals lead to "
      "more control overhead, more traffic in the network and more "
      "cycles wasted in processing this information at the routers. "
      "On the other hand longer intervals, make the route "
      "chosen for the tunnels to be less optimal with "
      "respect to the state of the network."),
      Units ("Seconds") ]
   uint16 FloodingInterval;

      [Description (
      "This property describes what happens when the MPLSTEService "
      "obtains knowledge about a new link coming into operation. "
      "The value 'OnLinkUp' (1) denotes that immediately after "
      "detecting the new link, a re-optimization step is performed."
      "'NextTimeInSchedule' (2) waits until the next time a re-"
      "optimization needs to take place. The frequency is  "
      "defined by the ReoptimizationFreq property. And, 'Manual"
      "Trigger' (3) means the re-optimization MUST be triggered "
      "by manual interaction such as a human operator triggering "
      "the re-optimization."),
      ValueMap {"0", "1", "2", "3"},
      Values {"Unknown",  "OnLinkUp", "NextTimeInSchedule", 
            "ManualTrigger"} ]
    uint16 ReoptimizationLinkUp;
};


// ==================================================================
// MPLSBuffers
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "MPLSBuffers represents buffer resources supporting Label "
      "Switch Routers (LSRs) and MPLS interfaces on these LSRs.") ]
class CIM_MPLSBuffers : CIM_BufferPool {

      [Description (
      "The maximum allocation multiplier (MAM) determines "  
      "the proportion of the buffer resource that is " 
      "available for allocation to MPLS tunnels/traffic trunks. "
      "The value of the MAM can be chosen so that a resource "
      "can be under-allocated or over-allocated. A resource is "
      "said to be under-allocated if the aggregate demands of "
      "all traffic trunks that can be allocated to it are "
      "always less than the capacity of the resource. "
      "A resource is said to be over-allocated if the "
      "aggregate demands of all traffic trunks allocated to "
      "it can exceed the capacity of the resource."), 
      Units ("Percent"), 
      MinValue (0), MaxValue (100) ]
   uint16 MaxAllocMultiplier;

      [Description (
      "  This property describes the resource classes that a "
      "buffer resource belongs to. In general, a resource "
      "can be assigned to more than one resource class, since "
      "the classes are coded in the individual bits of the "
      "property. Resource classes can be used to implement a "
      "variety of policies. From a Traffic Engineering "
      "perspective, they can be used to implement policies "
      "with regard to both traffic and resource oriented "
      "performance optimization. For example, resource class "
      "attributes can specify the relative preference of "
      "sets of resources for path placement of traffic trunks; "
      "explicitly restrict the placement of traffic trunks to "
      "specific subsets of resources; etc.") ]
   uint32 ResourceClasses;
};


// ==================================================================
// MPLSProtocolEndpoint
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This is the representation of an MPLS interface on a Label "
      "Switch Router (LSR).") ]
class CIM_MPLSProtocolEndpoint : CIM_ProtocolEndpoint {

      [Description (
      "If this property is true, the Label Min/Max In/Out values of "
      "the ProtocolEndpoint's MPLSCapabilities overrule the values "
      "specified for the Label Switched Router as a whole (where the "
      "LSR is indicated by the existence of an MPLSService). "
      "Note that the min/max in/out labels are only defined "
      "in the MPLSCapabilities class, which is associated with "
      "either an MPLSService or an MPLSProtocolEndpoint via the "
      "CIM_ElementCapabilities relationship.") ]
   boolean OverruleLSR;

      [Description (
      "This property indicates the total amount of usable "
      "bandwidth on this interface and is specified in "
      "kilobits per second (Kbps)."), 
      Units ("KiloBits per Second"),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceTotalBandwidth"} ]
   uint32 TotalBandwidth;

      [Description (
      "This property indicates the total amount of available "
      "bandwidth for the interface and is specified in "
      "kilobits per second (Kbps).  This value is calculated as "
      "the difference between the amount of bandwidth currently in "
      "use and that specified in TotalBandwidth. Note that this is "
      "not statistical data, since change is not frequent, "
      "and the property can be regarded as the 'current state' of " 
      "the network. It is intended that this data be used by "
      "applications doing centralized LSP provisioning."), 
      Units ("KiloBits per Second"),
      ModelCorrespondence {"CIM_MPLSProtocolEndpoint.TotalBandwidth"},
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceAvailableBandwidth"} ]
   uint32 AvailableBandwidth;

     [Description (
      "The ResourceClasses property defines a 32-bit vector " 
      "representing the classes associated with a link, "
      "where the link originates at this ProtocolEndpoint. A "
      "resource class is described in [RFC2702].") ]
   uint32 ResourceClasses;
};


// ==================================================================
// MPLSCapabilities
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This class specifies the capabilities of an MPLSService "
      "or MPLSProtocolEndpoint (interface) on a Label Switched "
      "Router (LSR). The association CIM_ElementCapabilities relates "
      "the instance with its MPLS Service and/or Endpoint.") ]
class CIM_MPLSCapabilities : CIM_Capabilities {

      [Description (
      "This is the minimum value of an MPLS label that this Endpoint "
      "or MPLSService is willing to receive. The values of an "
      "MPLSProtocolEndpoint may overrule the values specified for"
      "the LSR as a whole, based on the Endpoint's boolean "
      "property OverruleLSR."),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceLabelMinIn"} ]
   uint32 LabelMinIn;

      [Description (
      "This is the maximum value of an MPLS label that this Endpoint "
      "or MPLSService is willing to receive. The values of an "
      "MPLSProtocolEndpoint may overrule the values specified for "
      "the LSR as a whole, based on the Endpoint's boolean "
      "property OverruleLSR."),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceLabelMaxIn"} ]
   uint32 LabelMaxIn;

      [Description (
      "This is the minimum value of an MPLS label that this "
      "Endpoint or MPLSService is willing to send. The values of an "
      "MPLSProtocolEndpoint may overrule the values specified for"
      "the LSR as a whole, based on the Endpoint's boolean"
      "property OverruleLSR.") ,
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceLabelMinOut"} ]
   uint32 LabelMinOut;

      [Description (
      "This is the maximum value of an MPLS label that this "
      "Endpoint or MPLSService is willing to send. The values of "
      "an MPLSProtocolEndpoint may overrule the values specified for "
      "the LSR as a whole, based on the Endpoint's boolean "
      "property OverruleLSR."),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceLabelMaxOut"} ]
   uint32 LabelMaxOut;
};


// ==================================================================
// MPLSProtocolEndpointStats
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This class represents the statistics for an MPLSProtocol"
      "Endpoint.  The statistics are associated with the Endpoint "
      "using the relationship CIM_ElementStatisticalData.") ]
class CIM_MPLSProtocolEndpointStats : CIM_StatisticalData {

      [Gauge, Description (
      "This object contains the number of top-most labels "
      "that are in use at this point in time on this "
      "interface in the incoming direction."),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceInLabelsUsed"} ]
   uint32 InLabelsUsed;

      [Gauge, Description (
      "This object contains the number of top-most labels "
      "that are in use at this point in time on this "
      "interface in the outgoing direction."),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceOutLabelsUsed"} ]
   uint32 OutLabelsUsed;

      [Counter, Description (
      "This object counts the number of labeled packets "
      "that have been received on this interface and were "
      "discarded because there was no matching cross-connect "
      "entry."),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceFailedLabelLookup"} ]
   uint32 FailedLabelLookups;
   
      [Counter, Description (
      "This object counts the number of outgoing MPLS "
      "packets that required fragmentation before "
      "transmission on this interface."),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSInterfaceOutFragments"} ]
   uint32 NumberOfPacketsFragmented;
};


// ==================================================================
// MPLSLSP
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "  This class is used to represent an MPLS Label Switch Path "
      "(LSP). This is usually a path from an ingress to an egress "
      "label edge router, through a sequence of label switch routers. "
      "Sometimes an LSP is a series of hop-by-hop LSPs that go from "
      "the ingress to egress LSRs. For example, using unordered "
      "downstream unsolicited mode in LDP, the result is a "
      "series of 'mini' LSPs along the path, each with incoming and "
      "outgoing labels, and a FEC to accept traffic onto the 'mini' "
      "LSP at each hop. \n"
      "  An instance describes either an existing LSP, or the user's "
      "configurations of one to be established in the network. The "
      "boolean property, Established, indicates the state of the "
      "instance. \n"
      "  Note that MPLSLSP subclasses from EnabledLogicalElement. "
      "This allows (via inherited properties) the explicit "
      "enabling and disabling of the path, as well as the ability "
      "to request that the path be 'tested' or shut down.") ]
class CIM_MPLSLSP : CIM_EnabledLogicalElement {

      [Key, Description (
      "InstanceID opaquely identifies a unique instance of "
      "MPLSLSP.  The InstanceID must be unique within a namespace. "
      "In order to ensure uniqueness, the value of InstanceID "
      "should be constructed in the following manner:  " 
      "The instance id consists of the IPAddress of the "
      "ingress LSR, combined with the LocalLSPId found in "
      "this class.") ]
   string InstanceID;

      [Write, Description (
      "Boolean indicating whether or not the LSP currently exists "
      "in the network. Note that if the LSP is not established, "
      "then the OperationalStatus properties inherited from Managed"
      "SystemElement have no meaning.") ]
   boolean Established;

      [Description (
      "Property to indicate the nesting level of this LSP. Note "
      "that this a shortcut counting the number of instances of the "
      "MPLSLSPInLSP association. It is advantageous to determine the "
      "nesting level directly, instead of traversing several "
      "associations to do so.") ]
   uint16 NestingLevel;

      [Required, Description (
      "Property indicating a unique (per ingress LSR) LSP ID.") ]
   uint16 LocalLSPId;

      [Description (
      "The IP addresses of the ingress node(s) (LERs) of the path. "
      "This is an array to allow for multipoint LSPs.") ]
   string IngressIPAddresses[];

      [Description (
      "The IP addresses of the egress node(s) (LERs) of the path."
      "This is an array to allow for multipoint LSPs.") ]
   string EgressIPAddresses[];

      [Description (
      "Flag to indicate that the LSP ingress node may choose to "
      "reroute this LSP without tearing it down.") ]
   boolean IngressMayReroute;

      [Description (
      "Flag to indicate that this LSP should be restored "
      "automatically after a failure occurs.") ]
   boolean IsPersistent;

      [Description (
      "Flag to indicate whether the loosely-routed hops of this "
      "LSP are to be pinned.") ]
   boolean IsPinned;

      [Description (
      "Flag to indicate that transit routers are permitted to use a "
      "local repair mechanism which may result in violation of the "
      "explicit routing of this LSP. When a fault is detected on an "
      "adjacent downstream link or node, a transit router can "
      "reroute traffic for fast service restoration.") ]
   boolean LocalProtectionAvailable;

      [Description (
      "Flag to indicate whether the route is adaptive.") ]
   boolean IsAdaptive;
   
      [Description (
      "Flag to indicate whether the route for the LSP is selected "
      "dynamically based on routing protocols - as opposed to "
      "being specified 'statically' via configuration, where "
      "a network operator or other external entity specifies "
      "the path of the LSP hop by hop.") ]
   boolean IsDynamicallyRouted;
};

// ==================================================================
// RouteSpecifiedForLSP
// ==================================================================
      [Association, Description (
      "Associates an LSP with an administrator's MPLSSpecifiedRoute. "
      "Depending on the LSP's administrative state, the route may "
      "or may not be provisioned.") ]
class CIM_RouteSpecifiedForLSP : CIM_Dependency {
	[Override ("Antecedent"), Max (1), Description (
         "The route specification of the LSP.") ]
     CIM_MPLSSpecifiedRoute REF Antecedent;
	[Override ("Dependent"), Description (
	"The LSP whose route is specified.") ]
     CIM_MPLSLSP REF Dependent;
};

// ==================================================================
// MPLSLSPTunnel
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "From RFC3031, \"It is possible to implement a tunnel as an "
      "LSP, and use label switching rather than network layer "
      "encapsulation to cause the packet to travel through the "
      "tunnel.  The tunnel would be an LSP <R1, ..., Rn>, "
      "where R1 is the transmit endpoint of the tunnel, and Rn is the "
      "receive endpoint of the tunnel.  This is called an 'LSP Tunnel'.\" "
      "It is also known as a TE Tunnel.") ]
class CIM_MPLSLSPTunnel : CIM_MPLSLSP {

      [Description (
      "Reserved bandwidth for this tunnel in kilobits per second. In "
      "a load sharing environment, the bandwidth on each tunnel is set "
      "to be proportional to how traffic should be balanced. An LSR "
      "then load-shares into the tunnels based on the aggregate "
      "bandwidth. Note that it is possible to signal 0 bandwidth "
      "for a pure best-effort tunnel."), 
      Units ("KiloBits per Second") ]
   uint32 ReservedBandwidth;

      [Description (
      "Active bandwidth for this tunnel in kilobits per second. If "
      "the LSP Tunnel is not yet Established, then this property has no "
      "meaning. Knowing current Bandwidth is important because "
      "several path options may be configured for the tunnel. Note "
      "that it is possible to signal 0 bandwidth for a pure best-effort "
      "tunnel."), 
      Units ("KiloBits per Second") ]
   uint32 Bandwidth;

      [Description (
      "Due to changes in network and traffic characteristics, "
      "there may be a need to periodically change the paths of "
      "tunnels for optimization purposes. This should not be done "
      "too frequently as it could adversely affect the stability "
      "of the network. This property indicates how often such "
      "reoptimization should be performed for a specific tunnel. "
      "Note that the class, CIM_MPLSTEService, also has a "
      "reoptimization frequency property. The frequency specified "
      "in this class is specific to a particular tunnel, whereas "
      "the MPLSTEService's frequency is per service, on a "
      "Label Switched Router."),
      Units ("Seconds"), MaxValue (604800) ]
   uint32 ReoptimizationFreq = 3600;

      [Description (
      "Indicates whether the tunnel is a candidate for "
      "re-optimization at all. If true the ReoptimizationFreq "
      "peoperty should be taken into account. "
      "By default, a tunnel is re-optimized periodically.") ]
   boolean Lockdown = true;

      [Description (
      "  Resource classes and resource class affinities are "
      "described in [RFC2702]. Resource classes can be associated "
      "with links and advertised in routing protocols.  Resource "
      "class affinities are used by RSVP-TE [RFC3209]. "
      "In order to be used, a link MUST pass three tests. One "
      "of them is against this property. \n"
      "  ExcludeAllAffinity is one type of resource class affinity. "
      "It specifies a set of attribute filters for the TETunnel, "
      "and a match on any of the filters renders a link "
      "unacceptable (it is excluded for consideration). "
      "This test takes the form, "
      "(MPLSProtocolEndpoint.ResourceClass & ExcludeAllAffinity) "
      "== 0"),      
      MappingStrings {
       "MIB.IETF|MPLS-TE-MIB.MPLSTunnelExcludeAllAffinity"} ]
   uint32 ExcludeAllAffinity;

      [Description (
      "  Resource classes and resource class affinities are "
      "described in [RFC2702]. Resource classes can be associated "
      "with links and advertised in routing protocols.  Resource "
      "class affinities are used by RSVP-TE [RFC3209]. "
      "In order to be used, a link MUST pass three tests. One "
      "of them against this property. \n"
      "  IncludeAllAffinity is one type of resource class affinity. "
      "It specifies a set of attribute filters for the TETunnel, "
      "and all of the filters must match for a link to be "
      "acceptable (i.e., pass this test). If IncludeAllAffinity "
      "is zero, then the test automatically passes. The test "
      "takes the form, "
      "(IncludeAllAffinity == 0) ||  "
      "(((MPLSProtocolEndpoint.ResourceClass & IncludeAllAffinity) "
      "^ IncludeAllAffinity) == 0)"),
      MappingStrings {
       "MIB.IETF|MPLS-TE-MIB.MPLSTunnelIncludeAllAffinity"} ]
   uint32 IncludeAllAffinity;
   
      [Description (
      "  Resource classes and resource class affinities are "
      "described in [RFC2702]. Resource classes can be associated "
      "with links and advertised in routing protocols.  Resource "
      "class affinities are used by RSVP-TE [RFC3209]. "
      "In order to be used, a link MUST pass three tests. One "
      "of them against this property. \n"
      "  IncludeAnyAffinity is one type of resource class affinity. "
      "It specifies a set of attribute filters for the TETunnel, "
      "and any of the filters must match for a link to be "
      "acceptable (i.e., pass this test). If IncludeAllAffinity "
      "is zero, then the test automatically passes. The test "
      "takes the form, "
      "(IncludeAnyAffinity == 0) || "
      "((MPLSProtocolEndpoint.ResourceClass & IncludeAnyAffinity) "
      "!= 0"),
      MappingStrings {
       "MIB.IETF|MPLS-TE-MIB.MPLSTunnelIncludeAnyAffinity"} ]
   uint32 IncludeAnyAffinity;

      [Description (
      "Property to indicate the holding priority of an "
      "established LSP. If the LSP is not yet established, this "
      "property has no meaning. A new LSP is allowed to preempt the "
      "resources of this LSP only if its SetupPriority is smaller "
      "than the HoldingPriority of the established one. (See RFC3209 "
      "for additional information.) The value 0 is the highest "
      "priority."), 
      MappingStrings {"MIB.IETF|MPLS-TE-MIB.mplsTunnelHoldingPrio"}, 
      MinValue (0), MaxValue (7) ]
   uint8 HoldingPriority;
    
      [Description (
      "Guaranteed bandwidth LSPs can have setup and preemption "
      "priorities associated with them. These priorities determine "
      "if an existing LSP can be preempted by a new one. The "
      "SetupPriority of the new LSP is compared to the HoldingPriority "
      "of the established one, to determine if the new LSP "
      "can preempt the existing one. It does preempt if the "
      "SetupPriority in smaller than the HoldingPriority. "
      "Note that the value 0 is the highest priority."), 
      MinValue (0), MaxValue (7),
      MappingStrings {"MIB.IETF|MPLS-TE-MIB.mplsTunnelSetupPrio"} ]
   uint8 SetupPriority;
};


// ==================================================================
// MPLSTrafficTrunk
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "  An MPLS traffic trunk is an aggregation of traffic flows of "
      "the same forwarding equivalence class, which are placed inside "
      "one or more Label Switched Paths (LSPs). The LSPs to which "
      "a trunk is assigned are identified by the associations, "
      "MPLSBackupLSP and MPLSCurrentlyAssignedLSP. Quoting from "
      "RFC2702, \"A traffic trunk is an abstract representation of "
      "traffic to which specific characteristics can be associated. "
      "It is useful to view traffic trunks as objects that can be "
      "routed; that is, the path through which a traffic trunk "
      "traverses can be changed. In this respect, traffic trunks are "
      "similar to virtual circuits in ATM and Frame Relay networks. \n"
      "  An instance of MPLSTrafficTrunk describes either an existing "
      "trunk, or the user's configurations of one. The boolean "
      "property, Established, indicates the state of the instance.") ]
class CIM_MPLSTrafficTrunk : CIM_LogicalElement {

      [Key, Description (
      "The InstanceID is specified by the entity defining "
      "this class.") ]
   string InstanceID;

      [Write, Description (
      "Boolean indicating whether or not the trunk is currently "
      "signaled. Note that if the trunk is not established, then the "
      "OperationalStatus properties inherited from Managed"
      "SystemElement have no meaning.") ]
   boolean Established;

      [Description (
      "The Resilience property indicates the recovery procedure " 
      "to be applied to trunks whose paths are impacted by faults. " 
      "More specifically, it contains a boolean value that " 
      "determines whether the target trunk is to be rerouted "
      "or not, when segments of its path fail. If set to true, "
      "the trunk should be rerouted in case of failure; "
      "if false, it should not (which means that other means are "
      "applied, e.g. lower layer technologies for rerouting.)") ]
   boolean Resilience;

      [Description (
      "The bandwidth property denotes the complete bandwidth "
      "(in kilobits per second) required to be transported by the "
      "trunk. Note, that the bandwidth is not directly implemented/"
      "configured in a router, but the MplsLSPTunnel's Reserved"
      "Bandwidth property might be derived from this "
      "information."), 
      Units ("KiloBits per Second") ]
   uint32 Bandwidth;
 };


// ==================================================================
// MPLSPerformance
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This class contains performance information for MPLS entities "
      "such as an MPLS Endpoint or LSP Tunnel. The statistics are "
      "associated with the MPSL entity, using the general "
      "CIM_ElementStatisticalData relationship.") ]
class CIM_MPLSPerformance: CIM_StatisticalData {
      [Counter, Description (
      "Denotes the number of packets lost.") ]
   uint32 NumberOfPacketsLost;

      [Counter, Description (
      "Denotes the number of packets successfully transmitted.") ]
   uint32 NumberOfPacketsTransmitted;

      [Counter, Description (
      "Denotes the number of octets transmitted.") ]
   uint32 NumberOfOctets;

      [Gauge, Description (
      "Denotes the average delay of the packets transmitted in "
      "milliseconds."),
      Units ("MilliSeconds") ]
   uint16 Delay;

      [Description (
      "Denotes availability in hundredths of a percent."),
      MinValue (0), MaxValue (100000), 
      Units ("Hundredths of Percent") ]
   uint16 Availability;
};


// ==================================================================
// MPLSSegment
// ==================================================================
      [Experimental, Version ("2.7.0"), Abstract, Description (
      "This class is abstract, and generalizes the notion of incoming "
      "and outgoing MPLS segments on an interface/MPLSProtocolEndpoint. "
      "(Both In and Out Segment subclasses are derived from "
      "MPLSSegment.) An instance is defined in the context of an "
      "MPLSProtocolEndpoint. This is specified using the association, "
      "CIM_MPLSSegmentOnProtocolEP.") ]
class CIM_MPLSSegment : CIM_LogicalElement {
      [Key, Description (
      "InstanceID opaquely identifies a unique instance of "
      "MPLSSegment. The InstanceID must be unique within a "
      "namespace. In order to ensure uniqueness, the value of "
      "InstanceID should be constructed in the following manner: \n"
      "<ID of the MPLSProtocolEndpoint>.<InLabel or TopLabel>") ]
   string InstanceID;

      [Description (
      "Denotes the entity that created and is responsible "
      "for managing this Segment. Note that the MappingString "
      "is depending on the instantiated class and corresponds to "
      "InSegmentOwner or OutSegmentOwner."),
      ValueMap {"0", "1", "2", "3", "4", "5", "6", "7"},
      Values {"Unknown", "Other", "SNMP", "LDT", "RSVP",
          "CR-LDP", "Policy Agent", "CLI"}, 
      ModelCorrespondence {"CIM_MPLSSegment.OtherOwner"},
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSInSegmentOwner", 
       "MIB.IETF|MPLS-LSR-MIB.MPLSIOutSegmentOwner"} ]
   uint16 SegmentOwner;
   
      [Description (
      "If property SegmentOwner has a value 1 (\"Other\"), "
      "this property contains a string explaining the entity "
      "that created and manages the Segment."),
      ModelCorrespondence {"CIM_MPLSSegment.SegmentOwner"} ]
   string OtherOwner;
};


// ==================================================================
// MPLSSegmentStats
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "The class represents the statistics for an In or Out "
      "MPLSSegment. The statistics are associated to the Segment "
      "using the relationship CIM_ElementStatisticalData.") ]
class CIM_MPLSSegmentStats : CIM_StatisticalData {

      [Counter, Description (
      "This value represents the total number of octets "
      "received/sent by this Segment. Whether it denotes "
      "In or Out Segments depends on the instance "
      "associated with MPLSSegmentStats."),
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSInSegmentOctets", 
       "MIB.IETF|MPLS-LSR-MIB.MPLSIOutSegmentOctets"} ]
   uint32 NumberOfOctets;

      [Counter, Description (
      "Total number of packets received/sent by this Segment. "
      "Whether this value denotes In or Out Segments depends on "
      "the instance associated with MPLSSegmentStats."), 
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSInSegmentPackets", 
       "MIB.IETF|MPLS-LSR-MIB.MPLSOutSegmentPackets"} ]
   uint32 NumberOfPackets;

      [Counter, Description (
      "The number of errored packets received/sent on this Segment."
      "Whether this value denotes In or Out Segments depends on "
      "the instance associated with MPLSSegmentStats."), 
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSInSegmentErrors",
       "MIB.IETF|MPLS-LSR-MIB.MPLSIOutSegmentErrors"} ]
   uint32 NumberOfErrors;

      [Counter, Description (
      "The number of labeled packets received/sent on this "
      "Segment, which were chosen to be discarded even "
      "though no errors had been detected to prevent their "
      "being transmitted.  One possible reason for "
      "discarding such a labeled packet could be to free up "
      "buffer space. Whether this value denotes In or Out "
      "Segments depends on the instance associated with "
      "MPLSSegmentStats."), 
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSInSegmentDiscards", 
       "MIB.IETF|MPLS-LSR-MIB.MPLSIOutSegmentDiscards"} ]
   uint32 NumberOfDiscards;
};


// ==================================================================
// MPLSInSegment
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This class represents an incoming Segment on an MPLS "
      "interface.") ]
class CIM_MPLSInSegment : CIM_MPLSSegment {

      [Required, Description (
      "The incoming label for this segment."),
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSInSegmentLabel"} ]
   uint32 InLabel;

      [Description (
      "The number of labels to pop from the incoming packet. "
      "Normally only the top label is popped from the packet, and "
      "used for all switching decisions. Note that technologies which "
      "do not support label popping should leave this value at its "
      "default (1)."),
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSInSegmentNPop"} ]
   uint32 NPop = 1;

      [Description (
      "Describes the address type expected on the incoming Segment. "
      "This is used when the last label is popped to know to which "
      "IP stack the packet is forwarded."),
      ValueMap {"0", "1", "2"},
      Values {"Unknown", "IPv4", "IPv6"},
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSInSegmentAddrFamily"} ]
   uint16 AddressType;
};


// ==================================================================
// MPLSOutSegment
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This class represents an outgoing Segment on an MPLS "
      "interface.") ]
class CIM_MPLSOutSegment : CIM_MPLSSegment {

      [Description (
      "This value indicates whether or not a top label "
      "should be pushed onto the outgoing packet's label "
      "stack.  The value of this variable must be set to "
      "true if the outgoing interface does not support pop-"
      "and-go (for example an ATM interface) or if it is a "
      "tunnel origination."),
      MappingStrings {
       "MIB.IETF|MPLS-LSR-MIB.MPLSOutSegmentPushTopLabel"} ]
   boolean PushTopLabel = true;

      [Required, Description (
      "If the property, PushTopLabel, is true then this "
      "represents the label that should be pushed onto the "
      "top of the outgoing packet's label stack. If PushTopLabel "
      "is false, then the value should be 0."),
      ModelCorrespondence {"CIM_MPLSOutSegment.PushTopLabel"}, 
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSOutSegmentTopLabel"} ]
   uint32 TopLabel;
};


// ==================================================================
// MPLSCrossConnect
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "This class specifies information for switching "
      "between Segments within a LSR. It is scoped by a Computer"
      "System, that is the Label Switched Router, via "
      "the HostedService association. Specific In/Out Segments are "
      "associated with the cross-connect using the relationship, "
      "MPLSSegmentInXC. The service can support point-to-point, "
      "point-to-multipoint and multipoint-to-point connections "
      "by defining multiple instances of the association. "
      "CrossConnect Services can be aggregated into an "
      "overarching MPLSService using the CIM_ServiceComponent "
      "association. And, the LSP to which the CrossConnect "
      "belongs is indicated by the association, CrossConnectLSP.") ]
class CIM_MPLSCrossConnect : CIM_Service {

      [Description (
      "Denotes whether or not this CrossConnect entry and "
      "associated In and Out Segments should be restored "
      "automatically after failures."),
      MappingStrings {"MIB.IETF|MPLS-LSR-MIB.MPLSXCIsPersistent"} ]
   boolean IsPersistent;

      [Description (
      "Identifies a stack of labels to be pushed beneath the top "
      "label. Note that the top label identified in an instance of "
      "OutSegment ensures that all the components of a "
      "multipoint-to-point connection have the same "
      "outgoing label. This array is 'Ordered' to maintain the "
      "sequence of entries."),
      ArrayType ("Ordered") ]
   uint16 LabelStack[];
};


// ==================================================================
// MPLSQosPRTrfcProf
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "A QoS traffic profile, which is associated to an LSP when "
      "QoS is guaranteed. The association ElementSetting "
      "ties the Setting to the LSP.") ]
class CIM_MPLSQosPRTrfcProf : CIM_SettingData {

      [Description ("The peak traffic rate in kilobits per second."),
      Units ("KiloBits per Second") ]
   uint32 PRRate;

      [Description ("Traffic burst size in bytes."),
      Units ("Bytes") ]
   uint16 PRNormalBurst;

      [Description ("Traffic excess burst in bytes."), 
      Units ("Bytes") ]
   uint16 PRExcessBurst;
};


// ==================================================================
// MPLSCRLSPTrfcProf
// ==================================================================
      [Experimental, Version ("2.7.0"), Description (
      "Class to represent the Constraint-based Routed LSP (CR-LSP) "
      "traffic parameters as specified in [RFC3212].") ]
class CIM_MPLSCRLSPTrfcProf : CIM_MPLSQosPRTrfcProf {

      [Description (
      "Property to indicate at what granularity the CDR (allocated to "
      "the CR-LSP) is made available."),
      ValueMap {"0", "1", "2"},
      Values {"Unspecified", "Frequently", "Very Frequently"} ]
   uint16 CRLSPFrequency;

      [Description (
      "Property to indicate the CR-LSP's relative share (in percent) "
      "of the possible excess bandwidth above its committed rate."),
      MinValue (0), MaxValue (100),
      Units ("Percent") ]
   uint8 CRLSPWeight;

      [Description (
      "Property to indicate the CR-LSP's committed data rate in bytes "
      "per second."),
      Units ("Bytes per Second") ]
   uint16 CRLSPCommitedDataRate;

      [Description (
      "Property to indicate the CR-LSP's committed burst size in "
      "bytes."),
      Units ("Bytes") ]
   uint16 CRLSPCommitedBurstSize;
};


// ==================================================================
// MPLSEndpointResources
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "This association indicates the buffer resources explicitly "
      "supporting an MPLS interface.") ]
class CIM_MPLSEndpointBuffers : CIM_Dependency {

      [Override ("Antecedent"), Description (
      "The MPLSBuffer supporting the MPLS interface.") ]
 CIM_MPLSBuffers REF Antecedent;

      [Override ("Dependent"), Description (
      "The MPLSProtocolEndpoint dependent on the buffer.") ]
 CIM_MPLSProtocolEndpoint REF Dependent;
};


// ==================================================================
// MPLSSegmentOnProtocolEP
// ==================================================================
      [Association, Experimental, Version ("2.7.0"),  
      Description (
      "An MPLSSegment is defined in the context of an MPLS "
      "Endpoint. This association makes that relationship explicit.") ]
class CIM_MPLSSegmentOnProtocolEP : CIM_Dependency {

      [Override ("Antecedent"), Min (1), Max (1), Description (
      "The MPLSProtocolEndpoint which scopes the Segment.") ]
   CIM_MPLSProtocolEndpoint REF Antecedent;

      [Override ("Dependent"), Description (
      "An MPLSSegment on the ProtocolEndpoint.") ]
   CIM_MPLSSegment REF Dependent;
};


// ==================================================================
// MPLSSegmentInXC
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "Defines the association between an In or Out Segment and a "
      "CrossConnect Service. The Segment is dependent on the Cross"
      "Connect for switching within the LSR.") ]
class CIM_MPLSSegmentInXC : CIM_Dependency {

      [Override ("Antecedent"), Description (
      "The MPLSCrossConnect.") ]
   CIM_MPLSCrossConnect REF Antecedent;

      [Override ("Dependent"), Description (
      "An MPLSSegment dependent on the CrossConnect for switching.") ]
   CIM_MPLSSegment REF Dependent;
};


// ==================================================================
// MPLSFilterAtXC
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "The association denotes a filter list defining what traffic "
      "is mapped into the CrossConnect Service. A filter list is "
      "associated with the CrossConnect at the originating LSR.") ]
class CIM_MPLSFilterAtXC : CIM_Dependency {

      [Override ("Antecedent"), Max (1), Description (
      "A FilterList defining what traffic is mapped into "
      "the CrossConnect Service.") ]
   CIM_FilterList REF Antecedent;

      [Override ("Dependent"), Description (
      "The CrossConnect whose traffic is filtered.") ]
   CIM_MPLSCrossConnect REF Dependent;
};


// ==================================================================
// MPLSFecOfTrafficTrunk
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "This association defines the forwarding equivalency class "
      "for a traffic trunk. It is typically just an IP destination "
      "address - and can be defined using a FilterList. Although "
      "this is not truly a filter on the trunk, the FilterList class "
      "is reused to describe the traffic on the trunk.") ]
class CIM_MPLSFecOfTrafficTrunk : CIM_Dependency {

      [Override ("Antecedent"), Max (1), Description (
      "The FilterList defining the FEC of the traffic trunk.") ]
   CIM_FilterList REF Antecedent;

      [Override ("Dependent"), Description (
      "The MPLSTrafficTrunk.") ]
   CIM_MPLSTrafficTrunk REF Dependent;
};


// ==================================================================
// MPLSFecOfLSP
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "This association defines the forwarding equivalency class "
      "for an LSP. Although this is not truly a filter on the LSP, "
      "the FilterList class is reused to describe the traffic "
      "to be carried by the LSP.") ]
class CIM_MPLSFecOfLSP : CIM_Dependency {

      [Override ("Antecedent"), Max (1), Description (
      "The FilterList defining the FEC of the LSP.") ]
   CIM_FilterList REF Antecedent;

      [Override ("Dependent"), Description ("The LSP.") ]
   CIM_MPLSLSP REF Dependent;
};


// ==================================================================
// MPLSBiDirectionalTrunks
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "Traffic trunks are unidirectional. This association relates "
      "a traffic trunk with another trunk that carries traffic in "
      "the reverse direction, creating a bi-directional connection.") ]
class CIM_MPLSBiDirectionalTrunks : CIM_Dependency {

      [Override ("Antecedent"), Max (1), Description (
      "A traffic trunk which operates in the reverse direction of "
      "the Dependent.") ]
   CIM_MPLSTrafficTrunk REF Antecedent;

      [Override ("Dependent"), Max (1), Description (
      "A traffic trunk which operates in the reverse direction of "
      "the Antecedent.") ]
   CIM_MPLSTrafficTrunk REF Dependent;
};


// ==================================================================
// MPLSCurrentlyAssignedLSP
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "Associates a traffic trunk with an LSP that is currently "
      "carrying its traffic.") ]
class CIM_MPLSCurrentlyAssignedLSP : CIM_Dependency {

      [Override ("Antecedent"), Description (
      "The LSP carrying the traffic of the trunk.") ]
   CIM_MPLSLSP REF Antecedent;

      [Override ("Dependent"), Description (
      "The MPLSTrafficTrunk which is signaling using the LSP.") ]
   CIM_MPLSTrafficTrunk REF Dependent;

      [Description (
      "The preference for the use of the LSP, if more than one LSP "
      "is available to a trunk. Possible values are 0 to 7, with "
      "7 indicating the highest preference."),
      MinValue (0), MaxValue (7) ]
   uint16 Preference;

      [Write, Description (
      "This property is used to indicate the relative proportion "
      "of traffic to be carried by parallel LSPs, specified "
      "as a percentage from 0 to 100. The value is defined by the "
      "network user/administrator to indicate how a LSPtunnel's "
      "bandwidth should be set on a router. It allows load "
      "distribution across multiple parallel LSP tunnels, between two "
      "nodes. Quoting from RFC2702, \"In many practical situations, "
      "the aggregate traffic between two nodes may be such that "
      "no single link can carry the load. In this case, "
      "the only feasible solution is to appropriately divide the aggregate "
      "traffic into sub-streams and route the sub-streams through "
      "multiple paths between the two nodes. This problem can be "
      "addressed by instantiating multiple LSP tunnels between the "
      "two nodes, such that each traffic trunk carries a proportion "
      "of the aggregate traffic.\" The proportion of traffic "
      "carried by each such LSP tunnel is specified by the "
      "TrafficProportion property."), 
      Units ("Percent"), MinValue (0), MaxValue (100) ]
   uint8 TrafficProportion;
};


// ==================================================================
// MPLSBackupLSP
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "Identifies an LSP as a backup LSP for a traffic trunk.") ]
class CIM_MPLSBackupLSP : CIM_Dependency {

      [Override ("Antecedent"), Description (
      "The backup LSP for the traffic trunk.") ]
   CIM_MPLSLSP REF Antecedent;

      [Override ("Dependent"), Description (
      "The traffic trunk using the LSP for backup.") ]
   CIM_MPLSTrafficTrunk REF Dependent;

      [Description (
      "The preference for the use of the LSP, if more than one LSP "
      "is available to a trunk. Possible values are 0 to 7, with "
      "7 indicating the highest preference."),
      MinValue (0), MaxValue (7) ]
   uint16 Preference;
};


// ==================================================================
// MPLSLSPInLSP
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Aggregation, 
      Composition, Description (
      "Defines the nesting relationship of LSPs within LSPs. "
      "Arbitrary hierarchies of LSPs are possible.") ]
class CIM_MPLSLSPInLSP : CIM_Component {

      [Override ("GroupComponent"), Description (
      "The higher-level LSP containing another LSP.") ]
   CIM_MPLSLSP REF GroupComponent;

      [Override ("PartComponent"), Description (
      "The LSP that is nested in the one referenced as "
      "GroupComponent.") ]
   CIM_MPLSLSP REF PartComponent;
};


// ==================================================================
// MPLSCrossConnectLSP
// ==================================================================
      [Association, Experimental, Version ("2.7.0"), Description (
      "Defines the LSP to which the CrossConnect belongs.") ]
class CIM_MPLSCrossConnectLSP : CIM_Dependency {

      [Override ("Antecedent"), Max (1), Description ("The LSP.") ]
   CIM_MPLSLSP REF Antecedent;

     [Override ("Dependent"), Description (
     "The CrossConnect belonging to the LSP.") ]
   CIM_MPLSCrossConnect REF Dependent;

     [Description (
     "The XcType property defines whether a CrossConnect is at "
     "the terminating end (\"Term\", 1), or originating end "
     "(\"Orig\", 2) of an LSP. A value of 4, \"Normal\", "
     "indicates the CrossConnect is switching through an LSP "
     "on an intermediate node. A value of 3, \"Special\", "
     "implies a terminating LSP for special traffic, e.g. "
     "signaling neighbor discovery, etc. Reserved MPLS labels "
     "with values 0 through 15 are used."),
     ValueMap {"1", "2", "3", "4"},
     Values {"Term", "Orig", "Special", "Normal"} ]
   uint16 XcType;

     [Description (
     "This property defines the order of the CrossConnects in an"
     "LSP. An incrementally higher number indicates the next Cross"
     "Connect in the ordered sequence. Note that the first "
     "CrossConnect must be of type 'Orig', and the last of "
     "type 'Term'.") ]
   uint16 XcOrder;
};

// ===================================================================
// end of file
// ===================================================================

